var gA = {};
function gB() {
  gA.total = Object.keys(gA).length;
  if (gA["v" + mX]) {
    (mP = gA["v" + mX]).animearray.forEach(function (h, i) {
      h.soundA = h.name + "_a";
      h.soundB = h.uniqsnd ? h.name + "_a" : h.name + "_b";
      h.anime = h.name + ".png";
      h.animeData = h.name + ".json";
    });
    mP.bonusarray = mP.bonusarray || [];
    mP.bonusarray.forEach(function (h, i) {
      h.src = h.name + "." + iw;
    });
    mP.recmaxloop = Math.round(180 / (mP.looptime / 1000));
    mP.recminloop = Math.round(20 / (mP.looptime / 1000));
    mP.recmintime = Math.round(mP.recminloop * (mP.looptime / 1000));
    mP.recminloop = ir || ix ? 0 : mP.recminloop;
  } else {
    jv({
      error: "init versions",
      action: "kill"
    });
  }
}
function gC() {}
gA.v1 = {
  name: "Alpha",
  version: 1,
  date: "2009",
  folder: "asset-v1/",
  looptime: 5333,
  bpm: 90,
  totalframe: 260,
  bonusloopA: false,
  bonusendloopA: false,
  colors: ["#919191", "#5f5f5f", "#4b4b4b", "#373737", "#232323", "#121212"],
  animearray: [{
    name: "1_lead",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "2_deux",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "3_kosh",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "4_shpok",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "5_tom",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "6_nouana",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "7_scratch",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "8_trill",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "9_bass",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "10_uh",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "11_nugu",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "12_guit",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "13_tromp",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "14_pouin",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "15_tung",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "16_aoun",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "17_hum",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "18_get",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "19_tellme",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "20_make",
    color: "#828282",
    uniqsnd: true
  }],
  bonusarray: [{
    title: "The Choir",
    name: "v1-b1-choir",
    code: [2, 4, 8, 11, 15],
    sound: "bonus-choir",
    loop: 2,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m32.92 42.22c-3.19-3.74-3.2-8.43-1.45-11.1 2.59-3.96 4.38-6.05 4.38-6.05s4.28 2.52 4.43 8.48c.06 2.28-.3 5.78-3.2 8.67 3.36-.6 6.69-2.55 8.53-5.39 2.66-4.11 2.98-9.81.48-14.12-4.33-7.47-13.17-11.29-13.17-11.29s.61 5.59-7.67 13.22c-3.73 3.43-3.36 9.32-.08 12.72 2.02 2.1 4.62 3.91 7.76 4.87z\"/><path fill=\"#ffffff\" d=\"m45.09 46.81h-20.18c-1.21 0-2.19.93-2.19 2.07v6.49h24.56v-6.49c0-1.15-.98-2.07-2.19-2.07z\"/></svg>"
  }, {
    title: "The Sailor",
    name: "v1-b2-sailor",
    code: [10, 11, 14, 15, 20],
    sound: "bonus-sailor",
    predrop: "predrop-sailor",
    loop: 2,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m49.71 41.97c-3.61 3.07-7.83 5.1-11.61 5.85v-19.95h10.71c.97 0 1.75-.78 1.75-1.75s-.78-1.75-1.75-1.75h-10.32c1.67-1.12 2.76-3.03 2.76-5.19 0-3.45-2.8-6.25-6.25-6.25s-6.25 2.8-6.25 6.25c0 2.16 1.1 4.06 2.76 5.19h-10.32c-.97 0-1.75.78-1.75 1.75s.78 1.75 1.75 1.75h10.71v19.95c-3.78-.76-8-2.78-11.61-5.85l-5.32 1.4c5.32 7.08 14.58 11.68 20.03 12 5.44-.33 14.7-4.93 20.03-12zm-14.72-25.53c1.52 0 2.75 1.22 2.76 2.74 0 1.52-1.23 2.75-2.74 2.76-1.52 0-2.75-1.22-2.76-2.74 0-1.52 1.22-2.75 2.74-2.76z\"/></svg>"
  }, {
    title: "Santa",
    name: "v1-b3-santa",
    code: [1, 9, 13, 14, 16],
    sound: "bonus-santa",
    predrop: "predrop-santa",
    loop: 2,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m15.77 43.6h38.46c-6.92-3.31-11.83-8.45-11.83-9.37h7.28c-5.61-3.12-10.31-8.08-10.31-9.05h7.17c-7.57-4.18-11.08-11.98-11.53-12.25-.45.27-3.96 8.07-11.53 12.25h7.17c0 .96-4.7 5.93-10.31 9.05h7.28c0 .92-4.92 6.06-11.83 9.37z\"/><path fill=\"#ffffff\" d=\"m32.28 48.1h5.44v6.46h-5.44z\"/></svg>"
  }]
};
gA.v2 = {
  name: "Little Miss",
  version: 2,
  date: "2012",
  folder: "asset-v2/",
  looptime: 4800,
  bpm: 100,
  totalframe: 232,
  bonusloopA: true,
  bonusendloopA: false,
  colors: ["#EB4B4B", "#C32D2D", "#9B2323", "#691E1E", "#371919", "#1c0d0d"],
  animearray: [{
    name: "beat1_boom",
    color: "#828282",
    uniqsnd: false
  }, {
    name: "beat2_kashi",
    color: "#828282",
    uniqsnd: false
  }, {
    name: "beat3_paomeu",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "beat4_ptttpeu",
    color: "#828282",
    uniqsnd: false
  }, {
    name: "beat5_slupttt",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "effet1_poulll",
    color: "#828282",
    uniqsnd: false
  }, {
    name: "effet2_tucati",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "effet3_tuilopta",
    color: "#828282",
    uniqsnd: false
  }, {
    name: "effet4_tululou",
    color: "#828282",
    uniqsnd: true
  }, {
    name: "effet5_tumttt",
    color: "#828282",
    uniqsnd: false
  }, {
    name: "melo1_nananana",
    color: "#828282",
    uniqsnd: false
  }, {
    name: "melo2_pelulu",
    color: "#828282",
    uniqsnd: false
  }, {
    name: "melo3_siffle",
    color: "#828282",
    uniqsnd: false
  }, {
    name: "melo4_tatouti",
    color: "#828282",
    uniqsnd: false
  }, {
    name: "melo5_tvutvutvu",
    color: "#828282",
    uniqsnd: false
  }, {
    name: "coeur1_oaaah",
    color: "#828282",
    uniqsnd: false
  }, {
    name: "coeur2_cougou",
    color: "#828282",
    uniqsnd: false
  }, {
    name: "coeur3_porticoeur",
    color: "#828282",
    uniqsnd: false
  }, {
    name: "voix1_isit",
    color: "#828282",
    uniqsnd: false
  }, {
    name: "voix2_uare",
    color: "#828282",
    uniqsnd: false
  }],
  bonusarray: [{
    title: "Satisfied",
    name: "v2-b1-satisfy",
    code: [1, 4, 6, 9, 12],
    sound: "bonus-satisfy",
    predrop: "predrop",
    loop: 4,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m50.22 34.18-11.84-2.56-2.56-11.86c-.19-.88-1.44-.88-1.63 0l-2.56 11.86-11.84 2.56c-.88.19-.88 1.44 0 1.63l11.84 2.56 2.56 11.86c.19.88 1.44.88 1.63 0l2.56-11.86 11.84-2.56c.88-.19.88-1.44 0-1.63z\"/><path fill=\"#ffffff\" d=\"m43.66 28.13c1.24 0 2.25-1.01 2.24-2.26s-1.01-2.25-2.26-2.24-2.25 1.01-2.24 2.26c0 1.24 1.01 2.25 2.26 2.24z\"/><path fill=\"#ffffff\" d=\"m50.41 22.15c1.24 0 2.25-1.01 2.24-2.26s-1.01-2.25-2.26-2.24-2.25 1.01-2.24 2.26c0 1.24 1.01 2.25 2.26 2.24z\"/><path fill=\"#ffffff\" d=\"m19.07 47.13c-1.24 0-2.25 1.01-2.24 2.26 0 1.24 1.01 2.25 2.26 2.24 1.24 0 2.25-1.01 2.24-2.26s-1.01-2.25-2.26-2.24z\"/><path fill=\"#ffffff\" d=\"m25.82 41.15c-1.24 0-2.25 1.01-2.24 2.26 0 1.24 1.01 2.25 2.26 2.24 1.24 0 2.25-1.01 2.24-2.26s-1.01-2.25-2.26-2.24z\"/><path fill=\"#ffffff\" d=\"m43.65 41.15c-1.24 0-2.25 1.01-2.24 2.26 0 1.24 1.01 2.25 2.26 2.24 1.24 0 2.25-1.01 2.24-2.26s-1.01-2.25-2.26-2.24z\"/><path fill=\"#ffffff\" d=\"m50.4 47.13c-1.24 0-2.25 1.01-2.24 2.26 0 1.24 1.01 2.25 2.26 2.24 1.24 0 2.25-1.01 2.24-2.26s-1.01-2.25-2.26-2.24z\"/><path fill=\"#ffffff\" d=\"m25.84 28.13c1.24 0 2.25-1.01 2.24-2.26s-1.01-2.25-2.26-2.24-2.25 1.01-2.24 2.26c0 1.24 1.01 2.25 2.26 2.24z\"/><path fill=\"#ffffff\" d=\"m19.09 22.15c1.24 0 2.25-1.01 2.24-2.26s-1.01-2.25-2.26-2.24-2.25 1.01-2.24 2.26c0 1.24 1.01 2.25 2.26 2.24z\"/></svg>"
  }, {
    title: "Little Miss",
    name: "v2-b2-miss",
    code: [5, 6, 7, 13, 15],
    sound: "bonus-miss",
    predrop: "predrop",
    loop: 4,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m16 32.5 19 23 19-23z\"/><path fill=\"#ffffff\" d=\"m28.25 18 6.75 10 6.75-10z\"/><path fill=\"#ffffff\" d=\"m54 28-6.75-10-6.75 10z\"/><path fill=\"#ffffff\" d=\"m29.5 28-6.75-10-6.75 10z\"/></svg>"
  }, {
    title: "Why this world",
    name: "v2-b3-world",
    code: [6, 8, 9, 14, 18],
    sound: "bonus-world",
    predrop: "predrop",
    loop: 4,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m53.68 36.92s2.05-9.42.3-13.65c-1.75-4.22-7.57-8.83-7.57-8.83l-6.18 2.17 2.61 4.69-26.77 4.68c-.42.07-.7.47-.63.9l.45 2.55c.07.42.47.7.89.63l15.9-2.67-10.73 24.33c-.39.88.01 1.92.89 2.31s1.92-.01 2.31-.9l9.81-22.26 9.91 22.47c.39.88 1.42 1.29 2.31.9.88-.39 1.28-1.42.89-2.31l-11.14-25.26 8.51-1.43 8.24 11.67z\"/></svg>"
  }]
};
gA.v3 = {
  name: "Sunrise",
  version: "3",
  date: "2013",
  folder: "asset-v3/",
  looptime: 8000,
  bpm: 120,
  totalframe: 384,
  bonusloopA: true,
  bonusendloopA: true,
  colors: ["#6E96A0", "#3C646E", "#28505A", "#143C46", "#002832", "#01141A"],
  animearray: [{
    name: "drum1_ballet",
    color: "#1EB482",
    uniqsnd: true
  }, {
    name: "drum2_kick",
    color: "#1EB482",
    uniqsnd: true
  }, {
    name: "drum3_snare",
    color: "#1EB482",
    uniqsnd: true
  }, {
    name: "drum4_lead",
    color: "#1EB482",
    uniqsnd: true
  }, {
    name: "drum5_charley",
    color: "#1EB482",
    uniqsnd: true
  }, {
    name: "effet1_long",
    color: "#50B4E6",
    uniqsnd: false
  }, {
    name: "effet2_daft1",
    color: "#50B4E6",
    uniqsnd: true
  }, {
    name: "effet3_tududu",
    color: "#50B4E6",
    uniqsnd: true
  }, {
    name: "effet4_daft2",
    color: "#50B4E6",
    uniqsnd: true
  }, {
    name: "effet5_rythme",
    color: "#50B4E6",
    uniqsnd: false
  }, {
    name: "melo1_tuu",
    color: "#FA5050",
    uniqsnd: true
  }, {
    name: "melo2_indien",
    color: "#FA5050",
    uniqsnd: true
  }, {
    name: "melo3_armo",
    color: "#FA5050",
    uniqsnd: true
  }, {
    name: "melo4_clav",
    color: "#FA5050",
    uniqsnd: false
  }, {
    name: "melo5_siffle",
    color: "#FA5050",
    uniqsnd: true
  }, {
    name: "voix1_waya",
    color: "#E6C832",
    uniqsnd: true
  }, {
    name: "voix2_ride",
    color: "#E6C832",
    uniqsnd: false
  }, {
    name: "voix3_over",
    color: "#E6C832",
    uniqsnd: false
  }, {
    name: "voix4_colors",
    color: "#E6C832",
    uniqsnd: true
  }, {
    name: "voix5_sunrise",
    color: "#E6C832",
    uniqsnd: false
  }],
  bonusarray: [{
    title: "Lill Child",
    name: "v3-b1-child",
    code: [2, 4, 9, 14, 16],
    sound: "bonus-child",
    predrop: "predrop",
    loop: 4,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m48.5 35.75c-1.8-1.84-1.36-4.24-.98-5.44.1-.3-.18-.6-.49-.52-1.22.29-3.63.75-4.91-.98-1.6-2.16-.58-4.2.16-5.19.19-.25.05-.6-.26-.65-1.03-.18-2.88-.66-3.85-1.93-1.27-1.65-.75-3.49-.31-4.79-1.99-.3-4.08-.29-6.23.1-8.34 1.51-14.78 8.57-15.48 17.02-.94 11.21 7.88 20.6 18.89 20.6 9.99 0 18.17-7.73 18.9-17.53-1.38.38-3.97.81-5.43-.68zm-13.47 5.74c-3.58 0-6.49-2.91-6.49-6.49s2.91-6.49 6.49-6.49 6.49 2.91 6.49 6.49-2.91 6.49-6.49 6.49z\"/><path fill=\"#ffffff\" d=\"m44.79 16.11c.33.1.63.14.77-.13s1.93-3.98 2.1-4.35-.79-1.2-1.76-1.44c-1.17-.29-2.04-.28-2.29.23-.15.3-.24 4.31-.21 4.62.04.3 1.05.98 1.38 1.08z\"/><path fill=\"#ffffff\" d=\"m49.02 23.62c.93.25 3.01-.24 3.27-.79.25-.55.98-6.72-1.08-6.21-1.6.4-2.82 1.05-3.34 2.7-.42 1.34-.16 3.94 1.15 4.3z\"/></svg>"
  }, {
    title: "Dance",
    name: "v3-b2-dance",
    code: [2, 3, 5, 6, 14],
    sound: "bonus-dance",
    predrop: "predrop",
    loop: 4,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m19.24 40.25c-2.4 2.4-4.5 8.4-4.5 8.4s6-2.1 8.4-4.5z\"/><path fill=\"#ffffff\" d=\"m25.97 46.98c-2.4 2.4-4.5 8.4-4.5 8.4s6-2.1 8.4-4.5z\"/><path fill=\"#ffffff\" d=\"m46.11 37.37 6.67-11.07c1.63-2.7 1.38-8.12.26-9.23s-6.52-1.36-9.23.26l-11.07 6.67-12.18-.23-5.71 5.71 12.89 12.89 12.89 12.89 5.71-5.71zm-10.82-10.82 11.07-6.67 3.87 3.87-6.69 11.05z\"/></svg>"
  }, {
    title: "Sunrise",
    name: "v3-b3-sunrise",
    code: [6, 11, 13, 16, 18],
    sound: "bonus-sunrise",
    predrop: "predrop",
    loop: 4,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m47 27h-12-12l-3 9.5h15 15z\"/><path fill=\"#ffffff\" d=\"m53 41h-18-18l-3 10h21 21z\"/><path fill=\"#ffffff\" d=\"m27 13.5v9h4.75v-4.5h6.5v4.5h4.75v-9z\"/></svg>"
  }]
};
gA.v4 = {
  name: "The Love",
  version: "4",
  date: "2014",
  folder: "asset-v4/",
  looptime: 8000,
  bpm: 120,
  totalframe: 384,
  bonusloopA: true,
  bonusendloopA: false,
  colors: ["#D8A365", "#BA7B3D", "#A16224", "#6A3501", "#422101", "#201200"],
  animearray: [{
    name: "drum1_kick",
    color: "#E5A90E",
    uniqsnd: false
  }, {
    name: "drum2_snare",
    color: "#E5A90E",
    uniqsnd: false
  }, {
    name: "drum3_touti",
    color: "#E5A90E",
    uniqsnd: true
  }, {
    name: "drum4_charley",
    color: "#E5A90E",
    uniqsnd: true
  }, {
    name: "drum5_chatom",
    color: "#E5A90E",
    uniqsnd: false
  }, {
    name: "effect1_bass",
    color: "#0CB6CB",
    uniqsnd: false
  }, {
    name: "effect2_enigmatic",
    color: "#0CB6CB",
    uniqsnd: true
  }, {
    name: "effect3_cry",
    color: "#0CB6CB",
    uniqsnd: true
  }, {
    name: "effect4_odoyouno",
    color: "#0CB6CB",
    uniqsnd: true
  }, {
    name: "effect5_oua",
    color: "#0CB6CB",
    uniqsnd: true
  }, {
    name: "melo1_toun",
    color: "#F42828",
    uniqsnd: false
  }, {
    name: "melo2_flute",
    color: "#F42828",
    uniqsnd: false
  }, {
    name: "melo3_neou",
    color: "#F42828",
    uniqsnd: false
  }, {
    name: "melo4_hu",
    color: "#F42828",
    uniqsnd: true
  }, {
    name: "melo5_ah",
    color: "#F42828",
    uniqsnd: true
  }, {
    name: "voice1_feel",
    color: "#787DFF",
    uniqsnd: false
  }, {
    name: "voice2_chillin",
    color: "#787DFF",
    uniqsnd: true
  }, {
    name: "voice3_yeah",
    color: "#787DFF",
    uniqsnd: true
  }, {
    name: "voice4_filback",
    color: "#787DFF",
    uniqsnd: false
  }, {
    name: "voice5_teylo",
    color: "#787DFF",
    uniqsnd: true
  }],
  bonusarray: [{
    title: "Love",
    name: "v4-b1-love",
    code: [1, 2, 6, 11, 17],
    sound: "bonus1_love",
    predrop: "bonus_predrop",
    loop: 1,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><circle fill=\"#ffffff\" cx=\"35\" cy=\"35\" r=\"2.25\"/><path fill=\"#ffffff\" d=\"m49.41 41.33c-1.91 3.57-5.95 7.03-6.12 7.17-.43.37-.96.55-1.49.55-.65 0-1.3-.27-1.75-.81-.82-.97-.71-2.42.26-3.25.04-.03 3.55-3.05 5.05-5.84.99-1.84 3.58-9.91 5.63-16.61-3.71-4.75-9.48-7.8-15.97-7.8-11.19 0-20.26 9.07-20.26 20.26s9.07 20.26 20.26 20.26 20.26-9.07 20.26-20.26c0-2.41-.42-4.72-1.2-6.87-1.64 5.21-3.64 11.29-4.66 13.2zm-22.24-6.33c0-4.32 3.5-7.83 7.83-7.83s7.83 3.51 7.83 7.83-3.51 7.83-7.83 7.83-7.83-3.5-7.83-7.83z\"/></svg>"
  }, {
    title: "Follow",
    name: "v4-b2-follow",
    code: [1, 6, 8, 12, 18],
    sound: "bonus2_follow",
    predrop: "bonus_predrop",
    loop: 1,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m58.79 27.62c-.72-1.84-11.67.73-24.46 5.74s-22.57 10.57-21.84 12.41c.35.9 3.16.74 7.43-.24 0 0-.01.01-.02.02 4.77 6.81 13.72 9.76 21.8 6.59s12.64-11.41 11.51-19.65c0 0-.02 0-.03 0 3.8-2.18 5.97-3.98 5.62-4.88z\"/><path fill=\"#ffffff\" d=\"m32.65 29.08c6.1-2.39 12-4.32 16.73-5.47-4.89-6.2-13.4-8.78-21.13-5.75s-12.21 10.71-11.59 18.58c4.25-2.36 9.89-4.96 15.99-7.35z\"/></svg>"
  }, {
    title: "Eagle",
    name: "v4-b3-eagle",
    code: [1, 3, 6, 13, 16],
    sound: "bonus3_eagle",
    predrop: "bonus_predrop",
    loop: 1,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m47.05 31.66c1.89-.04 3.9-.14 4.59-.14 2.39 0 2.47-3.98.08-3.98h-25.78l-11.56 21.73h42.25z\"/><path fill=\"#ffffff\" d=\"m38.48 14.41c-.17-.26-1.36.4-2.24.3-.41-.05-1.37-.28-1.84-.42s-1.89-.29-2.31.08c-.14.12-1.55 3.06-2.27 4.69-2.55.02-7.28 0-8.06 0-2.39 0-2.47 3.98-.08 3.98h20.46l-3.67-8.63z\"/></svg>"
  }]
};
gA.v5 = {
  name: "Brazil",
  version: "5",
  date: "2016",
  folder: "asset-v5/",
  looptime: 8000,
  bpm: 120,
  totalframe: 384,
  bonusloopA: true,
  bonusendloopA: false,
  colors: ["#6EB950", "#41A032", "#2D7D28", "#235023", "#14321E", "#0A1910"],
  animearray: [{
    name: "1_poum",
    color: "#FAB405",
    uniqsnd: true
  }, {
    name: "2_creuki",
    color: "#FAB405",
    uniqsnd: true
  }, {
    name: "3_shaka",
    color: "#FAB405",
    uniqsnd: true
  }, {
    name: "4_chouk",
    color: "#FAB405",
    uniqsnd: true
  }, {
    name: "5_kaliak",
    color: "#FAB405",
    uniqsnd: true
  }, {
    name: "6_tek",
    color: "#23BEE1",
    uniqsnd: true
  }, {
    name: "7_tuk",
    color: "#23BEE1",
    uniqsnd: true
  }, {
    name: "8_teung",
    color: "#23BEE1",
    uniqsnd: true
  }, {
    name: "9_ting",
    color: "#23BEE1",
    uniqsnd: true
  }, {
    name: "10_kougou",
    color: "#23BEE1",
    uniqsnd: true
  }, {
    name: "11_parimba",
    color: "#64B92D",
    uniqsnd: true
  }, {
    name: "12_coloko",
    color: "#64B92D",
    uniqsnd: true
  }, {
    name: "13_clav",
    color: "#64B92D",
    uniqsnd: true
  }, {
    name: "14_tromp",
    color: "#64B92D",
    uniqsnd: true
  }, {
    name: "15_trompolo",
    color: "#64B92D",
    uniqsnd: true
  }, {
    name: "16_bass",
    color: "#E63C14",
    uniqsnd: true
  }, {
    name: "17_wa",
    color: "#E63C14",
    uniqsnd: true
  }, {
    name: "18_ya",
    color: "#E63C14",
    uniqsnd: true
  }, {
    name: "19_palapa",
    color: "#E63C14",
    uniqsnd: true
  }, {
    name: "20_oh",
    color: "#E63C14",
    uniqsnd: true
  }],
  bonusarray: [{
    title: "Felicidade",
    name: "v5-b1-felicidade",
    code: [1, 3, 6, 10, 16],
    sound: "bonus-felicidade",
    loop: 1,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m58.32 46.84c-1.36-1.94-3.77-4.93-8.05-8.46-4.58-3.78-8.07-5.17-8.07-5.17s2.01-3.72 2.76-5.12c.76-1.4 1.93-3.95 1.42-4.46s-3.05.66-4.46 1.42c-1.4.75-5.12 2.76-5.12 2.76s-1.39-3.49-5.17-8.07c-3.53-4.28-6.52-6.69-8.47-8.05-1.01-.71-1.63 1.03-2.12 3.95-.95 5.65-1.51 12.75 4.61 22.96 0 0-6.55 4.59-8.19 5.64-1 .64-.81 1.43-.44 1.85.38.43 3.03 3.18 3.39 3.52.33.37 3.09 3.02 3.52 3.39.42.37 1.21.56 1.85-.44 1.05-1.65 5.64-8.19 5.64-8.19 10.21 6.11 17.31 5.56 22.96 4.61 2.91-.49 4.65-1.11 3.95-2.12z\"/></svg>"
  }, {
    title: "Chegou",
    name: "v5-b2-chegou",
    code: [1, 4, 9, 13, 17],
    sound: "bonus-chegou",
    loop: 1,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m52.1 28.64c-2.59-4.15-7.97-8.13-7.97-8.13s.59-2.22.44-2.88c-.09-.36-1.13-.93-1.13-.93s-1.08-.49-1.42-.34c-.63.28-2.03 2.09-2.03 2.09s-6.42-1.88-11.29-1.42c-4.88.45-10.79 3.01-10.79 3.01s-1.59 3.22-1.79 3.61c1.28 1.53 5.55 4.32 6.24 4.74.78-1.1 2.09-2.66 2.52-3.02.72-.6 1.31-.65 2-.2.9.59-.13 2.8-1.44 5.11 1.94 1.27 5.75 3.25 7.03 3.89 1.1-2.22 2.78-4.64 4.26-3.91s.56 3.54-.53 5.76c1.28.63 5.17 2.46 7.35 3.24 1.05-2.44 2.19-4.6 3.19-4.24.78.28 1.1.78 1.05 1.71-.03.56-.47 2.55-.88 3.84.76.3 5.56 2.01 7.55 2.1.2-.4 1.79-3.61 1.79-3.61s-1.55-6.26-4.14-10.41z\"/><path fill=\"#ffffff\" d=\"m19.81 45.46h16.5v4.5h-16.5z\" transform=\"matrix(.44416612 -.89594445 .89594445 .44416612 -27.15 51.67)\"/></svg>"
  }, {
    title: "Musica",
    name: "v5-b3-musica",
    code: [1, 5, 7, 14, 19],
    sound: "bonus-musica",
    loop: 1,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m47.78 26.87-6.14 4.09-6.14-4.09-6.14 4.09v-9.21l-6.14-8.19-6.14 8.19v30.7h13.81v-6.9c0-2.54 2.06-4.6 4.6-4.6s4.6 2.06 4.6 4.6v6.9h13.81v-21.49l-6.14-4.09z\"/></svg>"
  }]
};
gA.v6 = {
  name: "Alive",
  version: "6",
  date: "2018",
  folder: "asset-v6/",
  looptime: 7111,
  bpm: 135,
  totalframe: 342,
  bonusloopA: false,
  bonusendloopA: false,
  colors: ["#A07DFA", "#825FD2", "#5F3CA0", "#371464", "#230A41", "#110521"],
  animearray: [{
    name: "1_kick",
    color: "#1e96be",
    uniqsnd: true
  }, {
    name: "2_snare",
    color: "#1e96be",
    uniqsnd: true
  }, {
    name: "3_kanye",
    color: "#1e96be",
    uniqsnd: true
  }, {
    name: "4_tuctuc",
    color: "#1e96be",
    uniqsnd: true
  }, {
    name: "5_break",
    color: "#1e96be",
    uniqsnd: true
  }, {
    name: "6_cribasse",
    color: "#825fd2",
    uniqsnd: true
  }, {
    name: "7_distotut",
    color: "#825fd2",
    uniqsnd: true
  }, {
    name: "8_screw",
    color: "#825fd2",
    uniqsnd: true
  }, {
    name: "9_shaolin",
    color: "#825fd2",
    uniqsnd: true
  }, {
    name: "10_shower",
    color: "#825fd2",
    uniqsnd: true
  }, {
    name: "11_basse",
    color: "#e11419",
    uniqsnd: true
  }, {
    name: "12_hou",
    color: "#e11419",
    uniqsnd: true
  }, {
    name: "13_clav",
    color: "#e11419",
    uniqsnd: true
  }, {
    name: "14_synth",
    color: "#e11419",
    uniqsnd: true
  }, {
    name: "15_yah",
    color: "#e11419",
    uniqsnd: true
  }, {
    name: "16_hurry",
    color: "#f06400",
    uniqsnd: true
  }, {
    name: "17_good",
    color: "#f06400",
    uniqsnd: true
  }, {
    name: "18_mind",
    color: "#f06400",
    uniqsnd: true
  }, {
    name: "19_haha",
    color: "#f06400",
    uniqsnd: true
  }, {
    name: "20_wow",
    color: "#f06400",
    uniqsnd: true
  }],
  bonusarray: [{
    title: "Alive",
    name: "v6-b1-alive",
    code: [4, 6, 9, 14, 18],
    sound: "bonus-alive",
    loop: 3,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m19.8 38.4c-1.24 0-2.25 1.01-2.24 2.26 0 1.24 1.01 2.25 2.26 2.24 1.24 0 2.25-1.01 2.24-2.26s-1.01-2.25-2.26-2.24z\"/><path fill=\"#ffffff\" d=\"m26.02 16.14c1.24 0 2.25-1.01 2.24-2.26 0-1.24-1.01-2.25-2.26-2.24-1.24 0-2.25 1.01-2.24 2.26 0 1.24 1.01 2.25 2.26 2.24z\"/><path fill=\"#ffffff\" d=\"m51.58 35.81c-.59-.59-1.23-1.1-1.9-1.53s-24.11-15.33-24.11-15.33l6.54 12.33-17.93-12.01 19.52 30.69c.46.73 1 1.43 1.64 2.08 4.48 4.48 11.75 4.48 16.23 0s4.48-11.75 0-16.23zm-3.12 13.1c-2.76 2.76-7.22 2.76-9.98 0s-2.76-7.22 0-9.98 7.22-2.76 9.98 0 2.76 7.22 0 9.98z\"/></svg>"
  }, {
    title: "Busta",
    name: "v6-b2-busta",
    code: [1, 2, 8, 11, 16],
    sound: "bonus-busta",
    predrop: "predrop-busta",
    loop: 3,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m38.29 29.94c-9.04-3.6-17.12-1.7-26.01 2.5 3.57 9.16 8.13 16.09 17.18 19.69 9.04 3.6 17.12 1.7 26.01-2.5-3.57-9.16-8.14-16.09-17.18-19.69zm2.14 13.71c-1.44 3.62-5.54 5.39-9.16 3.94-3.62-1.44-5.39-5.54-3.94-9.16 1.44-3.62 5.54-5.39 9.16-3.94 3.62 1.44 5.39 5.54 3.94 9.16z\"/><path fill=\"#ffffff\" d=\"m56 33.26c.24.53.22.92-.19 1.16-.63.37-.54.31-.97.55-.35.2-.66.09-1.05-.49-4.28-6.24-7.45-9.17-13.95-11.7-6.46-2.51-11.59-2.25-17.21-1.37-3.23.51-3.44-.35-2.62-1.29s2.71-1.09 2.5-2.05c-.22-1.01-2.94.6-3.94-.1-1.18-.83 1.5-2.7 5.61-3.57 9.65-2.04 24.06 1.68 31.82 18.85z\"/></svg>"
  }, {
    title: "VR",
    name: "v6-b3-vr",
    code: [3, 8, 12, 11, 20],
    sound: "bonus-vr",
    predrop: "predrop-vr",
    loop: 3,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m34.92 13.89-20.84 35.33h41.83zm.08 23.88c-2.33 0-4.22-1.89-4.22-4.22s1.89-4.22 4.22-4.22 4.22 1.89 4.22 4.22-1.89 4.22-4.22 4.22z\"/></svg>"
  }]
};
gA.v7 = {
  name: "Jeevan",
  version: "7",
  date: "2019",
  folder: "asset-v7/",
  looptime: 6857,
  bpm: 140,
  totalframe: 342,
  bonusloopA: true,
  bonusendloopA: true,
  colors: ["#FE6E23", "#D65A1E", "#AE4619", "#863214", "#551E05", "#2B0F02"],
  animearray: [{
    name: "1_lead",
    color: "#ff6419",
    uniqsnd: true
  }, {
    name: "2_pouin",
    color: "#ff6419",
    uniqsnd: false
  }, {
    name: "3_tung",
    color: "#ff6419",
    uniqsnd: true
  }, {
    name: "4_tabla",
    color: "#ff6419",
    uniqsnd: true
  }, {
    name: "5_tuduki",
    color: "#ff6419",
    uniqsnd: true
  }, {
    name: "6_bass",
    color: "#e11923",
    uniqsnd: false
  }, {
    name: "7_bourdon",
    color: "#e11923",
    uniqsnd: true
  }, {
    name: "8_campan",
    color: "#e11923",
    uniqsnd: true
  }, {
    name: "9_kum",
    color: "#e11923",
    uniqsnd: false
  }, {
    name: "10_string",
    color: "#e11923",
    uniqsnd: false
  }, {
    name: "11_citar",
    color: "#328cd2",
    uniqsnd: true
  }, {
    name: "12_guit",
    color: "#328cd2",
    uniqsnd: true
  }, {
    name: "13_tromp",
    color: "#328cd2",
    uniqsnd: false
  }, {
    name: "14_taoung",
    color: "#328cd2",
    uniqsnd: true
  }, {
    name: "15_sifle",
    color: "#328cd2",
    uniqsnd: false
  }, {
    name: "16_djindr",
    color: "#32b441",
    uniqsnd: true
  }, {
    name: "17_djinga",
    color: "#32b441",
    uniqsnd: true
  }, {
    name: "18_djinta",
    color: "#32b441",
    uniqsnd: true
  }, {
    name: "19_jeevan",
    color: "#32b441",
    uniqsnd: false
  }, {
    name: "20_yaha",
    color: "#32b441",
    uniqsnd: false
  }],
  bonusarray: [{
    title: "Kofitez",
    name: "v7-b1-kofitez",
    code: [1, 2, 4, 16, 17],
    sound: "bonus_kofitez",
    loop: 3,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m56.95 28.37s-5.09.87-10.15 4.4c.05.72.09 1.45.09 2.2 0 8.65-3.47 15.01-6.07 18.57 3.68-.51 8.5-2.15 12.26-7.09 5.66-7.44 3.87-18.08 3.87-18.08z\"/><path fill=\"#ffffff\" d=\"m25.48 23.01c-2.95-2.79-5.39-3.91-5.39-3.91s-.95 2.45-1.25 6.31c1.52.59 3.27 1.39 5.08 2.47.41-1.77.95-3.4 1.56-4.87z\"/><path fill=\"#ffffff\" d=\"m35 16.46s-7.39 6.82-7.39 18.5 7.39 18.5 7.39 18.5 7.39-6.82 7.39-18.5-7.39-18.5-7.39-18.5z\"/><path fill=\"#ffffff\" d=\"m51.16 25.42c-.3-3.86-1.25-6.31-1.25-6.31s-2.44 1.12-5.39 3.9c.61 1.48 1.15 3.1 1.56 4.87 1.81-1.08 3.55-1.88 5.08-2.47z\"/><path fill=\"#ffffff\" d=\"m13.05 28.37s5.09.87 10.15 4.4c-.05.72-.09 1.45-.09 2.2 0 8.65 3.47 15.01 6.07 18.57-3.68-.51-8.5-2.15-12.26-7.09-5.66-7.44-3.87-18.08-3.87-18.08z\"/></svg>"
  }, {
    title: "Sapna",
    name: "v7-b2-sapna",
    code: [1, 3, 6, 14, 15],
    sound: "bonus_sapna",
    predrop: "predrop_sapna",
    loop: 3,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m16 24.5 1 4v25.5h11.26v-18.75c0-3.72 3.02-6.74 6.74-6.74s6.74 3.02 6.74 6.74v18.75h11.26v-25.5l1-4z\"/><path fill=\"#ffffff\" d=\"m51 16h-9.82l-6.18-4-6.18 4h-9.82l-1 4h34z\"/></svg>"
  }, {
    title: "Kabikabi",
    name: "v7-b3-kabikabi",
    code: [7, 8, 10, 11, 19],
    sound: "bonus_kabikabi",
    loop: 3,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m53.97 23.77c-2.74-2.04-6.34-2.55-9.82-2.84.3-1.43.85-3.46 1.31-4.65.94-2.43-.61-1.91-1.54-.83-.6.71-2.21 3.01-2.91 4.32-.57 1.06-1.88.69-1.74-.35.28-2.05 1.02-4.43 2.12-6.98.72-1.66-.71-1.53-1.43-.77-1.67 1.77-4.08 6.08-4.68 7.28-.65 1.29-2.1.72-1.91-.4.42-2.55 2.62-7.76 2.87-8.37.38-.93-.51-1.64-1.78-.42-.66.64-3.61 4.08-5.93 9.1-3.74-.65-7.51-.75-11.02 1.54-6.26 4.09-6.28 13.27-2 18 3.14 3.47 4.88 4.96 6.19 9.84 1.55 5.8 5.26 9.94 11.12 10.6 5.31.59 9.18-3.3 11.57-7.58 2.06-3.69 4.63-6.02 9.94-9.78 6.12-4.33 5.07-13.65-.35-17.69zm-30.33 12.83c-3.42-.41-5.86-3.51-5.45-6.93s3.51-5.86 6.93-5.45 5.86 3.51 5.45 6.93-3.51 5.86-6.93 5.45zm12.16 6.98c-.17.85-1.24 1.53-3.81 1.02-2.5-.5-2.68-1.49-2.44-2.49.26-1.1 3.08-5.22 4.12-5.02 1.09.21 2.4 5.14 2.14 6.5zm15.83-9.89c-.42 3.54-3.64 6.07-7.18 5.65s-6.07-3.64-5.65-7.18 3.64-6.07 7.18-5.65 6.07 3.64 5.65 7.18z\"/></svg>"
  }]
};
gA.v8 = {
  name: "Dystopia",
  version: "8",
  date: "2020",
  folder: "asset-v8/",
  looptime: 6857,
  bpm: 140,
  totalframe: 328,
  bonusloopA: true,
  bonusendloopA: false,
  colors: ["#779295", "#5F7E7B", "#476761", "#304D47", "#1B312F", "#0F1918"],
  animearray: [{
    name: "1_atlanta",
    color: "#5f7e7b",
    uniqsnd: false
  }, {
    name: "2_tuctom",
    color: "#5f7e7b",
    uniqsnd: false
  }, {
    name: "3_foubreak",
    color: "#5f7e7b",
    uniqsnd: false
  }, {
    name: "4_koukaki",
    color: "#5f7e7b",
    uniqsnd: true
  }, {
    name: "5_koungou",
    color: "#5f7e7b",
    uniqsnd: true
  }, {
    name: "6_bass",
    color: "#5f7e7b",
    uniqsnd: false
  }, {
    name: "7_monk",
    color: "#5f7e7b",
    uniqsnd: false
  }, {
    name: "8_sonar",
    color: "#5f7e7b",
    uniqsnd: true
  }, {
    name: "9_souffle",
    color: "#5f7e7b",
    uniqsnd: false
  }, {
    name: "10_epifle",
    color: "#5f7e7b",
    uniqsnd: false
  }, {
    name: "11_arpeg",
    color: "#5f7e7b",
    uniqsnd: false
  }, {
    name: "12_tromp",
    color: "#5f7e7b",
    uniqsnd: false
  }, {
    name: "13_pizzi",
    color: "#5f7e7b",
    uniqsnd: false
  }, {
    name: "14_organ",
    color: "#5f7e7b",
    uniqsnd: false
  }, {
    name: "15_synth",
    color: "#5f7e7b",
    uniqsnd: false
  }, {
    name: "16_follow",
    color: "#5f7e7b",
    uniqsnd: false
  }, {
    name: "17_choir",
    color: "#5f7e7b",
    uniqsnd: false
  }, {
    name: "18_houhou",
    color: "#5f7e7b",
    uniqsnd: false
  }, {
    name: "19_reach",
    color: "#5f7e7b",
    uniqsnd: false
  }, {
    name: "20_believe",
    color: "#5f7e7b",
    uniqsnd: false
  }],
  bonusarray: [{
    title: "Riveria",
    name: "v8-b1-riviera",
    code: [1, 6, 7, 11, 19],
    sound: "21_bonus_riviera",
    loop: 6,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m24.51 22.76-.24-9.01c-.02-.69-.58-1.25-1.29-1.27-.7.02-1.27.58-1.29 1.27l-.24 9.01-5.22 5.22v24.54h13.5v-24.54z\"/><path fill=\"#ffffff\" d=\"m47.91 12.48h-13.68s0 40.04 0 40.04h19.54s0-21.52 0-21.52l-5.86-5.86s0-12.66 0-12.66zm-3.42 10.13h-6.84v-6.84h6.84z\"/></svg>"
  }, {
    title: "Zemetekile",
    name: "v8-b2-zemetekile",
    code: [1, 2, 3, 4, 10],
    sound: "22_bonus_zemetekile",
    loop: 6,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m60.46 31.04s-8.45-2.14-17.42-.64c-7.45 1.25-15.17 2.5-17.79 2.93-3.69-3.92-10.63-11.11-11.2-11.75-.87-.96-2.06-.69-1.8.56l4.05 16.5c-1.22.26-4.09 1.1-5.44 3.49 2.3 1.54 5.28 1.02 6.47.72l.88 3.57 8.14-.98-1.73 6.87c.13.44.38.71.57.66l10.94-2.38c.46-.1.81-.47.88-.93l2.87-6.35s4.89-1.12 10.45-3.05c8.21-2.85 10.81-6.39 10.81-6.39l-.68-2.84z\"/><path fill=\"#ffffff\" d=\"m34.44 21.58c-4.07 0-7.21 3.12-7.92 6.98l15.41-2.53c-1.42-2.54-4.37-4.45-7.48-4.45z\"/></svg>"
  }, {
    title: "Cumulor",
    name: "v8-b3-cumulor",
    code: [4, 5, 14, 16, 18],
    sound: "23_bonus_cumulor",
    loop: 6,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m33.91 13.73-22.42 33.54h34.69z\"/><path fill=\"#ffffff\" d=\"m40.85 19.38 10.14 27.89h7.52z\"/></svg>"
  }]
};
var gD = !(gA.v9 = {
  name: "Wekiddy",
  version: "9",
  date: "2023",
  folder: "asset-v9/",
  looptime: 5053,
  bpm: 95,
  totalframe: 242,
  bonusloopA: true,
  bonusendloopA: false,
  colors: ["#008EFF", "#005CFA", "#0048C3", "#00348C", "#002055", "#00102B"],
  animearray: [{
    name: "01_boo_9",
    color: "#9448ff",
    uniqsnd: false
  }, {
    name: "02_kevin",
    color: "#fa340f",
    uniqsnd: false
  }, {
    name: "03_double_k",
    color: "#19d428",
    uniqsnd: false
  }, {
    name: "04_blue_gt",
    color: "#2c86fe",
    uniqsnd: true
  }, {
    name: "05_mj_182",
    color: "#19d428",
    uniqsnd: true
  }, {
    name: "06_boom_fuzz",
    color: "#2c86fe",
    uniqsnd: false
  }, {
    name: "07_asap_bee",
    color: "#19d428",
    uniqsnd: false
  }, {
    name: "08_m_o_g",
    color: "#ffca06",
    uniqsnd: false
  }, {
    name: "09_arashi",
    color: "#2c86fe",
    uniqsnd: false
  }, {
    name: "10_big_duke",
    color: "#fa340f",
    uniqsnd: false
  }, {
    name: "11_swingy",
    color: "#2c86fe",
    uniqsnd: false
  }, {
    name: "12_d_invaders",
    color: "#19d428",
    uniqsnd: false
  }, {
    name: "13_doo_doo",
    color: "#2c86fe",
    uniqsnd: true
  }, {
    name: "14_8_bit",
    color: "#19d428",
    uniqsnd: false
  }, {
    name: "15_kc_glow",
    color: "#9448ff",
    uniqsnd: false
  }, {
    name: "16_el_cool_p",
    color: "#fa340f",
    uniqsnd: false
  }, {
    name: "17_memphis",
    color: "#2c86fe",
    uniqsnd: false
  }, {
    name: "18_jogg_d",
    color: "#ffca06",
    uniqsnd: false
  }, {
    name: "19_scooter",
    color: "#19d428",
    uniqsnd: false
  }, {
    name: "20_lil_blaze",
    color: "#2c86fe",
    uniqsnd: false
  }],
  bonusarray: [{
    title: "Flow",
    name: "v9-b1-flow",
    code: [1, 2, 5, 8, 17],
    sound: "21_bonus_flow",
    predrop: "predrop_flow",
    loop: 2,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m51.39 25.73c1.77-3.71 1.13-8.29-1.95-11.37-3.07-3.08-7.65-3.72-11.37-1.95.64 3.18 2.19 6.21 4.65 8.67s5.49 4.01 8.67 4.65z\"/><path fill=\"#ffffff\" d=\"m48.87 29.02c-3.42-.55-6.7-2.12-9.33-4.76-2.63-2.63-4.21-5.92-4.76-9.33-3.37 3.93-3.21 9.85.51 13.57s9.64 3.89 13.57.51z\"/><path fill=\"#ffffff\" d=\"m52.91 54.15c-1.5-6.44-7.38-8.8-12.2-8.27-3.58.39-5.96 2.02-8.27 3.6-2.47 1.69-4.8 3.28-8.72 3.28-1.8 0-3.42-.98-4.03-2.45-.69-1.66.03-3.68 2.03-5.68l.06-.06c.43.37.86.71 1.15.89.62.38 1.42.32 1.99-.13l12.63-10.24c-1.98-.7-3.85-1.82-5.43-3.4s-2.71-3.45-3.4-5.43l-10.24 12.63c-.45.57-.52 1.37-.13 1.99.18.29.52.72.89 1.15l-.06.06c-3.05 3.05-4.08 6.55-2.81 9.6 1.16 2.79 4.11 4.67 7.35 4.67 5.04 0 8.08-2.08 10.75-3.91 2.12-1.45 3.94-2.7 6.63-2.99 2.35-.26 7.14.56 8.3 5.51.19.83.93 1.39 1.75 1.39.14 0 .27-.02.41-.05.97-.23 1.57-1.19 1.34-2.16z\"/></svg>"
  }, {
    title: "URFO",
    name: "v9-b2-urfo",
    code: [1, 2, 3, 16, 20],
    sound: "22_bonus_urfo",
    predrop: "predrop_urfo",
    loop: 4,
    svg: "<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"m55.03 14.71h-3.13l-.77 6.93h-32.26l-.77-6.93h-3.13l-1.08 21.12c-.06 1.08.55 2.08 1.52 2.55l19.59 9.97 19.59-9.97c.98-.46 1.58-1.47 1.52-2.55zm-5.13 18.02-14.9 7.08-14.9-7.08-.6-5.45h31.01l-.6 5.45z\"/><path fill=\"#ffffff\" d=\"m19.65 45.73c.72 4.62 3.62 8.61 7.78 10.74l7.41 3.78 7.41-3.78c4.17-2.13 7.06-6.12 7.78-10.74l-15.19 7.85z\"/></svg>"
  }]
});
var gE = 0.25;
function gF(g) {
  if (!gD) {
    gD = true;
    g();
    // TOLOOK
    setTimeout(function () {
      gD = false;
    }, gE);
  }
}
function gG(g) {
  if (hm(g) && (typeof g).toLowerCase() === "function") {
    g();
  }
}
function gH() {
  try {
    return window !== window.top;
  } catch (g) {
    return true;
  }
}
function gI(g, h) {
  if (iE) {
    if (hm(window.top) && hm(window.top.appEvent)) {
      window.top.appEvent(g, h);
    } else {
      // TOLOOK
      setTimeout(function () {
        gI(g, h);
      }, 200);
    }
  }
}
var gJ = {
  allchar: /[*]/,
  classic: /[^A-Za-z0-9\u00C0-\u017F '-]/,
  search: /[^A-Za-z0-9\u00C0-\u017F\u0025 '-]/,
  max3letters: /[*]|(.)(?=\1\1\1)/gi,
  strict: /[^A-Za-z0-9 '-]/,
  custom: /[^A-Za-z0-9àâçèéêîôùûÀÂÇÈÉÊÎÔÙÛ '-]/,
  email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
  allsafe: /[^A-Za-z0-9\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC\s]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]/
};
function gK(g, h) {
  var i;
  var j = [];
  for (i of g) {
    if (!gM(j, i, h)) {
      j.push(i);
    }
  }
  return j;
}
function gL(g, h, j) {
  var k;
  var l = [];
  for (k of g) {
    if (!gM(h, k, j)) {
      l.push(k);
    }
  }
  for (k of h) {
    if (!gM(g, k, j)) {
      l.push(k);
    }
  }
  return l;
}
function gM(g, h, j) {
  for (var k = !hm(j) || j, l = false, m = 0, p = g.length; m < p; m++) {
    if (k) {
      if (g[m] === h) {
        l = true;
        break;
      }
    } else if (g[m].toLowerCase() === h.toLowerCase()) {
      l = true;
      break;
    }
  }
  return l;
}
function gN(g, h) {
  for (var i = 0, j = h.length; i < j; i++) {
    if (h[i] === g) {
      h.splice(i, 1);
      break;
    }
  }
  return h;
}
function gO(g, h, j) {
  for (var l = 0, m = j.length; l < m; l++) {
    if (j[l][h] === g) {
      return true;
    }
  }
  return false;
}
function gP(g) {
  for (var h = 0, i = g.length; h < i; h++) {
    g[h] = g[h] | 0;
  }
  return g;
}
function gQ(g) {
  if (iR == 1) {
    return gR(g);
  } else {
    return g;
  }
}
function gR(g) {
  var h = g.substr(g.lastIndexOf("."));
  return g.split(h).join("-ld" + h);
}
function gS(g) {
  g = hl(g) ? ic ? "" : "index.html" : g;
  window.location.href = g;
}
function gT() {
  if (ic) {
    window.top.location.reload();
  } else if (iP) {
    window.location.href = "index.html?skipintro=1";
  } else {
    window.location.reload();
  }
}
function gU(g, h) {
  var j = iE ? window.top : window;
  var h = hl(h) ? "_blank" : h;
  var h = ix && iG ? "_self" : h;
  if (window.electron) {
    electron.ipc.openURL(g);
  } else if (window.cordova) {
    cordova.InAppBrowser.open(g, "_system", "hidden=yes,location=no");
  } else {
    j.open(g, h);
  }
}
function gV(g) {
  var i = im + "url/" + g;
  var i = iq ? i + "-cn" : i;
  gU(i = window.cordova ? {
    facebook: "https://www.facebook.com/incredibox",
    twitter: "https://twitter.com/incredibox_",
    instagram: "https://www.instagram.com/incredibox.official/",
    youtube: "https://www.youtube.com/incredibox"
  }[g] || i : i);
}
function gW(g, h, j, k) {
  var l = k ? screen.height / 2 - j / 2 : 0;
  var k = k ? screen.width / 2 - h / 2 : 0;
  window.open(g, "", "menubar=no,toolbar=no,resizable=yes,scrollbars=yes,width=" + h + ",height=" + j + ",top=" + l + ",left=" + k);
}
function gX(g) {
  var h = {};
  window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (j, k, l) {
    h[k] = l;
  });
  var i = null;
  return i = g in h ? h[g] : i;
}
function gY() {
  if (window.location.href.indexOf("app.html") != -1) {
    return "app.html?v=" + gZ("v");
  } else {
    return "index.html";
  }
}
function gZ(g) {
  return new URL(window.location.href).searchParams.get(g);
}
function h0(g) {
  var h;
  var i = parseInt(g / 1000 % 60);
  var j = parseInt(g / 60000 % 60);
  h = parseInt(g / 3600000 % 24);
  return (j < 10 ? "0" + j : j) + ":" + (i < 10 ? "0" + i : i);
}
function h1() {
  return new Date().getTime();
}
function h2(g) {
  var h = h3();
  var i = new Date(g);
  var h = h4(new Date(h).getTime() - i.getTime());
  if (h === false) {
    return pB(g);
  } else {
    return h;
  }
}
function h3() {
  var h = new Date();
  return h.getUTCFullYear() + ("-" + String(h.getUTCMonth() + 1).padStart(2, "0") + "-" + String(h.getUTCDate()).padStart(2, "0") + " " + String(h.getUTCHours()).padStart(2, "0") + ":" + String(h.getUTCMinutes()).padStart(2, "0") + ":") + String(h.getUTCSeconds()).padStart(2, "0");
}
function h4(g) {
  var j = (g / 1000).toFixed(1);
  var k = (g / 60000).toFixed(1);
  var l = (g / 3600000).toFixed(1);
  var g = (g / 86400000).toFixed(1);
  var m = "";
  if (j < 60) {
    j = Math.round(j);
    m = j.toString() + " " + (j < 2 && hm(km("txt.time.tSec.one")) ? km("txt.time.tSec.one") : km("txt.time.tSec.other"));
  } else if (k < 60) {
    j = Math.round(k);
    m = j.toString() + " " + (j < 2 && hm(km("txt.time.tMin.one")) ? km("txt.time.tMin.one") : km("txt.time.tMin.other"));
  } else if (l < 23) {
    k = Math.round(l);
    m = k.toString() + " " + (k < 2 && hm(km("txt.time.tHou.one")) ? km("txt.time.tHou.one") : km("txt.time.tHou.other"));
  } else {
    if (!(g < 10)) {
      return false;
    }
    j = Math.round(g);
    m = j.toString() + " " + (j < 2 && hm(km("txt.time.tDay.one")) ? km("txt.time.tDay.one") : km("txt.time.tDay.other"));
  }
  return km("txt.ago").split("%{date_time}").join(m);
}
function h5() {
  var h = new Date();
  var j = h.getDate();
  var k = h.getMonth() + 1;
  var l = h.getFullYear();
  var m = h.getHours();
  var p = h.getMinutes();
  var h = h.getSeconds();
  var j = j < 10 ? String("0" + j) : String(j);
  var k = k < 10 ? String("0" + k) : String(k);
  var m = m < 10 ? String("0" + m) : String(m);
  var p = p < 10 ? String("0" + p) : String(p);
  var h = h < 10 ? String("0" + h) : String(h);
  return String(l + "-" + k + "-" + j + " " + m + ":" + p + ":" + h);
}
function h6(g) {
  if (hl(g)) {
    return null;
  } else {
    g = g.split("\t").join("").split("\n").join("");
    return JSON.parse(g);
  }
}
function h7(g) {
  if (hl(g)) {
    return null;
  } else {
    return JSON.stringify(g);
  }
}
function h8(g) {
  return Math.round(Math.random() * g);
}
function h9(g, h) {
  g = Math.ceil(g);
  h = Math.floor(h);
  return Math.floor(Math.random() * (h - g + 1)) + g;
}
function ha(g, h) {
  h = hl(h) ? 2 : h;
  h = Math.pow(10, h);
  return Math.round(g * h) / h;
}
function hb(g) {
  var i;
  if (g) {
    g = g.toString();
    i = g.indexOf(".");
    return g.replace(/\d(?=(?:\d{3})+(?:\.|$))/g, function (j, k) {
      if (i < 0 || k < i) {
        return j + " ";
      } else {
        return j;
      }
    });
  } else {
    return 0;
  }
}
function hc(g) {
  if (hl(g)) {
    return "";
  } else {
    return (g = (g = (g = g.split("\t").join("")).split("\n").join("")).split("\r").join("")).replace(/^\s+|\s+$|\s+(?=\s)/g, "");
  }
}
function hd(g, h) {
  return g = (g = g.replace(h, "-")).replace(/-+/g, "-");
}
function he(g) {
  return g = (g = hc(g = hg(g))).replace(gJ.max3letters, "");
}
function hf(g) {
  return g.toString().toLowerCase().replace(/\s+/g, "-").replace(/&/g, "-and-").replace(/[^\w\-]+/g, "").replace(/\-\-+/g, "-").replace(/^-+/, "");
}
function hg(g) {
  return (g = g.toLowerCase()).charAt(0).toUpperCase() + g.slice(1);
}
function hh(g) {
  g = g || "";
  function i() {
    return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);
  }
  return i() + g + i() + g + i() + g + i() + g + i();
}
function hi() {
  function g() {
    return Math.floor((1 + Math.random()) * 65536).toString(16);
  }
  return g() + g() + g() + g() + g() + g();
}
function hj() {
  function h() {
    return Math.floor((1 + Math.random()) * 65536).toString(16);
  }
  return h() + h() + h() + h();
}
function hk() {
  var g = "abcdefghijklmnopqrstuvwxyz";
  let h = "";
  for (let j = 0; j < 10; j++) {
    var i = Math.floor(Math.random() * g.length);
    h += g.charAt(i);
  }
  return h;
}
function hl(g) {
  return g == null || g === "undefined";
}
function hm(g) {
  return g != null && g !== "undefined";
}
function hn(g) {
  var i = document.createElement("textarea");
  i.value = g;
  i.setAttribute("readonly", "");
  i.style = {
    position: "absolute",
    visibility: "hidden",
    pointerEvents: "none"
  };
  document.body.appendChild(i);
  i.select();
  document.execCommand("copy");
  document.body.removeChild(i);
}
function ho(g) {
  getComputedStyle(g);
  g.offsetHeight;
  g.style.animation = "none";
  g.style.transition = "none";
  g.offsetHeight;
  g.style.animation = "";
  g.style.transition = "";
}
function hp() {
  var g;
  var h = document.createElement("div");
  var i = {
    transition: "transitionend",
    OTransition: "oTransitionEnd",
    MozTransition: "transitionend",
    WebkitTransition: "webkitTransitionEnd"
  };
  for (g in i) {
    if (i.hasOwnProperty(g) && h.style[g] !== undefined) {
      return i[g];
    }
  }
  return null;
}
function hq() {
  var h;
  var i = document.createElement("div");
  var j = {
    animation: "animationend",
    OAnimation: "oanimationend",
    MozAnimation: "animationend",
    WebkitAnimation: "webkitAnimationEnd"
  };
  for (h in j) {
    if (j.hasOwnProperty(h) && i.style[h] !== undefined) {
      return j[h];
    }
  }
  return null;
}
function hr(g, h, j, k, l) {
  l = !!hm(l) && l;
  g.off(id).addClass(h).on(id, {
    div: g,
    prop: j,
    func: k,
    log: l
  }, ht);
}
function hs(g, h, j, k, l) {
  l = !!hm(l) && l;
  g.off(id).removeClass(h).on(id, {
    div: g,
    prop: j,
    func: k,
    log: l
  }, ht);
}
function ht(g) {
  if (hm(g.data) && hm(g.data.func) && g.originalEvent.propertyName.replace("-webkit-", "") == g.data.prop && g.data.div.attr("id") == g.target.id) {
    hm(g.data.log);
    g.data.div.off(id);
    g.data.func();
  }
}
function hu(g) {
  if (hm(g)) {
    g.stopPropagation();
  }
}
String.prototype.replaceAt = function (g, h) {
  return this.substr(0, g) + h + this.substr(g + h.length);
};
var hv;
var hw;
var hx;
var hy;
var hz;
var hA;
var hB;
var hC;
var hD;
var hE;
var hF;
var hG;
var hH;
var hI;
var hJ;
var hK;
var hL;
var hM;
var hN;
var hO;
var hP;
var hQ;
var hR;
var hS;
var hT;
var hU;
var hV;
var hW;
var hX;
var hY;
var hZ;
var i0;
var i1;
var i2;
var i3;
var i4;
var i5;
var i6;
var i7 = {
  polo: {
    sprWidth: 164,
    sprHeight: 400,
    overlapW: 30,
    minTopY: 10,
    maxTopY: 380,
    maxRandomY: 30,
    maxBounceY: 25,
    sprAnimW: 164,
    sprAnimH: 380,
    eyesTopY: 97,
    sprEyesW: 164,
    sprEyesH: 40,
    sprEyesX: 492,
    sprEyesY: 0,
    sprEyelidX: 328,
    sprEyelid1Y: 0,
    sprEyelid2Y: 40,
    sprEyelid3Y: 80,
    sprEyelid4Y: 120,
    sprPupY: 450,
    sprPupW: 16,
    pup1X: 54,
    pup1Y: 110,
    pup2X: 95,
    pup2Y: 110,
    maxPupMove: 7
  },
  canvas: {
    baseW: 1028,
    baseH: 380,
    marge: 50,
    maxOverflow: 20
  },
  video: {
    baseW: 1000,
    baseH: 400
  }
};
var i8 = false;
function i9() {
  var g = document.body.clientWidth;
  var h = document.body.clientHeight;
  if (g < h) {
    g = document.body.clientHeight;
    h = document.body.clientWidth;
  }
  return {
    w: g,
    h: h
  };
}
function ia() {
  var k;
  var q;
  var w;
  var x;
  var y;
  var z;
  var A;
  var B;
  var C;
  var D;
  var E;
  var F;
  var G;
  var H;
  var I;
  var J;
  var K;
  var L;
  var M;
  if (mz) {
    if (mV) {
      i7.canvas.marge = 15;
    }
    hM = i7.polo.sprWidth * iR;
    hN = i7.polo.sprHeight * iR;
    hO = i7.polo.sprAnimW * iR;
    hP = i7.polo.sprAnimH * iR;
    hQ = i7.polo.sprEyesW * iR;
    hR = i7.polo.sprEyesH * iR;
    hS = i7.polo.sprEyesX * iR;
    hT = i7.polo.sprEyesY * iR;
    hU = i7.polo.sprEyelidX * iR;
    hV = i7.polo.sprEyelid1Y * iR;
    hW = i7.polo.sprEyelid2Y * iR;
    hX = i7.polo.sprEyelid3Y * iR;
    hY = i7.polo.sprEyelid4Y * iR;
    hZ = i7.polo.sprPupY * iR;
    i0 = i7.polo.sprPupW * iR;
    k = document.querySelector("#game");
    q = document.querySelector("#box-top");
    w = document.querySelector("#box-stage");
    x = w.querySelector("#cnv-stage");
    y = w.querySelector("#box-polo");
    z = document.querySelector("#box-loader-polo");
    A = document.querySelector("#box-video");
    B = document.querySelector("#box-picto");
    C = A.querySelectorAll(".video");
    D = i7.canvas.baseW / i7.canvas.baseH;
    G = i7.video.baseW / i7.video.baseH;
    M = iQ ? 25 : 0;
    window.onresize = function () {
      if (C) {
        if (k.clientWidth / k.clientHeight < 1.6) {
          i8 = false;
          L = w.clientHeight;
          if (document.body.classList.contains("bottomSlide")) {
            document.body.classList.remove("bottomSlide");
          }
        } else {
          i8 = !mV;
          L = k.clientHeight - q.clientHeight - q.clientHeight / 2;
        }
        if ((H = (I = L) * G) < k.clientWidth) {
          H = Math.ceil(k.clientWidth);
          I = Math.ceil(H / G);
        }
        J = Math.round((H - A.clientWidth) / 2);
        K = Math.round((I - L) / 2);
        C.forEach(O => {
          O.style.width = H + "px";
          O.style.height = I + "px";
          O.style.transform = "translate(" + -J + "px, " + -K + "px)";
        });
      }
      if (x) {
        F = w.clientHeight + i7.canvas.maxOverflow;
        if ((E = F * D) > w.clientWidth - i7.canvas.marge * 2) {
          E = w.clientWidth - i7.canvas.marge * 2;
          F = E / D;
        }
        if (ic && E > i7.canvas.baseW) {
          E = i7.canvas.baseW;
          F = E / D;
        }
        x.style.width = E + "px";
        x.style.height = F + "px";
        y.style.width = E + "px";
        y.style.height = F + "px";
        z.style.width = E + "px";
        B.style.width = E * 0.92 - M * 2 + "px";
        x.width = x.clientWidth * iS;
        x.height = x.clientHeight * iS;
        i1 = x.getBoundingClientRect();
        i2 = x.clientHeight / i7.canvas.baseH;
        i5 = i1.width * i7.polo.overlapW / i7.canvas.baseW;
        i4 = (i1.width + i5 * (n8 - 1)) / n8;
        i6 = (i1.width - i4) / (n8 - 1);
        i3 = i4 / i7.polo.sprWidth;
        hv = i7.polo.minTopY * i2 * iS;
        hw = i7.polo.maxTopY * i2 * iS;
        hx = i7.polo.maxRandomY * i2 * iS;
        hy = i7.polo.maxBounceY * i2 * iS;
        hz = i7.polo.sprWidth * i3 * iS;
        hA = i7.polo.sprHeight * i3 * iS;
        hB = i7.polo.sprEyesW * i3 * iS;
        hC = i7.polo.sprEyesH * i3 * iS;
        hF = i7.polo.eyesTopY * i3 * iS;
        hD = i7.polo.sprAnimW * i3 * iS;
        hE = i7.polo.sprAnimH * i3 * iS;
        hG = i7.polo.sprPupW * i3 * iS;
        hH = i7.polo.pup1X * i3 * iS;
        hI = i7.polo.pup1Y * i3 * iS;
        hJ = i7.polo.pup2X * i3 * iS;
        hK = i7.polo.pup2Y * i3 * iS;
        hL = i7.polo.maxPupMove * i3 * iS;
      }
      if (nq && nq.length) {
        nq.forEach(function (O, P) {
          O.resize();
          if (n5) {
            O.draw();
          }
        });
      }
    };
    window.onresize();
  }
}
var ib;
var ic;
var id;
var ie;
var ig;
var ih;
var ii = gZ("mute") || false;
var ij = gZ("game") || false;
var ik = gZ("bonus") || false;
var il = {
  store: "playstore",
  platform: "mobile",
  os: "and",
  osMinimum: 23,
  storeURL: "https://play.google.com/store/apps/details?id=com.sofarsogood.incredibox",
  version: "0.7.0",
  htmlExt: "html"
};
var im = "https://www.incredibox.com/";
var io = "https://www.incredibox.com/incredimods/";
var ip = "";
var iq = false;
var ir = gZ("modbox") === "1";
var is = {};
var it = {};
var iu = false;
var iv = "mp3";
var iw = "mp4";
var ix = false;
var iy = false;
var iz = false;
var iA = j0();
var iB = iZ();
var iC = false;
var iD = window.cordova || false;
var iE = gH();
var iF = {};
var iG = false;
var iH = false;
var iI = false;
var iJ = false;
var iK = false;
var iL = false;
var iM = false;
var iN = false;
var iO = false;
var iP = false;
var iQ = false;
var iR = 1;
var iS = 2;
function iT() {
  mz = window.location.href.includes("app.html") || window.location.href.includes("app.php") || gZ("afs") == "1";
  ib = il.htmlExt;
  ic = il.platform == "browser";
  iP = mz && mX > 100;
  ip = !ir && iP ? gZ("folder") + "/" : "";
  ix = iW();
  iy = !!hm(gZ("afs"));
  iz = (ic || ix) && !iy && !ir;
  iu = jb();
  is = ji(true);
  if (!mz) {
    jh();
  }
  it = jf();
  iK = /android/i.test(is.osName);
  iJ = /windows/i.test(is.osName);
  iI = /mac os/i.test(is.osName);
  iG = /ios/i.test(is.osName);
  iH = !(!window.device || !window.device.isiOSAppOnMac) && window.device.isiOSAppOnMac;
  if (ig = window.device && window.device.version ? window.device.version : !(!is || !is.osVersion) && is.osVersion) {
    h = ig.split(".");
    ih = Number(String(h[0]) + String(h[1])[0]);
  }
  iL = iG && /ipod/i.test(is.deviceModel);
  iM = iG && /iphone/i.test(is.deviceModel);
  iN = iG && /ipad/i.test(is.deviceModel);
  iO = iG && /ipadpro/i.test(is.deviceModel);
  isRetina = iY();
  iC = iX();
  iQ = iG && iU();
  iR = ir || document.body.clientWidth >= 1024 && document.body.clientHeight >= 768 ? 2 : 1;
  if (ic && !ir) {
    iR = 1;
    iv = j2("ogg") ? "ogg" : iv;
    iw = iK || is.browserName == "mozilla firefox" && is.browserVersion <= 48 ? "webm" : "mp4";
  }
  iF = j7();
  id = hp();
  ie = hq();
  window.cordova;
  window.electron;
  var h = window.cordova ? document : window;
  h.addEventListener("online", j9, false);
  h.addEventListener("offline", ja, false);
  document.body.classList.remove("black");
  if (window.electron && (document.body.classList.add("electron"), window.showDirectoryPicker)) {
    document.body.classList.add("dirpicker");
  }
  if (!(mz || window.electron)) {
    document.getElementById("fade-all").classList.add("white");
  }
  if (mz) {
    document.body.classList.add("v" + mX);
    document.body.classList.add("darkback");
  }
  if (iP) {
    document.body.classList.add("mod");
  }
  if (ir) {
    document.body.classList.add("modbox");
  }
  if (!(!ic || ix || iy)) {
    document.body.classList.add("appBrowser");
  }
  if (ix) {
    document.body.classList.add("appBrowserDemo");
  }
  if (iy) {
    document.body.classList.add("afs");
  }
  if (iz) {
    document.body.classList.add("featureLocked");
  }
  if (iQ) {
    document.body.classList.add("hasHBI");
  }
  if (mV) {
    document.body.classList.add("miniPlayer");
  }
  if (window.cordova && iK) {
    document.addEventListener("backbutton", function (i) {
      i.preventDefault();
      mH();
    }, false);
  }
  if (window.cordova && mz && !iH && !window.electron) {
    document.addEventListener("pause", pj, false);
    document.addEventListener("resume", pk, false);
  }
  if (window.cordova && mz && iK) {
    window.addEventListener("native.keyboardshow", jZ);
    window.addEventListener("native.keyboardhide", k0);
  }
  if (mz && !window.cordova) {
    window.electron;
  }
  jk();
}
function iU() {
  if (window.cordova) {
    var g = getComputedStyle(document.documentElement).getPropertyValue("--sab");
    if (g && g != "" && parseInt(g) > 0) {
      return true;
    }
  }
  return false;
}
function iV() {
  var h;
  var i;
  var j = [];
  j.push(is.uuid);
  for (h in lE.getAllItem()) {
    if (h.indexOf("uuid-") != -1) {
      if (h.replace("uuid-", "") != "") {
        j.push(h.replace("uuid-", ""));
      } else {
        lE.removeItem(h);
      }
    }
    if (h.indexOf("mix-") != -1 && (i = JSON.parse(lE.getItem(h))).uuid) {
      j.push(i.uuid);
    }
  }
  return gK(j, false);
}
function iW() {
  return !(!window.navigator || window.navigator.standalone !== true) || !!window.matchMedia("(display-mode: standalone)").matches;
}
function iX() {
  var h;
  return !(window.electron || iH || iN || (h = i9(), !(iL || iM || h.h <= 500 && h.w <= 1000)));
}
function iY() {
  var g;
  return !!window.matchMedia && ((g = window.matchMedia("only screen and (min--moz-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 2.6/2), only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen  and (min-device-pixel-ratio: 1.3), only screen and (min-resolution: 1.3dppx)")) && g.matches || window.devicePixelRatio > 1);
}
function iZ() {
  var h = false;
  try {
    document.createEvent("TouchEvent");
    h = true;
  } catch (j) {}
  if (window.hasOwnProperty("ontouchstart") || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0) {
    h = true;
  }
  return h = window.matchMedia("(pointer: coarse)").matches ? true : h;
}
function j0() {
  return window.matchMedia("(hover: hover)").matches && window.matchMedia("(pointer: fine)").matches;
}
function j1() {
  return {
    build: il,
    machine: is,
    user: it
  };
}
function j2(g) {
  g = g || "mp3";
  var h = document.createElement("audio");
  return !(!h.canPlayType || !h.canPlayType("audio/" + g + ";").replace(/no/, ""));
}
function j3() {
  var g = window.hasOwnProperty("HTMLCanvasElement");
  var h = window.AudioContext || window.webkitAudioContext || false;
  var j = window.requestAnimationFrame || window.webkitRequestAnimationFrame || false;
  var k = typeof new XMLHttpRequest().responseType == "string";
  var l = !hl(id) && !hl(ie);
  window.AudioContext = h;
  window.requestAnimationFrame = j;
  if (g) {
    if (h) {
      if (k) {
        if (l) {
          if (j) {
            return "ok";
          } else {
            return "RAF";
          }
        } else {
          return "CSS3";
        }
      } else {
        return "XHR";
      }
    } else {
      return "Audio API";
    }
  } else {
    return "Canvas";
  }
}
function j4() {
  if (window.cordova && typeof ScreenEdgesPlugin == "object") {
    ScreenEdgesPlugin.setPreferredEdges(["top", "bottom"], function () {}, function (g) {});
  }
}
function j5() {
  if (window.cordova && typeof ScreenEdgesPlugin == "object") {
    ScreenEdgesPlugin.setPreferredEdges([], function () {}, function (g) {});
  }
}
function j6() {
  var h = typeof window.Worker == "function";
  window.cordova;
  return h;
}
function j7(g) {
  var i = window.hasOwnProperty("PointerEvent") ? "pointer" : window.hasOwnProperty("TouchEvent") ? "touch" : "mouse";
  var g = g || i;
  var i = {};
  if (g == "pointer") {
    i.down = "pointerdown";
    i.up = "pointerup";
    i.move = "pointermove";
    i.cancel = "pointercancel";
    i.leave = "pointerleave";
  } else if (g == "touch") {
    i.down = "touchstart";
    i.up = "touchend";
    i.move = "touchmove";
    i.cancel = "touchcancel";
    i.leave = "touchcancel";
  } else if (g == "mouse") {
    i.down = "mousedown";
    i.up = "mouseup";
    i.move = "mousemove";
    i.cancel = "mouseleave";
    i.leave = "mouseleave";
  }
  return i;
}
function j8() {
  window.oncontextmenu = function () {
    return false;
  };
}
function j9() {
  iu = true;
  mT.tryConnectDB();
  sE();
}
function ja() {
  iu = false;
}
function jb() {
  var g = false;
  if (navigator.onLine) {
    g = navigator.onLine;
  } else if (navigator.network && navigator.network.connection && navigator.network.connection.type) {
    g = !(navigator.network.connection.type == Connection.NONE);
  }
  return g;
}
function jc() {
  if (window.plugins && window.plugins.insomnia && !iH) {
    window.plugins.insomnia.keepAwake(function () {}, function () {});
  }
}
function jd() {
  if (window.plugins && window.plugins.insomnia && !iH) {
    window.plugins.insomnia.allowSleepAgain(function () {}, function () {});
  }
}
function je() {}
function jf() {
  return {
    guid: lE.getItem("user-guid") || "",
    djname: lE.getItem("user-djname") || "",
    lang: lE.getItem("user-lang") || ""
  };
}
function jg(g) {
  if (g.guid) {
    it.guid = g.guid;
    lE.setItem("user-guid", it.guid, true);
  }
  if (g.djname) {
    it.djname = g.djname;
    lE.setItem("user-djname", it.djname, true);
  }
  if (g.lang) {
    it.lang = g.lang;
    lE.setItem("user-lang", it.lang, true);
  }
  it = jf();
}
function jh() {
  var h;
  var i;
  var j;
  if (window.electron && il.store == "steam") {
    j = electron.vars && electron.vars.user ? electron.vars.user.name : "";
    jg({
      guid: i = (h = electron.ipc.readUserFile({
        path: "",
        file: "incrediuser.json"
      })).ok ? h.data.guid : hj(),
      djname: j = he(hd(j = (j = !(j = !j && h.ok && h.data ? h.data.djname : j) && localStorage.getItem("user-djname") ? localStorage.getItem("user-djname") : j) || "", new RegExp(gJ.classic.source, "g")))
    });
    electron.ipc.writeUserFile({
      path: "",
      file: "incrediuser.json",
      data: {
        guid: i,
        djname: j
      }
    });
  }
}
function ji(g) {
  var q;
  var w;
  var x = navigator.userAgent || navigator.vendor || window.opera;
  var y = x.toLowerCase();
  var z = "(?)";
  if (/(fban|fbios|fbav|fbbv|fbid)/gi.test(y)) {
    z = "Facebook";
  } else if (/(twitter)/gi.test(y)) {
    z = "Twitter";
  }
  var A = "(?)";
  if (window.cordova && device) {
    A = device.platform;
  } else if (/(macintosh)/gi.test(y) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2 || /(iphone|ipad|ipod)/gi.test(y)) {
    A = "iOS";
  } else if (/(mac os x)/gi.test(y)) {
    A = "Mac OS X";
  } else if (/(macppc|macintel|mac_powerpc|macintosh)/gi.test(y)) {
    A = "Mac OS";
  } else if (/(windows|win16)/gi.test(y)) {
    A = "Windows";
  } else if (/(android)/gi.test(y)) {
    A = "Android";
  }
  var B = "(?)";
  var C = y;
  if (window.cordova && device) {
    C = device.model;
  }
  if (/(windows phone|windows phone)/gi.test(C)) {
    B = "Windows phone";
  } else if (/(windows|win16)/gi.test(C)) {
    B = "PC";
  } else if (/(android)/gi.test(C)) {
    B = "Android";
  } else if (/(macintosh)/gi.test(C) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2 && window.screen.width == 1024 && window.screen.height == 1366) {
    B = "iPadPro";
  } else if (/(macintosh)/gi.test(C) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2 || /(ipad)/gi.test(C)) {
    B = "iPad";
  } else if (/(iphone)/gi.test(C)) {
    B = "iPhone";
  } else if (/(ipod)/gi.test(C)) {
    B = "iPod";
  } else if (/(mac)/gi.test(C)) {
    B = "Mac";
  }
  if (window.cordova && device && jj[device.model] != null && /ipad pro/i.test(jj[device.model])) {
    C = "iPadPro";
  }
  var C = "(?)";
  if (window.cordova && device) {
    C = device.model;
  } else if (window.navigator != null && navigator.platform != null) {
    C = navigator.platform;
  }
  var D = "(?)";
  if (window.cordova && device) {
    D = device.version;
  } else if (A == "Windows") {
    if (/(windows 10.0|windows nt 10.0)/gi.test(y)) {
      D = "10";
    } else if (/(windows 8.1|windows nt 6.3)/gi.test(y)) {
      D = "8.1";
    } else if (/(windows 8|windows nt 6.2)/gi.test(y)) {
      D = "8";
    } else if (/(windows 7|windows nt 6.1)/gi.test(y)) {
      D = "7";
    } else if (/(windows nt 6.0)/gi.test(y)) {
      D = "Vista";
    } else if (/(windows nt 5.2)/gi.test(y)) {
      D = "Server 2003";
    } else if (/(windows nt 5.1|windows xp)/gi.test(y)) {
      D = "XP";
    } else if (/(windows nt 5.0|windows 2000)/gi.test(y)) {
      D = "2000";
    } else if (/(win 9x 4.90|windows me)/gi.test(y)) {
      D = "ME";
    } else if (/(windows 98|win98)/gi.test(y)) {
      D = "98";
    } else if (/(windows 95|win95|windows_95)/gi.test(y)) {
      D = "95";
    } else if (/(windows nt 4.0|winnt4.0|winnt|windows nt)/gi.test(y)) {
      D = "NT 4.0";
    } else if (/(windows ce)/gi.test(y)) {
      D = "CE";
    } else if (/(win16)/gi.test(y)) {
      D = "3.11";
    }
  } else if (A == "Android") {
    F = "Android";
    G = x.toLowerCase().indexOf(F.toLowerCase());
    E = parseFloat(x.slice(G + F.length, G + F.length + 6));
    D = isNaN(E) ? D : E;
  } else if (A == "iOS") {
    F = "OS";
    G = x.toLowerCase().indexOf(F.toLowerCase());
    E = x.slice(G + F.length, G + F.length + 6);
    E = parseFloat(E.replace("_", "."));
    D = isNaN(E) ? D : E;
  } else if (A.indexOf("Mac OS") != -1) {
    F = A.indexOf("Mac OS X") != -1 ? "Mac OS X" : "Mac OS";
    G = x.toLowerCase().indexOf(F.toLowerCase());
    E = x.slice(G + F.length, G + F.length + 6);
    E = parseFloat(E.replace("_", "."));
    D = isNaN(E) ? D : E;
  }
  var y = 0;
  if (A == "iOS") {
    if (window.cordova && device) {
      if (jj[device.model] != null && B == "iPhone") {
        y = jj[device.model].replace("iPhone", "").split(" ")[0];
        y = /SE/i.test(y) ? 7 : /X/i.test(y) ? 10 : parseInt(y);
      }
    } else if (B == "iPhone" && (G = window.screen.width, F = window.screen.height, G == 320 && F == 480 ? y = 4 : G == 320 && F == 568 ? y = 5 : G == 375 && F == 667 || G == 414 && F == 736 ? y = 6 : (G == 375 && F == 812 || G == 414 && F == 896) && (y = 10), window.devicePixelRatio == 3) && (G == 812 && F == 375 || F == 896 && G == 414)) {
      y = 10;
    }
  }
  var E = "";
  if (window.cordova && device) {
    E = il.os;
  } else if (/mac os/i.test(A)) {
    E = "osx";
  } else if (/windows/i.test(A)) {
    E = "win";
  } else if (/android/i.test(A)) {
    E = "and";
  } else if (/ios/i.test(A)) {
    E = "ios";
  }
  var F = navigator.appName;
  var G = "" + parseFloat(navigator.appVersion);
  var H = parseInt(navigator.appVersion, 10);
  if ((q = x.indexOf("OPR/")) != -1) {
    F = "Opera";
    G = x.substring(q + 4);
  } else if ((q = x.indexOf("Opera")) != -1) {
    F = "Opera";
    G = x.substring(q + 6);
    if ((q = x.indexOf("Version")) != -1) {
      G = x.substring(q + 8);
    }
  } else if ((q = x.indexOf("Edge")) != -1) {
    F = "Microsoft Edge";
    G = x.substring(q + 5);
  } else if ((q = x.indexOf("MSIE")) != -1) {
    F = "Microsoft Internet Explorer";
    G = x.substring(q + 5);
  } else if ((q = x.indexOf("Trident")) != -1) {
    F = "Microsoft Internet Explorer";
    if ((q = x.indexOf("rv:")) != -1) {
      G = x.substring(q + 3);
    }
  } else if ((q = x.indexOf("CriOS")) != -1 && /iphone|ipod|ipad/i.test(x)) {
    F = "Google Chrome for IOS";
    G = x.substring(q + 6);
  } else if ((q = x.indexOf("Chrome")) != -1) {
    F = "Google Chrome";
    G = x.substring(q + 7);
  } else if ((q = x.indexOf("Safari")) != -1) {
    F = "Safari";
    G = x.substring(q + 7);
    if ((q = x.indexOf("Version")) != -1) {
      G = x.substring(q + 8);
    }
  } else if ((q = x.indexOf("Firefox")) != -1) {
    F = "Mozilla Firefox";
    G = x.substring(q + 8);
  } else if ((w = x.lastIndexOf(" ") + 1) < (q = x.lastIndexOf("/")) && (F = x.substring(w, q), G = x.substring(q + 1), F.toLowerCase() == F.toUpperCase())) {
    F = navigator.appName;
  }
  if ((w = (G = (w = G.indexOf(";")) != -1 ? G.substring(0, w) : G).indexOf(" ")) != -1) {
    G = G.substring(0, w);
  }
  H = parseInt("" + G, 10);
  if (isNaN(H)) {
    G = "" + parseFloat(navigator.appVersion);
    H = parseInt(navigator.appVersion, 10);
  }
  var x = "";
  if (window.device && window.device.uuid) {
    x = device.uuid.toUpperCase();
  } else if (window.electron && window.electron.vars.uuid) {
    x = window.electron.vars.uuid;
  } else if (hm(lE.getItem("tmp-uuid"))) {
    x = lE.getItem("tmp-uuid");
  } else {
    x = "tmp-" + hh("-").toUpperCase();
    lE.setItem("tmp-uuid", x);
  }
  var I = {
    osName: A,
    osTiny: E,
    osVersion: D.toString(),
    deviceModel: B,
    deviceName: C,
    deviceNumber: y,
    browserName: F,
    browserVersion: H,
    browserFullVersion: G,
    browserAppName: navigator.appName,
    browserUserAgent: navigator.userAgent,
    language: navigator.language || "",
    webviewEmbed: z,
    uuid: x
  };
  var J = 0;
  if (g === true) {
    for (J in I) {
      if (typeof I[J] == "string") {
        I[J] = I[J].toLowerCase();
      }
    }
  }
  if (window.device) {
    for (J in device);
  }
  for (J in I);
  return I;
}
window.devicePixelRatio = window.devicePixelRatio || 1;
var jj = {};
function jk() {
  var h;
  var j;
  var k;
  var l;
  var m = "aHR0cHM6Ly93d3cuaW5jcmVkaWJveC5jb20v";
  var p = "d3d3LmluY3JlZGlib3guY29t";
  var q = window.location.search;
  var q = new URLSearchParams(q);
  if (window.electron && il.store == "steam" && btoa(electron.vars.arg) != "YXJw") {
    h = "Incredibox needs to run from<br>your Steam library.<br>Thanks for your support!";
    new jn("#pop-dialog").open(h, "&#129488;", [], true, true);
    throw new Error(h.split("<br>").join(" "));
  }
  function u() {
    document.body.innerHTML = "";
    window.location.href = atob(m);
    window.top.location.href = atob(m);
  }
  if (window.cordova && location.protocol.match("http")) {
    u();
  }
  if (!(window.cordova || window.electron || ir || location.protocol == "https:")) {
    u();
  }
  if (!(window.cordova || window.electron || ir || location.protocol != "https:" || btoa(location.hostname) == p)) {
    u();
  }
  if (!(window.cordova || window.electron || ir || location.protocol != "https:" || btoa(location.hostname) != p || q.has("mix")) && q.get("v") > 4) {
    u();
  }
  if (window !== window.top) {
    j = false;
    k = ["", "es/", "fr/", "pt/", "ru/", "cn/"];
    l = (l = (l = window.top.document.location.href).match("mix/") ? l.split("/mix/")[0] + "/mix/" : l).match("pwa") ? l.split("/pwa")[0] + "/pwa" : l;
    ["demo/", "playlist", "mix/", "pwa"].forEach(function (v) {
      k.forEach(function (w) {
        if (l == atob(m) + w + v) {
          j = true;
        }
      });
    });
    if (!j) {
      u();
    }
  }
}
function jl() {
  var h = parseInt(getComputedStyle(document.documentElement).getPropertyValue("--sal"));
  var i = parseInt(getComputedStyle(document.documentElement).getPropertyValue("--sar"));
  var h = Math.max(h, i, 20);
  var j = ":root {";
  j += "--fullfill-padding : " + h + "px;";
  if (mz) {
    j += "\n\t\t\t--app-v : " + mX + ";\n\t\t\t--col0 : " + mP.colors[0] + ";\n\t\t\t--col1 : " + mP.colors[1] + ";\n\t\t\t--col2 : " + mP.colors[2] + ";\n\t\t\t--col3 : " + mP.colors[3] + ";\n\t\t\t--col4 : " + mP.colors[4] + ";\n\t\t\t--col5 : " + mP.colors[5] + ";\n\t\t\t--url-bt-bonus-lock: url('data:image/svg+xml," + encodeURIComponent("<svg viewBox=\"0 0 70 70\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#FFFFFF\" d=\"m47.19 29.24h-2.79v-5.39c0-4.27-4.06-9.04-9.49-9.05-5.43 0-9.49 4.79-9.49 9.05v5.39h-2.61c-1.27 0-2.31 1.04-2.31 2.31v17.33c0 1.27 1.04 2.31 2.31 2.31h24.38c1.27 0 2.31-1.04 2.31-2.31v-17.33c0-1.27-1.04-2.31-2.31-2.31zm-18.28-5.39c0-2.26 2.34-5.56 6-5.57 3.67 0 6.01 3.3 6.01 5.57v5.39h-12v-5.39z\"/></svg>") + "');\n\t\t\t--url-title-svg: url('data:image/svg+xml," + encodeURIComponent("<svg viewBox=\"0 0 407 80\" xmlns=\"http://www.w3.org/2000/svg\"><style type=\"text/css\">.st0{fill:#FF00FF;}.st1{fill:#00FF00;}</style><path d=\"M58.1,6.3c0.3-1.4,1.6-2.4,3-2.3h3c0.7,0,1.4,0.3,1.8,0.9c0.4,0.7,0.5,1.5,0.2,2.3L48.6,76c-0.3,1.4-1.6,2.4-3.1,2.3h-3  c-0.7,0-1.4-0.3-1.8-0.9c-0.4-0.7-0.5-1.5-0.3-2.2L58.1,6.3z\"/><path d=\"m75.7 55.1 10.7-17.7c1.8-3.2 4.2-6 7-8.4 2.4-1.9 4.4-2.8 6.1-2.8h2.2c0.9 0 1.8 0.1 2.6 0.5 0.8 0.6 1.3 1.5 1.5 2.5 0.4 1.3 0.2 3.3-0.6 5.8l-11.6 41.8c-0.1 0.8-0.8 1.5-1.7 1.4h-5.4c-1 0-1.3-0.8-0.8-2.4l10.8-35.2c0.4-1.2 0.7-2.4 0.8-3.6 0-0.6-0.2-0.9-0.7-0.9-0.6 0.1-1.2 0.4-1.6 0.9-1 1-1.9 2.2-2.6 3.4-1.3 1.9-2.9 4.3-4.7 7.3s-4.1 6.6-7 11c-5.3 8.1-9.1 14.1-11.4 18.2-0.5 0.9-1.5 1.4-2.6 1.4h-3c-0.4 0-0.8-0.3-1.1-0.8-0.3-0.6-0.3-1.2-0.1-1.8l12.5-46.8c0.3-1.8 1.1-2.7 2.1-2.7h4.4c1.7 0 2.3 1 1.7 3l-7.5 25.9z\"/><path d=\"m139.2 31.9c1.1 1.2 1.2 2.2 0.4 3.2l-1.7 2c-1.2 1.3-2.2 1.5-3.1 0.5l-1.1-1.2c-2.5-2.5-4.4-3.6-5.9-3.3-2.5 0.5-5.1 3.1-7.8 7.9-2.7 4.6-4.7 9.6-5.9 14.8-1.2 5.1-1.5 9.3-0.9 12.7 0.3 1 1 1.8 1.9 2.3 0.7 0.6 1.7 0.9 2.6 0.8 2.6-1.6 5-3.7 6.9-6.2 0.8-1 1.9-1.1 3.3-0.2l1.5 1c2.2 1.3 0.3 4.4-5.6 9.1-2.4 2.1-4.3 3.3-5.7 3.7-1.3 0.4-3.4-0.1-6.2-1.5s-4.5-2.8-5.1-4.2c-1.9-4.2-1.9-10.1-0.1-17.8s4.1-13.6 6.8-17.7c2.2-3.5 4.8-6.6 7.9-9.3 2.3-2 5.3-3 8.3-2.8 3.1 0.4 6.3 2.4 9.5 6.2\"/><path d=\"m153.7 39.9c1.8-3.1 3.8-6 6-8.8 1.2-1.6 2.5-3.1 4.1-4.4 1.4-0.7 2.9-1 4.5-0.9h1c2 0 2.7 0.8 2.1 2.3-0.6 1.2-1.5 2.2-2.5 3-2 1.9-3.8 4-5.4 6.2-2.3 2.9-3.4 4.8-3.4 5.7 0.1 2 1.1 3.8 2.6 5 0.4 0.2 0.5 0.7 0.3 1.1s-0.6 0.7-1.1 0.8l-3.9 0.7c-0.9 0.2-1.8 0.1-2.5-0.3-0.6-0.4-1.6-2-3-4.7l-8 30.4c-0.3 1.4-1.7 2.4-3.1 2.2h-3c-1.9 0-2.7-0.8-2.3-2.3l12.5-47.7c0.3-1.3 1.5-2.2 2.9-2h3.2c0.6-0.1 1.3 0.1 1.8 0.5 0.3 0.3 0.4 0.9 0.2 1.7l-3 11.5z\"/><path d=\"m172.5 64c-0.9 5.1 0 7.9 2.8 8.4 2.5-0.9 5.6-3.5 9.3-7.8 0.5-0.5 1.4-0.6 2-0.2l1.9 1.2c0.8 0.4 1.2 1.4 0.9 2.3-1.3 2.5-3.7 5.1-7.2 7.9s-6.3 4-8.5 3.6c-4.8-1.2-7.7-3.8-8.5-7.7-1-5.2-0.1-12.3 2.6-21.3s6.4-15.8 11.2-20.3c1.8-1.6 3.9-2.8 6.3-3.4 2.6-0.7 5.4-0.5 7.9 0.6 2.8 1.2 4.1 4.5 4.1 10s-2.4 10.7-7.2 15.6c-5 5.1-11 8.8-17.6 11.1m1.3-6.6c2.9-1.2 5.7-2.8 8.2-4.8 2.3-1.9 4.2-4.1 5.6-6.7 1.4-2.5 2.2-5.3 2.2-8.1s-0.8-4.2-2.4-4.2c-3.1 0-5.8 2.6-8.2 7.7-2.3 5.2-4.2 10.6-5.4 16.1\"/><path d=\"m242.6 3-19.5 67.6c2.4-2 4.4-4.4 6.2-6.9 0.7-1.1 1.6-1.3 2.6-0.7l2.4 1.6c1.1 0.7 1.3 1.6 0.5 2.6-2.3 2.8-4.9 5.4-7.7 7.6-2.5 1.9-5.4 3.2-8.4 3.8-0.8 0.3-1.6-0.1-1.8-0.9 0-0.1 0-0.1-0.1-0.2l-2-5.7c-1.3 1.8-2.8 3.4-4.5 4.8-1.6 1.3-2.9 1.9-3.9 1.9h-0.2c-1.3 0-3.1-1.1-5.3-3.4-2-1.9-3.3-4.5-3.4-7.3-0.1-5.3 1.4-12.3 4.5-20.8s6-14.2 8.7-16.8c2.6-2.6 6.3-4 10-3.9 2.3 0 4.5 0.6 6.5 1.9l6.9-25.5c0.4-1.5 1.8-2.4 3.3-2.2h2.9c1.9-0.1 2.7 0.8 2.3 2.5m-17.1 31c-3.4-1.9-6.3-2-8.5-0.4-2.3 1.6-4.5 5.3-6.6 10.9-1.8 4.9-3.4 9.8-4.6 14.9-1 4.3-1.1 7.2-0.4 8.9s1.8 1.8 3.4 0.4c3.2-2 6.1-5.7 8.6-11.2 2.6-5.6 5.3-13.4 8.1-23.5\"/><path d=\"m256.1 28.4-12.4 47.7c-0.3 1.4-1.6 2.4-3.1 2.2h-3c-1.9 0-2.7-0.8-2.3-2.4l12.5-47.7c0.3-1.3 1.5-2.2 2.9-2h3.4c0.6-0.1 1.3 0.1 1.8 0.5 0.3 0.2 0.3 0.8 0.2 1.7m-1.9-17.8h1c1.2 0.1 2.3 0.6 3.1 1.6 0.9 0.9 1.5 2.2 1.5 3.6 0 1.3-0.5 2.6-1.5 3.4-1 1-2.4 1.5-3.8 1.4h-0.8c-1.2 0-2.3-0.6-3.1-1.5-1.9-2-1.8-5.1 0.1-7 0.8-1 2.1-1.6 3.5-1.5\"/><path d=\"m269.9 78.7c-2.3 0-4.6-0.7-6.6-2-0.5 1-1.6 1.6-2.7 1.6h-1.7c-2.4 0-3.4-1.1-3-3.3l18.8-72.3c0.3-1.4 1.6-2.4 3.1-2.2h2.3c1.9 0 2.6 0.8 2.2 2.3l-8.9 35 1.5-2.5c1.3-2.3 3-4.4 5-6.2 1.9-1.7 3.4-2.5 4.5-2.5h0.2c0.9 0.2 1.8 0.6 2.5 1.2 1.3 0.9 2.5 2.1 3.4 3.4 1.1 1.3 1.9 2.8 2.3 4.4 0.4 1.5 0.3 4.3-0.3 8.4-1.1 5.7-2.7 11.4-4.8 16.8-2.6 7.1-5.2 11.9-7.9 14.4-2.7 2.3-6.2 3.6-9.9 3.5m-5.2-7.5c3.3 2 6.2 2.1 8.6 0.4s4.8-5.7 7.1-11.8c1.9-4.7 3.3-9.5 4.4-14.5 0.5-2.3 0.8-4.7 0.8-7.1-0.1-1.2-0.8-2.2-1.9-2.7-1.1-0.6-3 0.6-5.7 3.5-3 3.4-5.3 7.4-6.9 11.6-2.4 6.4-4.5 12.9-6.3 19.4l-0.1 1.2z\"/><path d=\"m294.5 63.4c0.3-9.1 2.6-18 6.9-26 4.3-8.2 9.7-12.2 16.4-12.1 3.4 0.2 6.4 2.1 8 5.2 1.4 2.2 2 6 1.8 11.4-0.2 9.9-3.1 19.7-8.3 28.1-3.7 6.3-8.6 9.4-14.7 9.1-2.3-0.1-4.5-1.2-6.1-2.9-2.9-2.6-4.2-6.9-4-12.8m17.6 4.1c4.6-7.4 7.1-16 7.3-24.7 0.1-4-0.1-6.7-0.6-8.1-0.4-1.3-1.6-2.2-3-2.1-1.7 0-3.2 0.8-4.2 2.2-1.5 1.9-2.7 3.9-3.7 6.2-3.1 6.7-4.8 14.1-4.9 21.5-0.1 6.2 0.9 9.4 3.2 9.6 1.9-0.1 3.9-1.6 5.9-4.6\"/><path d=\"m323 75.7c8.3-10.1 14.5-17.9 18.6-23.6-1.7-7.2-3.7-14.6-6-22.2-0.9-2.5-0.3-3.8 1.6-3.8h2.8c1.4 0 2.7 1 2.9 2.4 1.8 6.3 3.4 12.1 4.6 17.2 3-4.4 6.8-10.5 11.4-18.4 0.6-0.9 1.7-1.4 2.8-1.3h3.5c1.8 0 2 1.2 0.5 3.7-5 8.3-10.4 16.4-16.2 24.2 1.6 7 3 14.3 4.2 22.1 0.2 1.4-0.4 2.1-1.6 2.2l-3.1 0.3c-0.6 0.2-1.3 0-1.8-0.4-0.5-0.9-0.8-1.8-0.9-2.8-0.7-4.7-1.6-9.5-2.7-14.6l-9.4 11.7-2.6 3.3-1 1.2c-0.2 0.2-0.4 0.4-0.6 0.5l-0.7 0.3c-0.5 0.3-1.1 0.4-1.6 0.4h-2.9c-0.8 0.1-1.5-0.2-1.9-0.9-0.5-0.4-0.4-1 0.1-1.5\"/><path class=\"st0\" d=\"m388.5 5.5-12.6 1.7c-0.1 0-0.2 0.1-0.2 0.2l-0.1 8.8c-0.2-0.1-0.5-0.1-0.7-0.1-1.6 0-2.9 1.3-2.9 2.9s1.3 3 2.9 3 2.9-1.3 2.9-2.9l0.1-8.2 8.5-1.1v4.7c-0.2-0.1-0.5-0.1-0.7-0.1-1.6 0-2.9 1.3-2.9 2.9s1.3 2.9 2.9 2.9 2.9-1.3 2.9-2.9l0.1-11.7c0.1 0.1 0 0-0.2-0.1 0.1 0.1 0 0.1 0 0\"/><path class=\"st1\" d=\"m404.8 0.5c-0.1 0-0.1-0.1-0.2-0.1l-8.5 1.2c-0.1 0-0.2 0.1-0.2 0.2v5.9h-0.4c-1.1 0-2.1 0.9-2.1 2.1s0.9 2.1 2.1 2.1c1.1 0 2-0.9 2.1-2.1v-5.5l5.6-0.7v3h-0.4c-1.1 0-2.1 0.9-2.1 2.1s0.9 2.1 2.1 2.1c1.1 0 2-0.9 2.1-2v-7.9c0-0.1 0-0.1-0.1-0.2v-0.2z\"/></svg>") + "');\n\t\t";
    mP.bonusarray.forEach(function (k, l) {
      j += ir ? "--url-bt-bonus" + (l + 1) + ": url('" + rx["bonus/" + k.name + ".svg"]?.dataURL + "');" : "--url-bt-bonus" + (l + 1) + ": url('data:image/svg+xml," + encodeURIComponent(k.svg) + "');";
    });
    if (!iP) {
      j += "--url-img-home-screen : url(../" + mP.folder + "image/home-screen.jpg);";
    }
  }
  if (!ir) {
    j += "--url-img-bt-stores : url(" + im + "img/bt-stores-" + jU.split("-")[0] + ".png);";
  }
  j = j + ("--url-img-team : url(data:image/jpeg;base64," + jm + ")") + "}";
  var i = document.head || document.getElementsByTagName("head")[0];
  var h = document.createElement("style");
  i.appendChild(h);
  h.type = "text/css";
  h.appendChild(document.createTextNode(j));
}
var jm = "";
function jn(g) {
  var i = this;
  var j = $(g);
  function k(l) {
    l.preventDefault();
    hu(l);
    l.data.bt.addTouchAnimation();
    if (l.data.func) {
      l.data.func();
    } else {
      i.close();
    }
  }
  this.$div = j;
  this.$bck = j.find(".bac");
  this.$scale = j.find(".scale");
  this.$box = j.find(".box");
  this.$pop = j.find(".pop");
  this.$pop.$title = j.find(".title");
  this.$pop.$text = j.find(".text");
  this.$pop.$content = j.find(".content");
  this.opened = false;
  this.neverClose = false;
  this.isOpen = function () {
    return i.opened;
  };
  this.open = function (m, q, v, w, x, y, z) {
    if (i.isOpen()) {
      i.killall();
    }
    j.on(iF.down, hu);
    i.opened = true;
    i.neverClose = !hl(y) && y;
    m = hl(m) ? "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod" : m;
    q = hl(q) ? "Info" : q;
    v = hl(v) ? ["Close"] : v;
    w = hl(w) ? [] : w;
    x = !hl(x) && x;
    if (hm(z)) {
      j.attr("data-name", z);
    }
    j.addClass("show");
    i.cleanContent();
    i.$pop.$title.html(q);
    i.$pop.$text.html(m);
    for (var A = 0, B = v.length; A < B; A++) {
      var C = v[A];
      var D = $("<div class=\"bt bt-light\" id=\"bt-mini" + A + "\"></div>");
      (D = new kU(D)).html("<div class=\"bck\"><div class=\"txt\">" + C + "</div></div><div class=\"hitzone\"></div>");
      D.on(iF.down, {
        func: w[A],
        bt: D
      }, k);
      i.$pop.$content.append(D);
    }
    if (x) {
      j.css({
        "z-index": "9999"
      });
    }
    i.fadeInBck();
    i.$box.removeClass("open close").addClass("open");
    la("popup-dialog");
  };
  this.close = function (l, m) {
    if (hm(l)) {
      l.preventDefault();
    }
    i.fadeOutBck();
    i.$box.removeClass("open close").addClass("close").one(ie, function (q) {
      $(q.target).removeClass("close");
      j.removeClass("show");
      j.removeAttr("data-name");
      j.off();
      i.cleanContent();
      i.opened = false;
      lb("popup-dialog");
      lc();
      if (m) {
        m();
      }
    });
  };
  this.killall = function () {
    lb("popup-dialog");
    j.off();
    j.removeAttr("data-name");
    j.$pop.removeClass("fluid");
    i.cleanContent();
    i.$bck.removeClass("animateFadeIn animateFadeOut");
    i.opened = false;
  };
  this.fadeInBck = function (l) {
    if (l) {
      i.$bck.addClass("mini");
    } else {
      i.$bck.removeClass("mini");
    }
    i.$bck.addClass("animateFadeIn");
  };
  this.fadeOutBck = function () {
    i.$bck.addClass("animateFadeOut").one(ie, function (l) {
      $(l.target).removeClass("animateFadeIn animateFadeOut");
    });
  };
  this.cleanContent = function () {
    i.$pop.find(".bt").off();
    i.$pop.$content.empty();
    i.$pop.$title.empty();
    i.$pop.$text.empty();
  };
  return this;
}
function jo(g) {
  var j;
  var k = this;
  var m = $(g);
  var q = m.find(".bac");
  var v = m.find(".box");
  var w = m.find(".bt.icon");
  var x = m.find(".container");
  var y = m.find(".box-tab .tab").length > 0;
  var z = true;
  var A = true;
  function B() {
    z = true;
    q.removeClass("animateFadeIn animateFadeOut");
    k.closeComplete();
  }
  function C(E) {
    A = true;
    v.removeClass("slideUp slideDown").get(0).offsetHeight;
    j.onBoxCloseEnd();
    k.closeComplete();
    gG(E);
  }
  function D() {
    if (hm(k.onCloseTab)) {
      k.onCloseTab();
    }
    m.find(".tab.active").removeClass("active");
    m.find(".pop.active").removeClass("active");
    var E = $(this);
    var F = m.find(".pop#" + E.attr("id").replace("tab-", "pop-"));
    E.addClass("active");
    F.addClass("active");
    la(F.attr("id"));
  }
  this.$popup = m;
  this.$icon = w;
  this.$container = x;
  this.objCustom = j;
  this.open = function (E) {
    if (!(hm(j) && E.name == j.name)) {
      if (!m.hasClass("show")) {
        m.addClass("show");
      }
      if (!q.hasClass("animateFadeIn")) {
        k.showBck();
      }
      if (v.hasClass("slideUp")) {
        k.hideBox(function () {
          k.open(E);
        });
      } else {
        k.custom(E);
        k.showBox();
      }
    }
  };
  this.close = function (E) {
    k.hideBck(E);
    k.hideBox(null, E);
  };
  this.closeComplete = function () {
    if (z && A) {
      k.reinit();
      gG(j.onCloseComplete);
      j = null;
    }
  };
  this.reinit = function () {
    if (!j.static) {
      x.empty();
    }
    m.removeClass("show mini info action action-back no-action");
    m.removeAttr("data-name");
    q.removeClass("animateFadeIn animateFadeOut");
    v.removeClass("slideUp slideDown").get(0).offsetHeight;
  };
  this.custom = function (E) {
    j = {
      static: E.static || false,
      bodyclose: E.bodyclose || false,
      bckclose: E.bckclose || false,
      name: E.name || "no-name",
      icntype: E.icntype || "",
      class: E.class || "",
      content: E.content || "",
      onBoxOpenStart: E.onBoxOpenStart || gC,
      onBoxOpenEnd: E.onBoxOpenEnd || gC,
      onBoxCloseStart: E.onBoxCloseStart || gC,
      onBoxCloseEnd: E.onBoxCloseEnd || gC,
      onCloseComplete: E.onCloseComplete || gC
    };
    m.removeClass("big column mini info action action-back no-action");
    m.addClass(j.class);
    m.attr("data-name", j.name);
    if (j.icntype != "") {
      m.addClass(j.icntype);
      w.find("svg use").attr("xlink:href", "#ic-" + (j.icntype == "action" ? "close" : j.icntype == "action-back" ? "navl" : "info"));
    }
    if (!j.static) {
      x.html(j.content);
    }
  };
  this.refresh = function () {
    if (hm(j) && hm(j.content)) {
      x.html(j.content);
    }
  };
  this.showBck = function () {
    z = false;
    q.addClass("animateFadeIn").one(ie, function () {});
  };
  this.hideBck = function (E) {
    if (E === true) {
      B();
    } else {
      q.addClass("animateFadeOut").one(ie, function () {
        B();
      });
    }
  };
  this.showBox = function () {
    A = false;
    j.onBoxOpenStart();
    if (y) {
      m.find(".box-tab .tab").first().trigger(iF.down.split(" ")[0]);
      l8();
    }
    v.addClass("slideUp").one(ie, function () {
      if (j.bodyclose) {
        lG.on(iF.down, k.clickBck);
      }
      if (j.bckclose) {
        q.on(iF.down, k.close);
      }
      j.onBoxOpenEnd();
    });
  };
  this.hideBox = function (E, F) {
    if (j.bodyclose) {
      lG.off(iF.down, k.clickBck);
    }
    if (j.bckclose) {
      q.off(iF.down, k.close);
    }
    j.onBoxCloseStart();
    if (F === true) {
      C(E);
    } else {
      v.addClass("slideDown").one(ie, function () {
        C(E);
      });
    }
  };
  this.clickBck = function (E) {
    E.preventDefault();
    if (!($(E.target).closest(g + " .box").length > 0)) {
      if (!y || (E = hm((E = ~E.type.indexOf("touch") ? E.originalEvent : E).targetTouches) ? E.targetTouches[0] : E, Math.round(E.pageY) > 100)) {
        k.close();
      }
    }
  };
  this.isOpen = function () {
    return m.hasClass("show");
  };
  this.getName = function () {
    if (hm(j) && hm(j.name)) {
      return j.name;
    } else {
      return "";
    }
  };
  if (y) {
    m.find(".box-tab .tab").each(function (E) {
      $(this).on(iF.down, D);
    });
  }
  return this;
}
function jp() {
  if (hm(mv) && mv.isOpen()) {
    mv.close(true);
  }
}
function jq() {
  var h = mx.$popup.find("#pop-tuto .slideshow");
  h.$box = h.find(".img-row");
  h.$btL = h.find(".bt").first();
  h.$btR = h.find(".bt").last();
  h.$nav = h.find(".pt-box");
  h.init = function () {
    for (var k, m = this, p = 0, q = 0, u = 0, v = 0, w = this.find(".bloc").length, x = 100 / w, y = 0, z = 0; z < w; z++) {
      m.$nav.append("<div class=\"pt\"></div>");
    }
    this.addListener = function () {
      document.body.addEventListener(iF.up, m.onRelease);
      document.body.addEventListener(iF.leave, m.onRelease);
      document.body.addEventListener(iF.move, m.onMove);
    };
    this.removeListener = function () {
      document.body.removeEventListener(iF.up, m.onRelease);
      document.body.removeEventListener(iF.leave, m.onRelease);
      document.body.removeEventListener(iF.move, m.onMove);
    };
    this.onPress = function (A) {
      A = "targetTouches" in A ? A.targetTouches[0] : A;
      p = A.pageX;
      m.$box.removeClass("slide");
      k = mx.$popup.find(".slideshow")[0].clientWidth;
      m.removeListener();
      m.addListener();
    };
    this.onMove = function (A) {
      A = "targetTouches" in A ? A.targetTouches[0] : A;
      A = Math.round(p - A.pageX) * -1 * 100 / document.body.clientWidth;
      y = A * document.body.clientWidth / k;
      q = y / w * 0.6;
      m.$box.css({
        transform: "translate(" + (v + q) + "%,0)"
      });
    };
    this.onRelease = function () {
      m.removeListener();
      if (y < -15) {
        if (u != w - 1) {
          m.slide("left");
        } else {
          m.slide();
        }
      } else if (y > 15 && u !== 0) {
        m.slide("right");
      } else {
        m.slide();
      }
      y = q = p = 0;
    };
    this.slide = function (A) {
      m.removeListener();
      m.$box.addClass("slide");
      if (A === "left") {
        u++;
      } else if (A === "right") {
        u--;
      }
      v = -u * x;
      m.$box.css({
        transform: "translate(" + String(v) + "%,0)"
      });
      m.lightup();
    };
    this.clickLeft = function (A) {
      if (u !== 0) {
        m.slide("right");
      }
    };
    this.clickRight = function (A) {
      if (u != w - 1) {
        m.slide("left");
      }
    };
    this.lightup = function () {
      m.$nav.find(".pt").removeClass("active");
      m.$nav.find(".pt").eq(u).addClass("active");
      m.$btL.removeClass("disable");
      m.$btR.removeClass("disable");
      if (u === 0) {
        m.$btL.addClass("disable");
      }
      if (u == w - 1) {
        m.$btR.addClass("disable");
      }
    };
    this.desactive = function () {
      if (m.$box && m.$box[0]) {
        if (u > 0) {
          p = q = u = v = y = 0;
          m.slide();
        }
        m.$box[0].removeEventListener(iF.down, m.onPress);
        m.$btL[0].removeEventListener(iF.down, m.clickLeft);
        m.$btR[0].removeEventListener(iF.down, m.clickRight);
        m.removeListener();
      }
    };
    this.active = function () {
      if (m.$box && m.$box[0]) {
        m.$box[0].addEventListener(iF.down, m.onPress);
        m.$btL[0].addEventListener(iF.down, m.clickLeft);
        m.$btR[0].addEventListener(iF.down, m.clickRight);
        m.lightup();
      }
    };
  };
  h.init();
  return h;
}
function jr() {
  mw = new jo(".box-popup#pop-info");
  (mx = new jo(".box-popup#pop-param")).$slide = jq();
  $("#pop-language .box-lang .bt").on(iF.down, function (h) {
    h.preventDefault();
    gF(function () {
      kl(h);
    });
  });
  $("#pop-follow .bt.color-facebook").on("click", function (h) {
    h.preventDefault();
    gV("facebook");
  });
  $("#pop-follow .bt.color-twitter").on("click", function (h) {
    h.preventDefault();
    gV("twitter");
  });
  $("#pop-follow .bt.color-instagram").on("click", function (h) {
    h.preventDefault();
    gV("instagram");
  });
  $("#pop-follow .bt.color-youtube").on("click", function (h) {
    h.preventDefault();
    gV("youtube");
  });
  $("#pop-follow .bt.color-spotify").on("click", function (h) {
    h.preventDefault();
    gV("spotify");
  });
  $("#pop-follow .bt.color-tumblr").on("click", function (h) {
    h.preventDefault();
    gV("tumblr");
  });
  $("#pop-follow .bt.color-tiktok").on("click", function (h) {
    h.preventDefault();
    gV("tiktok");
  });
  $("#pop-merch #shop-apparel svg").on("click", function (h) {
    h.preventDefault();
    gV("shop");
  });
  $("#pop-merch #shop-apparel .bt").on("click", function (h) {
    h.preventDefault();
    gV("shop");
  });
  $("#pop-merch #shop-album svg").on("click", function (h) {
    h.preventDefault();
    gV("merch");
  });
  $("#pop-merch #shop-album .bt").on("click", function (h) {
    h.preventDefault();
    gV("merch");
  });
  $("#pop-follow #bt-feedback").on(iF.down, function (h) {
    h.preventDefault();
    gF(kd);
  });
  $("#pop-follow #bt-rating").on("click", function (h) {
    h.preventDefault();
    var i = iG || iI ? il.storeRateURL : il.storeURL;
    gF(function () {
      gU(i);
    });
  });
  $("#pop-follow #bt-privacy").on("click", function (h) {
    h.preventDefault();
    gV("privacy");
  });
  $("#pop-follow #bt-faq").on("click", function (h) {
    h.preventDefault();
    gV("faq");
  });
  $("#pop-follow #bt-modders").on("click", function (h) {
    h.preventDefault();
    gV("mod");
  });
  $("#pop-credit .logo").on("click", function (h) {
    h.preventDefault();
    gU(im);
  });
}
function js(g, h) {
  if (hm(g)) {
    g.preventDefault();
  }
  if (ix) {
    jt(h);
  } else if (ic) {
    ju(h);
  } else {
    mt.open("To access this feature you have to download the Incredibox app. Let's go? &#128273;", "&#128274; Locked", [km("bt.sure"), km("bt.later")], [], true);
  }
}
function jt(g) {
  var i = iG ? "<div class='bt-store' id='bt-getapp'><div class='bck appstore'></div></div>" : "<div class='bt with-icn' id='bt-getapp'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-download'></use></svg><div class='txt'>Get the app</div></div><div class='hitzone'></div></div>";
  var j = iG ? "appstore" : "store";
  i = iK ? "<div class='bt-store' id='bt-getapp'><div class='bck playstore'></div></div>" : i;
  j = iK ? "playstore" : j;
  mv.open({
    name: "get-full-app",
    icntype: g === true ? "action-back" : "action",
    class: "big column",
    content: `
\t\t\t<div class='left'>
            <div class='img-box'></div>
         </div>
         <div class='right'>
            <div class='title'>` + km("txt.lockedContent") + `</div>
            <div class='text'>
            \t` + km("txt.wantAllFeature") + " " + km("txt.easyDownload") + "<br><br>\n            \t" + km("txt.catchyFeatures").replace("%{emoji}", "&#129321") + `
            </div>
            ` + i + "\n         </div>",
    onBoxOpenEnd: function () {
      if (g === true) {
        mv.$icon.on(iF.down, jK);
      } else {
        mv.$icon.on(iF.down, mv.close);
      }
      mv.$popup.find(".img-box").css({
        "background-image": "url(./img/popup-mobile.jpg)"
      }).addClass("fade");
      mv.$popup.find("#bt-getapp").on("click", function (k) {
        k.preventDefault();
        gV(j);
      });
    },
    onBoxCloseStart: function () {
      mv.$icon.off();
      mv.$popup.find("#bt-getapp").off();
    }
  });
}
function ju(g) {
  var j = g === true ? "action-back" : "action";
  var k = "App exclusivity";
  var l = "This feature is only available in the Incredibox App.<br>Choose your store below and access the full experience!";
  var m = "More info";
  var p = gZ("lang") != null && gZ("lang") != "en" ? gZ("lang") + "/" : "";
  var q = im + p + "app";
  if (iE && window.top.i18n != null) {
    k = window.top.i18n.app_exclusivity;
    l = window.top.i18n.feature_only_inapp + "<br>" + window.top.i18n.access_full_xp;
    m = window.top.i18n.bt_more_info;
  }
  mv.open({
    name: "get-full-app-browser",
    icntype: j,
    content: "\n\t\t\t<div class='title'>" + k + " &#128521;</div>\n\t\t\t<div class='text'>" + l + `</div>
\t\t\t<div class='box-bt-store'>
\t\t\t\t<a href="https://apps.apple.com/app/incredibox/id1093131935" target="_blank" class="bt-store"><div class="bck appstore"></div></a>
\t\t\t\t<a href="https://play.google.com/store/apps/details?id=com.sofarsogood.incredibox" target="_blank" class="bt-store"><div class="bck playstore"></div></a>
\t\t\t\t<a href="https://www.amazon.fr/So-Far-Good-Incredibox/dp/B07BKZCDHT/" target="_blank" class="bt-store"><div class="bck amazonstore"></div></a>
\t\t\t\t<a href="https://store.steampowered.com/app/1545450/Incredibox/" target="_blank" class="bt-store"><div class="bck steam"></div></a>
\t\t\t\t<a href="https://apps.apple.com/app/id1437906083" target="_blank" class="bt-store"><div class="bck macappstore"></div></a>
\t\t\t\t<a href="https://www.microsoft.com/fr-fr/p/incredibox/9pdjpp8scs9k?rtc=1&activetab=pivot:overviewtab" target="_blank" class="bt-store"><div class="bck windowsstore"></div></a>
\t\t\t\t<a href="https://www.incredibox.com/schools" target="_blank" class="bt-store"><div class="bck schools"></div></a>
\t\t\t</div>
\t\t\t<div id="bt-more-info" class="bt bt-light with-icn"><div class="bck"><div class="icn"><svg class="svg-box"><use xlink:href="#ic-navr"></use></svg></div><div class="txt">` + m + "</div></div><div class=\"hitzone\"></div></div>",
    onBoxOpenEnd: function () {
      if (g === true) {
        mv.$icon.on(iF.down, k3);
      } else {
        mv.$icon.on(iF.down, mv.close);
      }
      mv.$popup.find("#bt-more-info").on(iF.down, function (r) {
        r.preventDefault();
        gU(q, "_self");
      });
    },
    onBoxCloseStart: function () {
      mv.$icon.off();
      mv.$popup.find("#bt-more-info").off();
    }
  });
}
function jv(g) {
  var j;
  var k;
  var l = jS && jS.trad ? km("pop.generalErrorText") : "Sorry, the app encountered a technical problem.";
  var m = jS && jS.trad ? km("bt.ok") : "Ok";
  var p = (g && g.error ? g.error.split("[%]") : []).filter(v => v != null && v !== "");
  var q = p.length ? p.length == 1 ? "<br>[ " + p[0] + " ]" : "<br><br><pre>" + p.map(v => "• " + v + "<br>").join("") + "</pre>" : "";
  var u = g && g.action ? g.action : "";
  var l = g && g.txt ? g.txt + q : l + q;
  if (p.length > 1) {
    mt.$pop.addClass("fluid");
  }
  if (u == "kill") {
    mt.open(l, "&#128533;", [], [], true, true);
  } else if (u == "reload") {
    mt.open(l, "&#128533;", ["Reload"], [gT], true);
  } else {
    j = [];
    k = [];
    if (g && g.buttons) {
      g.buttons.forEach(function (v) {
        j.push(v.txt);
        k.push(v.func);
      });
    } else {
      j = [m];
      k = [];
    }
    mt.open(l, "&#128533;", j, k, true);
  }
}
var jw = false;
var jx = false;
function jy() {
  var h = "" + io + mP.folder + "image/crew.jpg";
  var h = ir && rx["image/crew.jpg"] ? rx["image/crew.jpg"].dataURL : h;
  var i = "img/nocrew.png";
  var j = jx ? i : h;
  mv.open({
    name: "popup-modcredit",
    icntype: "action",
    bodyclose: true,
    class: "rollover",
    content: `
      \t<div class='bck-box'>
      \t\t<div class='img-box'></div>
      \t\t` + (jw ? "" : "<div class='icn-box'><svg class='svg-box icn-gray spin'><use xlink:href='#ic-loader'></use></svg></div>") + `
      \t</div>
         <div class='info-box'>
      \t\t<div class='title'>` + mP.name + `</div>
            <div class='text'>
            \tAn Incredimod by <b class='crewname'>` + mP.credit.crewname + "</b><br>Released in " + mP.date + `<br><br><hr><br>
      \t\t\t<span class='modders-info'>
\t            \t` + (mP.credit.process ? "<b>Process</b>: " + mP.credit.process.join(", ") + "<br>" : "") + "\n\t            \t" + (mP.credit.music ? "<b>Music</b>: " + mP.credit.music.join(", ") + "<br>" : "") + "\n\t            \t" + (mP.credit.design ? "<b>Design</b>: " + mP.credit.design.join(", ") + "<br>" : "") + "\n\t            \t" + (mP.credit.animation ? "<b>Animation</b>: " + mP.credit.animation.join(", ") + "<br>" : "") + "\n\t            \t" + (mP.credit.bonus ? "<b>Bonus</b>: " + mP.credit.bonus.join(", ") + "<br>" : "") + "\n\t            \t" + (mP.credit.thanks ? "<b>Thanks</b>: " + mP.credit.thanks : "") + `<br>
      \t\t\t</span>
            </div>
      \t</div>
      `,
    onBoxOpenStart: function () {
      if (jw) {
        mv.$popup.find(".img-box").css({
          "background-image": "url(" + j + ")"
        }).addClass("directfade");
      }
    },
    onBoxOpenEnd: function () {
      var l;
      la("popup-modcredit");
      mv.$icon.on(iF.down, mv.close);
      mv.$popup.removeClass("rollover");
      mv.$popup.find(".bck-box").on(iF.down, function () {
        if (!mv.$popup.hasClass("rollover")) {
          mv.$popup.addClass("rollover");
        }
      });
      mv.$popup.find(".info-box").on(iF.down, function () {
        if (mv.$popup.hasClass("rollover")) {
          mv.$popup.removeClass("rollover");
        }
      });
      if (!jw) {
        (l = new Image()).src = j;
        l.onload = function () {
          jw = true;
          mv.$popup.find(".icn-box").remove();
          mv.$popup.find(".img-box").css({
            "background-image": "url(" + j + ")"
          }).addClass("fade");
        };
        l.onerror = function () {
          jx = true;
          j = i;
          l.onload();
        };
      }
    },
    onBoxCloseStart: function () {
      mv.$icon.off();
      mv.$popup.find(".bck-box").off();
      mv.$popup.find(".info-box").off();
    },
    onCloseComplete: function () {
      lb("popup-modcredit");
      lc();
    }
  });
}
function jz() {
  if (mt != null && mt.$div.attr("data-name") != "dialogStillHere") {
    mt.open(km("pop.stillHere"), "&#128564;", [km("bt.sure")], [function () {
      pm();
      mt.close();
    }], true, false, "dialogStillHere");
  }
}
function jA() {
  l8();
  mw.open({
    static: true,
    bckclose: true,
    name: "popup-info",
    class: "big",
    onBoxOpenEnd: function () {
      la("pop-credit");
    },
    onBoxCloseStart: function () {
      l8();
      kZ = [];
    },
    onCloseComplete: function () {
      la(mz ? "home" : "index-select");
    }
  });
}
function jB() {
  l8();
  mx.open({
    static: true,
    bckclose: true,
    name: "popup-param",
    class: "big",
    onBoxOpenEnd: function () {
      mx.$slide.active();
      la("pop-tuto");
    },
    onBoxCloseStart: function () {
      l8();
      kZ = [];
    },
    onBoxCloseEnd: function () {
      mx.$slide.desactive();
    },
    onCloseComplete: function () {
      la(mz ? "home" : "index-select");
    }
  });
}
function jC() {
  l8();
  my.open({
    static: true,
    bckclose: true,
    name: "popup-switch",
    onBoxOpenEnd: function () {
      la("popup-switch");
    },
    onBoxCloseStart: function () {
      l8();
      kZ = [];
    },
    onCloseComplete: function () {
      la("home");
    }
  });
}
function jD() {
  var h = km(nC ? "pop.dragDropText" : "txt.tuto1");
  mv.open({
    name: "drag-and-drop",
    class: "mini",
    bodyclose: true,
    content: "<div class='title'>" + km("pop.dragDropTitle") + "</div><div class='text'>" + h + "</div>",
    onBoxOpenStart: function () {
      mv.$popup.find(".pop").append("<div id='pointe-box' class='bottom'><div id='pointe'></div></div>");
    },
    onBoxCloseEnd: function () {
      mv.$popup.find("#pointe-box").remove();
      if (!nC) {
        lE.setItem("popupDragViewed", "viewed");
      }
    }
  });
}
function jE() {
  mv.open({
    name: "too-short",
    icntype: "info",
    class: "mini",
    bodyclose: true,
    content: "\n\t\t\t<div class='title'>" + km("pop.toShortTitle") + "</div>\n\t\t\t<div class='text'>" + km("pop.toShortText").split("%{minimum_time}").join(mP.recmintime) + "</div>"
  });
}
function jF() {
  mv.open({
    name: "bonus-playing",
    icntype: "info",
    class: "mini",
    bodyclose: true,
    content: "\n\t\t\t<div class='title'>" + km("pop.bonusPlayingTitle") + "</div>\n\t\t\t<div class='text'>" + km("pop.bonusPlayingText") + "</div>"
  });
}
function jG() {
  mv.open({
    name: "find-previous-bonus",
    icntype: "info",
    class: "mini",
    bodyclose: true,
    content: "\n\t\t\t<div class='title'>" + km("pop.bonusFindPreviousTitle") + "</div>\n\t\t\t<div class='text'>" + km("pop.bonusFindPreviousText") + "</div>"
  });
}
function jH(g) {
  var h;
  if ((!nD && !nB || g) && (h = "v" + (ir ? gZ("v") : mP.version) + "-popup-bonus-unlock", hl(lE.getItem(h)) || g)) {
    mv.open({
      name: "bonus-unlocked",
      class: "mini",
      bodyclose: true,
      content: "\n\t\t\t\t\t<div class='title'>" + km("pop.bonusUnlockTitle") + "</div>\n\t\t\t\t\t<div class='text'>" + km("pop.bonusUnlockText") + "</div>\n\t\t\t\t",
      onBoxOpenStart: function () {
        mv.$popup.find(".pop").append("<div id='pointe-box' class='top'><div id='pointe'></div></div>");
        jJ(1);
      },
      onBoxCloseEnd: function () {
        lE.setItem(h, "ok");
        mv.$popup.find("#pointe-box").remove();
      }
    });
  }
}
function jI(g) {
  var i;
  if ((!nD && !nB || g) && (i = "v" + (ir ? gZ("v") : mP.version) + "-popup-bonus-next", hl(lE.getItem(i)) || g)) {
    if (nM) {
      nS();
    }
    mv.open({
      name: "find-next-bonus",
      class: "mini",
      bodyclose: true,
      content: "\n\t\t\t\t\t<div class='title'>" + km("pop.bonusFindNextTitle") + "</div>\n\t\t\t\t\t<div class='text'>" + km("pop.bonusFindNextText") + "</div>\n\t\t\t\t",
      onBoxOpenStart: function () {
        mv.$popup.find(".pop").append("<div id='pointe-box'><div id='pointe'></div></div>");
      },
      onBoxCloseEnd: function () {
        lE.setItem(i, "ok");
        mv.$popup.find("#pointe-box").remove();
      }
    });
  }
}
function jJ(g) {
  var i = document.querySelector("#pop-popup .pop").getBoundingClientRect();
  var g = document.querySelector("#bt-bonus-" + g).getBoundingClientRect();
  var g = g.left - i.left + g.width / 2;
  g = (g = g < 30 ? 30 : g) > i.width - 30 ? i.width - 30 : g;
  document.getElementById("pointe").style.left = g + "px";
}
function jK() {
  jL = h1();
  l8();
  var h = "";
  var h = ix ? "\n\t\t\t<div class='bt bt-haut replay'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-eye'></use></svg></div><div class='txt'>" + km("bt.replay") + "</div><div class='hitzone'></div></div>\n\t\t\t<div class='bt bt-haut share'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-share'></use></svg></div><div class='txt'>" + km("bt.share") + "</div><div class='hitzone'></div></div>\n\t\t\t<div class='bt bt-haut download'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-download'></use></svg></div><div class='txt'>Get MP3</div><div class='hitzone'></div></div>" : ir ? "\n\t\t\t<div class='bt bt-haut retry'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-reset'></use></svg></div><div class='txt'>" + km("bt.retry") + "</div><div class='hitzone'></div></div>\n\t\t\t<div class='bt bt-haut replay'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-eye'></use></svg></div><div class='txt'>" + km("bt.replay") + "</div><div class='hitzone'></div></div>" : "\n\t\t\t<div class='bt bt-haut retry'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-reset'></use></svg></div><div class='txt'>" + km("bt.retry") + "</div><div class='hitzone'></div></div>\n\t\t\t<div class='bt bt-haut replay'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-eye'></use></svg></div><div class='txt'>" + km("bt.replay") + "</div><div class='hitzone'></div></div>\n\t\t\t<div class='bt bt-haut save'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-edit'></use></svg></div><div class='txt'>" + km("bt.save") + "</div><div class='hitzone'></div></div>";
  mv.open({
    name: "record-complete",
    icntype: "action",
    content: "\n\t\t\t<div class='title'>" + km("pop.recOkTitle") + `</div>
\t\t\t<div class='content'>
\t\t\t\t<div class='box-bt-haut'>
\t\t\t\t\t` + h + `
\t\t\t\t</div>\t
\t\t\t</div>`,
    onBoxOpenEnd: function () {
      mv.$icon.on(iF.down, mv.close);
      mv.$popup.find(".bt.replay").on(iF.down, function (j) {
        j.preventDefault();
        gF(jO);
      });
      mv.$popup.find(".bt.share").on(iF.down, function (j) {
        j.preventDefault();
        gF(function () {
          jt(true);
        });
      });
      mv.$popup.find(".bt.download").on(iF.down, function (j) {
        j.preventDefault();
        gF(function () {
          jt(true);
        });
      });
      mv.$popup.find(".bt.retry").on(iF.down, function (j) {
        j.preventDefault();
        gF(jN);
      });
      mv.$popup.find(".bt.save").on(iF.down, function (j) {
        j.preventDefault();
        gF(jP);
      });
      la("popup-record-complete");
      pO();
    },
    onBoxCloseStart: function () {
      l8();
      mv.$icon.off();
      mv.$popup.find(".bt").off();
    },
    onBoxCloseEnd: function () {
      mv.$icon.off();
      mv.$popup.find(".bt").off();
    },
    onCloseComplete: function () {
      lb("popup-record-complete");
      if (!nD) {
        la("toolbar");
      }
    }
  });
}
var jL = 0;
function jM() {
  return h1() - jL > 600;
}
function jN() {
  if (jM()) {
    mv.close();
    sB("next", "retry-mix", function () {
      TweenMax.delayedCall(0.2, s2);
    });
  }
}
function jO() {
  if (jM()) {
    mv.close();
    s8();
    s9();
    sF("mix", "replay");
  }
}
function jP() {
  jQ();
}
function jQ() {
  mv.open({
    name: "save-form",
    icntype: "action-back",
    content: function () {
      var h = "\n\t\t\t<div class='title'>" + km("pop.formTitle") + `</div>
\t\t\t<div class='content'>
\t\t\t\t<form action='javascript:void(0)' method='post' target='_self' autocomplete='off'>
\t\t\t\t\t<div class='formzone'>
\t\t\t\t\t\t<div class='formline ic-name'><div class='icn-box'><svg class='svg-box'><use xlink:href='#ic-user-mini'></use></svg></div><input type='text' id='input-name' placeholder='` + km("txt.inputName") + "' value='" + it.djname + "' maxlength='26' autocorrect='off' spellcheck='false'/></div>\n\t\t\t\t\t\t<div class='formline ic-title'><div class='icn-box'><svg class='svg-box'><use xlink:href='#ic-note-mini'></use></svg></div><input type='text' id='input-title' placeholder='" + km("txt.inputTitle") + "' value='' maxlength='26' autocorrect='off' spellcheck='false'/></div>\n\t\t\t\t\t\t<div class='formline ic-dedi'><div class='icn-box'><svg class='svg-box'><use xlink:href='#ic-like-mini'></use></svg></div><input type='text' id='input-dedi' placeholder='" + km("txt.dedicatedTo").split("%{name}").join("...") + "' value='' maxlength='26' autocorrect='off' spellcheck='false'/></div>";
      if (!ic) {
        h += `<div class='formline ic-private'>
\t\t\t\t\t\t\t<div class='icn-box'><svg class='svg-box'><use xlink:href='#ic-view-mini'></use></svg></div>
\t\t\t\t\t\t\t<div class='bt-onofftext active'>
\t\t\t\t\t\t\t\t<div class='slider'></div>
\t\t\t\t\t\t\t\t<div class='txtbox'>
\t\t\t\t\t\t\t\t\t<div class='label'>` + km("bt.private") + "</div>\n\t\t\t\t\t\t\t\t\t<div class='label'>" + km("bt.public") + `</div>
\t\t\t\t\t\t\t\t</div>
\t\t\t\t\t\t\t</div>
\t\t\t\t\t\t</div>`;
      }
      h += `</div>
\t\t\t\t\t<div class='btzone'>
\t\t\t\t\t\t<div class='bt bt-round bt-big valid'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-check'></use></svg></div><div class='hitzone'></div></div>
\t\t\t\t\t</div>
\t\t\t\t\t<input type='submit' style='visibility:hidden;position:absolute'/><div class='clear'></div>
\t\t\t\t</form>
\t\t\t</div>`;
      if (ic && !ic) {
        h += "<div style='margin-top: 25px; color:#777; font-size:14px; line-height:20px;'>" + km("pop.dontUseName") + " &#128521;</div>";
      }
      return h;
    },
    onBoxOpenEnd: function () {
      var h;
      var i;
      la("popup-save-form");
      mv.$icon.on(iF.down, jK);
      mv.$popup.find("form").on("submit", function (j) {
        j.preventDefault();
        gF(jW);
      });
      mv.$popup.find(".bt.valid").on(iF.down, function (j) {
        j.preventDefault();
        gF(jW);
      });
      if (window.cordova && !iH) {
        mv.$popup.find(".formline:not(.ic-private)").on(iF.down, function (j) {
          mv.$popup.find(".formline").off(iF.down);
          kT.add($(this).find(".icn-box"));
        });
        mv.$popup.find(".formline input").on("focus", function () {
          mv.$popup.find(".formline input").off("focus");
          kT.reset();
        });
      }
      if (!(ic || li())) {
        h = mv.$popup.find(".formline.ic-private .bt-onofftext");
        i = mv.$popup.find(".formline.ic-private svg use");
        h.on(iF.down, function (j) {
          j.preventDefault();
          if (h.hasClass("active")) {
            h.removeClass("active");
            i.attr("xlink:href", "#ic-lock-mini");
          } else {
            h.addClass("active");
            i.attr("xlink:href", "#ic-view-mini");
          }
        });
      }
    },
    onBoxCloseStart: function () {
      lb("popup-save-form");
      l8();
      mv.$icon.off();
      mv.$popup.find(".bt").off();
      mv.$popup.find(".bt-onofftext").off();
      mv.$popup.find("form").off();
      mv.$popup.find(".formline").off();
      mv.$popup.find(".formline input").off();
      mv.$popup.find("input").off();
      if (window.cordova) {
        le();
      }
    }
  });
}
var jR;
var jS;
var jT;
var jU;
var jV = false;
function jW() {
  jX();
}
function jX() {
  var h;
  var j;
  var k;
  var m;
  var q;
  var v;
  var w;
  var x;
  var y;
  var z;
  var A;
  var B;
  function C() {
    TweenMax.delayedCall(1, function () {
      kT.reset();
      k3();
    });
  }
  if (!(mv.$popup.find(".formzone .formline input").hasClass("focused") || jV)) {
    jV = true;
    pN();
    h = ic || li() || !mv.$popup.find(".formzone .bt-onofftext").hasClass("active");
    j = mv.$popup.find(".formzone #input-name");
    k = mv.$popup.find(".formzone #input-title");
    m = mv.$popup.find(".formzone #input-dedi");
    q = j.val().substr(0, 26);
    v = k.val().substr(0, 26);
    w = m.val().substr(0, 26);
    q = he(q);
    v = he(v);
    w = he(w);
    x = {};
    y = gJ.classic;
    B = q.replace(/ /g, "");
    z = v.replace(/ /g, "");
    A = w.replace(/ /g, "");
    if (y.test(B) || B === "" || B.length < 2) {
      jY(j);
    } else if (y.test(z) || z === "" || z.length < 2) {
      jY(k);
    } else if (y.test(A) || A.length > 0 && A.length < 2) {
      jY(m);
    } else {
      l8();
      mv.$popup.find(".formzone input").blur();
      x.id = hk();
      x.mymix = true;
      x.online = false;
      x.name = hg(q);
      x.title = hg(v);
      x.apptitle = mP.name;
      x.dedi = hg(w);
      x.version = mP.version;
      x.datedb = h5();
      x.private = h ? 1 : 0;
      x.nbview = 0;
      x.nblike = 0;
      x.xml = hc(nu.getXML());
      B = mv.$popup.find(".bt.valid");
      kT.add(B);
      nu.setData(x);
      mT.saveMix(x);
      qM = x;
      jg({
        djname: hg(q)
      });
      delete qr.mymix;
      if (iu) {
        sB("next", "save-mix");
        if (ic) {
          k7(x, C, function () {
            mt.open(km("pop.noCoServerText"), km("pop.noCoServerTitle"), [km("bt.ok")]);
            kT.reset();
            jV = false;
            pO();
          });
        } else {
          k7(x, C);
        }
      } else if (ic) {
        kT.reset();
        jV = false;
        pO();
        mt.open(km("pop.noNetworkText"), km("pop.noNetworkTitle"), [km("bt.ok")], []);
      } else {
        C();
      }
    }
  }
}
function jY(g) {
  g.addClass("invalid").one(ie, function (h) {
    $(h.target).removeClass("invalid");
  });
  jV = false;
  pO();
}
function jZ(g) {
  if (window.cordova && iK && mv.isOpen() && mv.$popup.attr("data-name") == "save-form") {
    g = g.keyboardHeight || document.body.clientHeight * 0.7;
    (jR = new k1()).init(g);
  }
}
function k0() {
  if (window.cordova && iK && mv.isOpen() && mv.$popup.attr("data-name") == "save-form" && jR) {
    jR.kill();
    jR = null;
  }
}
function k1() {
  var g;
  var h;
  var j;
  function k(m) {
    l(m.target);
  }
  function l(m) {
    var m = m.getBoundingClientRect();
    var p = m.top;
    var m = m.height;
    var p = Math.round(h - (p + m / 2));
    TweenMax.to(mv.$popup, 0.3, {
      scrollTo: {
        y: "-=" + p
      },
      ease: Quad.easeInOut,
      overwrite: true
    });
  }
  this.init = function (m) {
    g = m;
    h = (document.body.clientHeight - g) / 2;
    (j = document.querySelectorAll("#pop-popup[data-name=save-form] input[type=text]")).forEach(function (p) {
      p.addEventListener("focus", k);
      if (document.activeElement == p) {
        l(p);
      }
    });
    mv.$popup.addClass("VKBopen");
    mv.$popup.find(".bac").css({
      height: "calc(100% + " + g + "px)"
    });
    window.cordova;
  };
  this.kill = function () {
    j.forEach(function (m) {
      m.removeEventListener("focus", k);
    });
    TweenMax.to(mv.$popup, 0, {
      scrollTo: {
        y: 0
      },
      overwrite: true
    });
    mv.$popup.removeClass("VKBopen");
    mv.$popup.find(".bac").css({
      height: "100%"
    });
    window.cordova;
  };
}
function k2() {
  var h = "action";
  var i = iy && mV ? qL : qM;
  if (!(lN.hasClass("show") || iy)) {
    h = "action-back";
  }
  mv.open({
    name: "convert-mix",
    icntype: h,
    content: "\n\t\t\t<div class='title'>" + km("pop.convertMixTitle") + "</div>\n\t\t\t<div class='text'>" + km("pop.convertMixText") + `</div>
\t\t\t<div class='content'>
\t\t\t\t<div id='convert-loader-box' class='progress-box'><div class='progress-bar'></div></div>
\t\t\t\t<a class='bt with-icn color download' id='bt-save-file'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-download'></use></svg><div class='txt'>` + km("bt.saveFile") + `</div></div><div class='hitzone'></div></a>
\t\t\t\t<div class='spinner-box spin'><svg class='svg-box col-version'><use xlink:href='#ic-loader'></use></svg></div>
\t\t\t</div>`,
    onBoxOpenEnd: function () {
      la("popup-convert-mix");
      mv.$icon.on(iF.down, function () {
        if (h == "action") {
          mv.close();
        } else {
          k3();
        }
      });
      if (hm(i) && j6()) {
        sw(i, mv.$popup);
      } else {
        jv({
          error: "converter mix"
        });
      }
    },
    onBoxCloseStart: function () {
      lb("popup-convert-mix");
      lb("popup-convert-mix-ready");
      la("playlist-line-open");
      mv.$icon.off();
      sv();
    }
  });
}
function k3() {
  jV = false;
  mv.open({
    name: "mix-saved",
    icntype: "action",
    content: function () {
      var h = ic ? km("pop.shareMixSaved") : km("pop.shareMixSavedPlaylist") + "<br>" + km("pop.shareShareTop50");
      var h = qM.private == 1 ? h.split("<br>")[0] : h;
      var i = "";
      if (!iy) {
        i = (i += "<div class='bt bt-haut link'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-link'></use></svg></div><div class='txt'>" + km("bt.link") + "</div><div class='hitzone'></div></div>") + ("<div class='bt bt-haut share color-blue'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-share'></use></svg></div><div class='txt'>" + km("bt.share") + "</div><div class='hitzone'></div></div>");
      }
      if (j6()) {
        i += "<div class='bt bt-haut download hoverLocked'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-download'></use></svg></div><div class='txt'>" + km("bt.exportFile") + "</div><div class='ic-locked'><svg class='svg-box'><use xlink:href='#ic-lock'></use></svg></div><div class='hitzone'></div></div>";
      }
      i += "<div class='bt bt-haut mixlist color hoverLocked'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-mixlist'></use></svg></div><div class='txt'>" + km("bt.myMix") + "</div><div class='ic-locked'><svg class='svg-box'><use xlink:href='#ic-lock'></use></svg></div><div class='hitzone'></div></div>";
      return "\n\t\t\t\t<div class='title'>" + km("pop.shareTitle") + "</div>\n\t\t\t\t<div class='text'>" + h + `</div>
\t\t\t\t<div class='content'>
\t\t\t\t\t<div class='box-bt-haut'>` + i + "</div>\n\t\t\t\t</div>";
    },
    onBoxOpenEnd: function () {
      la("popup-mix-saved");
      mv.$icon.on(iF.down, mv.close);
      if (mv.$popup.find(".bt.link").length) {
        mv.$popup.find(".bt.link").on(iF.down, function (i) {
          var j = $(this);
          gF(function () {
            k9(j);
          });
        });
      }
      if (mv.$popup.find(".bt.mixlist").length) {
        if (ic && !iy) {
          mv.$popup.find(".bt.mixlist").on(iF.down, function (i) {
            js(i, true);
          });
        } else if (ic && iy) {
          mv.$popup.find(".bt.mixlist").on(iF.down, function (i) {
            gI("clickBtMixlist");
          });
        } else {
          mv.$popup.find(".bt.mixlist").on(iF.down, function (i) {
            gF(ka);
          });
        }
      }
      if (mv.$popup.find(".bt.download").length) {
        if (ic && !iy) {
          mv.$popup.find(".bt.download").on(iF.down, function (i) {
            js(i, true);
          });
        } else if (ic && iy) {
          mv.$popup.find(".bt.download").on(iF.down, function () {
            gI("exportMP3");
          });
        } else {
          mv.$popup.find(".bt.download").on(iF.down, function () {
            gF(k2);
          });
        }
      }
      mv.$popup.find(".bt.share").on(iF.down, function (i) {
        var j = $(this);
        gF(function () {
          k8(j);
        });
      });
      pO();
    },
    onBoxCloseStart: function () {
      l8();
      mv.$icon.off();
      mv.$popup.find(".bt").off();
    },
    onCloseComplete: function () {
      if (n3) {
        la("toolbar");
      }
      qM = {};
    }
  });
}
function k4() {
  var h = lN.isOpen() ? "action" : "action-back";
  mv.open({
    name: "global-share",
    icntype: h,
    class: mV ? "mini" : "",
    content: "\n\t\t\t<div class='title'>" + km("bt.share") + `</div>
\t\t\t<div class='content'>
\t\t\t\t<div class='box-bt-haut'>
\t\t\t\t\t<div class='bt bt-haut mail'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-mail'></use></svg></div><div class='txt'>Mail</div><div class='hitzone'></div></div>
\t\t\t\t\t<div class='bt bt-haut color-facebook'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-facebook'></use></svg></div><div class='txt'>Facebook</div><div class='hitzone'></div></div>
\t\t\t\t\t<div class='bt bt-haut color-twitter color'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-twitter'></use></svg></div><div class='txt'>Twitter</div><div class='hitzone'></div></div>
\t\t\t\t\t<div class='bt bt-haut link color'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-link'></use></svg></div><div class='txt'>` + km("bt.link") + `</div><div class='hitzone'></div></div>
\t\t\t\t</div>
\t\t\t</div>`,
    onBoxOpenEnd: function () {
      la("popup-global-share");
      mv.$popup.find(".bt.mail").on("click", function (i) {
        i.preventDefault();
        gF(function () {
          kc("mail");
        });
      });
      mv.$popup.find(".bt.color-facebook").on("click", function (i) {
        i.preventDefault();
        gF(function () {
          kc("facebook");
        });
      });
      mv.$popup.find(".bt.color-twitter").on("click", function (i) {
        i.preventDefault();
        gF(function () {
          kc("twitter");
        });
      });
      mv.$popup.find(".bt.link").on("click", function (i) {
        i.preventDefault();
        gF(function () {
          kc("clipboard");
        });
      });
      if (h == "action") {
        mv.$icon.on(iF.down, mv.close);
      } else {
        mv.$icon.on(iF.down, k3);
      }
      pO();
    },
    onBoxCloseStart: function () {
      lb("popup-global-share");
      l8();
      mv.$icon.off();
      mv.$popup.find(".bt").off();
    },
    onBoxCloseEnd: function () {
      lc();
      kT.reset();
    }
  });
}
function k5() {
  mv.open({
    name: "email-form",
    icntype: "action-back",
    class: mV ? "mini" : "",
    content: "\n\t\t\t<div class='title'>" + km("pop.formEmailTitle") + `</div>
\t\t\t<div class='content'>
\t\t\t\t<form action='javascript:void(0)' method='post' target='_self' autocomplete='off'>
\t\t\t\t\t<div class='formzone'>
\t\t\t\t \t\t<div class="formline ic-name"><div class="icn-box"><svg class="svg-box"><use xlink:href="#ic-user-mini"></use></svg></div><input type="text" id="input-name" placeholder="` + km("txt.inputEmailSender") + "\" value=\"" + (hm(it.djname) ? it.djname : "") + "\" maxlength=\"26\" autocorrect=\"off\" spellcheck=\"false\"/></div>\n\t\t\t\t\t\t<div class='formline ic-email'><div class='icn-box'><svg class='svg-box'><use xlink:href='#ic-at-mini'></use></svg></div><input type='email' id='input-email' placeholder='" + km("txt.inputEmailRecipient") + `' value='' maxlength='254' autocorrect='off' spellcheck='false'/></div>
\t\t\t\t\t</div>
\t\t\t\t\t<div class='btzone'>
\t\t\t\t\t\t<div class='bt bt-round bt-big valid'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-check'></use></svg></div><div class='hitzone'></div></div>
\t\t\t\t\t</div>
\t\t\t\t\t<input type='submit' style='visibility:hidden;position:absolute'/><div class='clear'></div>
\t\t\t\t</form>
\t\t\t</div>`,
    onBoxOpenEnd: function () {
      la("popup-email-form");
      mv.$icon.on(iF.down, k4);
      mv.$popup.find("form").on("submit", function (h) {
        h.preventDefault();
        gF(k6);
      });
      mv.$popup.find(".bt.valid").on(iF.down, function (h) {
        h.preventDefault();
        gF(k6);
      });
    },
    onBoxCloseStart: function () {
      lb("popup-email-form");
      l8();
      mv.$icon.off();
      mv.$popup.find("form").off();
      mv.$popup.find(".bt.valid").off();
      le();
    },
    onBoxCloseEnd: function () {
      jV = false;
    }
  });
}
function k6() {
  var h;
  var j;
  var k;
  var m;
  var p;
  var q;
  var u;
  var v;
  var w;
  var x;
  if (!(mv.$popup.find(".formzone .formline input").hasClass("focused") || (h = im + "mix/" + qM.id, j = qM.title, k = qM.name, jV))) {
    jV = true;
    pN();
    m = mv.$popup.find(".formzone #input-name");
    p = mv.$popup.find(".formzone #input-email");
    q = m.val().substr(0, 26);
    u = p.val().substr(0, 254);
    q = he(q, m);
    u = hc(u);
    x = q.split(" ").join("");
    v = u.toLowerCase();
    if (x == "" || gJ.classic.test(x)) {
      jY(m);
    } else if (v != "" && gJ.email.test(v)) {
      mv.$popup.find(".formzone input").blur();
      le();
      w = mv.$popup.find(".bt.valid");
      kT.add(w);
      if (iu) {
        (x = {}).expediteur = q;
        x.email = u;
        x.type = "composition";
        x.djName = k;
        x.title = j;
        x.url = h;
        x.src = window.electron ? "electron" : window.cordova ? "cordova" : "browser";
        x.lang = jU.split("-")[0];
        $.ajax({
          type: "POST",
          url: im + "ph4/send-mail.php",
          data: x,
          dataType: "json",
          crossdomain: true,
          success: function (y) {
            if (y.state == "success") {
              kT.reset();
              w.addClass("success");
              TweenMax.delayedCall(0.6, function () {
                pO();
                k4();
              });
            } else {
              mt.open(km("pop.shareErrorText"), km("pop.shareErrorTitle"), [km("bt.ok")], []);
              kT.reset();
              jV = false;
              pO();
            }
          },
          error: function (y) {
            jV = false;
            mt.open(km("pop.shareErrorText"), km("pop.shareErrorTitle"), [km("bt.ok")], []);
            kT.reset();
            pO();
          }
        });
      } else {
        jV = false;
        mt.open(km("pop.noNetworkText"), km("pop.noNetworkTitle"), [km("bt.ok")], []);
        kT.reset();
        pO();
      }
    } else {
      jY(p);
    }
  }
}
function k7(g, h, j) {
  var l = j || h;
  var j = j1();
  j.mix = g;
  $.ajax({
    type: "POST",
    url: im + "ph4/save-mix-db.php",
    data: j,
    dataType: "json",
    crossdomain: true,
    success: function (m) {
      var p;
      var q;
      if (m.state == "success") {
        delete qr.latest;
        q = g.id;
        p = false;
        mT.deleteMix("mix-" + q);
        p = mT.deleteMix("fav-" + q);
        (q = m.mix).id = parseInt(q.id);
        q.online = true;
        mT.saveMix(q);
        if (p) {
          mT.saveMix(q, true);
        }
        qM = q;
        if (h) {
          h();
        }
      } else {
        if (l) {
          l();
        }
        sF("mix", "save_db_failed");
      }
    },
    error: function (m) {
      if (l) {
        l();
      }
    }
  });
}
function k8(g) {
  kb("global", g || $(this));
}
function k9(g) {
  kb("clipboard", g || $(this));
}
function ka() {
  nn(function () {
    qQ("mixlist", true, true);
  });
}
function kb(g, h) {
  pN();
  l8();
  kT.add(h);
  if (iu) {
    if (qM.mymix !== true || qM.online) {
      kc(g);
    } else {
      k7(qM, function () {
        lN.$scrollbox.find(".line[data-key='mix-" + qM.id + "']").removeClass("isoffline");
        kc(g);
      }, function (j) {
        mt.open(km("pop.noCoServerText"), km("pop.noCoServerTitle"), [km("bt.ok")], []);
        kT.reset();
        pO();
      });
    }
  } else {
    h = lN.hasClass("show") ? km("pop.noCoShareText") : km("pop.noCoShareText") + " " + km("pop.noCoShareText2");
    mt.open(h, km("pop.noNetworkTitle"), [km("bt.ok")], []);
    kT.reset();
    pO();
  }
}
function kc(g, h) {
  if (h == null && window.cordova && window.plugins && window.plugins.socialsharing) {
    TweenMax.delayedCall(0.5, kc, [g, true]);
    return false;
  }
  if (g != "global") {
    kT.reset();
  }
  var k;
  var h = qM.name;
  var q = qM.title;
  var v = im + "mix/" + qM.id;
  var w = iP ? "" + io + ip + "image/share.jpg" : im + "img/share/share-v" + mP.version + "-en@2x.png";
  var x = iP ? w : im + "img/share/share-v" + mP.version + "-en.png";
  var y = km("pop.shareSubject");
  var h = km("pop.sharePresentMix").split("%{name}").join(h).split("%{title}").join(q);
  var q = km("pop.shareTextLike");
  var z = km("pop.shareTextBeCool");
  var A = h + "\n" + v + `

` + q + `

---------------------------

Download the app: https://www.incredibox.com/info/store`;
  var q = z + " #incredibox";
  var B = h + " " + z + " #incredibox";
  var C = "https://www.facebook.com/sharer/sharer.php?u=" + encodeURIComponent(v);
  var D = "https://twitter.com/intent/tweet?text=" + encodeURIComponent(q) + "&url=" + encodeURIComponent(v) + "&hashtags=musicApp,beatbox,pumpItUp&related=incredibox_%3AThe%20Incredibox%20official%20Twitter%20account!";
  switch (g) {
    case "mail":
      if (window.cordova && window.plugins && window.plugins.socialsharing) {
        window.plugins.socialsharing.shareViaEmail(A, y, null, null, null, [x], E, F);
      } else {
        k5();
      }
      break;
    case "facebook":
      if (window.electron) {
        gU(C);
      } else {
        gW(C, 560, 350, true);
      }
      break;
    case "twitter":
      if (window.electron) {
        gU(D);
      } else {
        gW(D, 560, 350, true);
      }
      break;
    case "clipboard":
      if (!iH && window.cordova && cordova.plugins && cordova.plugins.clipboard) {
        cordova.plugins.clipboard.copy(v, function () {
          mt.open(km("pop.shareClipboard"), km("pop.infoTitle"), [km("bt.ok")], [], false, false, "dialog-clipboard");
          E();
          pO();
        }, F);
      } else {
        k = "<div class='formline'><div class='selectarea'>" + v.replace("https://www.", "") + "</div></div>";
        mt.open(k, km("bt.link"), [km("bt.ok")], [], false, false, "dialog-clipboard");
        mt.$pop.addClass("fluid");
        E();
        pO();
      }
      break;
    case "global":
      if (window.plugins && window.plugins.socialsharing) {
        window.plugins.socialsharing.shareWithOptions({
          message: B,
          subject: y,
          url: v,
          files: [w]
        }, G => {}, G => {
          F(G);
        });
        E();
      } else {
        k4();
        kT.reset();
      }
      break;
    case "download":
      gU(im + "file/" + qM.id);
      E();
  }
  function E(G) {
    kT.reset();
    pO();
  }
  function F(G) {
    jv({
      txt: km("pop.shareErrorText"),
      error: G
    });
    kT.reset();
    pO();
  }
}
function kd() {
  var h = "feedback@incredibox.com";
  var i = "App feedback";
  var j = "<br><br>----------";
  if (window.cordova) {
    i += " - " + (jj[device.model] || device.model) + " " + device.platform + " " + device.version + (iH ? " (iOS on Mac)" : "");
  } else {
    i += " - " + is.deviceModel + " " + is.osName + " " + is.osVersion;
  }
  j = (j = (j = (j = (j = (j = (j = (j = (j = (j = (j = (j += "<br>Store : " + il.store) + "<br>From : " + hg(il.platform) + " - " + (mP !== undefined ? mP.name + " - v" + mP.version : "index")) + "<br>Version : " + il.version) + "<br>DJ Name : " + it.djname) + "<br>Ids : " + is.uuid + " - " + it.guid + (iD ? " - " + device.serial : "")) + "<br>Lang : " + it.lang + " (" + jU + ")") + "<br>Device : " + is.deviceModel + " - " + document.body.clientWidth + "x" + document.body.clientHeight + " - " + (window.devicePixelRatio || 1)) + "<br>System : " + is.osName + " - " + is.osVersion + (iH ? " - iOS on Mac" : "")) + "<br>WV : " + is.browserFullVersion) + "<br>Anime size " + iR + " - cnv density " + iS + "<br>fileExt : " + iv + " " + iw) + "<br>Evt : " + iF.down) + "<br>SpRate : " + (window.audioCtx && window.audioCtx.sampleRate ? pp.sampleRate : "") + " - " + (window.audioCtx && window.audioCtx.baseLatency ? pp.baseLatency : "");
  if (window.cordova && window.plugins && window.plugins.socialsharing) {
    j = (j = (j += "<br>----------") + "<br>App.device : " + (jj[device.model] || device.model) + " - " + device.manufacturer) + "<br>App.system : " + device.platform + " - " + device.version;
    window.plugins.socialsharing.shareViaEmail("<br><br><br><i>" + j + "</i>", i, h, null, null, [], () => {}, k => {
      jv({
        txt: km("pop.shareErrorText"),
        errors: [k]
      });
    });
  } else {
    j = j.replace(/<br>/g, "\r\n");
    h = "mailto:" + h + "?subject=" + i + "&body=" + encodeURIComponent(j);
    if (window.electron) {
      electron.ipc.openURL(h);
    } else {
      window.location.href = h;
    }
  }
}
var ke = {
  "en-US": "English",
  fr: "Français",
  es: "Español",
  "pt-BR": "Português",
  it: "Italiano",
  de: "Deutsch",
  no: "Norsk",
  pl: "Polski",
  uk: "Українська",
  ru: "Русский",
  ar: "العربية",
  tr: "Türkçe",
  ko: "한국어",
  ja: "日本語",
  "zh-CN": "简体中文",
  "zh-TW": "繁體中文",
  "hi-IN": "हिंदी",
  th: "ไทย",
  vi: "Tiếng Việt",
  id: "Indonesia"
};
function kf() {
  jU = jT = iq ? "zh-CN" : "en-US";
  var h;
  var i = "";
  for (h in ke) {
    i += "<div class=\"bt bt-soft\" id=\"bt-lang-" + h + "\"><div class=\"bck\"><div class=\"txt\">" + ke[h] + "</div></div><div class=\"hitzone\"></div></div>";
  }
  $("#pop-language .box-lang").append(i);
}
function kg(g) {
  var i = g.toLowerCase();
  if (i.indexOf("en-") > -1) {
    return "en-US";
  } else if (i.indexOf("pt-") > -1) {
    return "pt-BR";
  } else if (i.indexOf("fr-") > -1) {
    return "fr";
  } else if (i.indexOf("es-") > -1) {
    return "es";
  } else if (i.indexOf("it-") > -1) {
    return "it";
  } else if (i.indexOf("de-") > -1) {
    return "de";
  } else if (i.indexOf("cn") > -1) {
    return "zh-CN";
  } else if (i == "zh-hant" || i == "zh-hk" || i == "zh-tw") {
    return "zh-TW";
  } else if (i == "zh-hans" || i == "zh-cn") {
    return "zh-CN";
  } else if (i == "en") {
    return "en-US";
  } else if (i == "pt") {
    return "pt-BR";
  } else if (i == "zh") {
    return "zh-CN";
  } else if (i == "hi") {
    return "hi-IN";
  } else if (i == "nb" || i == "nn") {
    return "no";
  } else {
    return g;
  }
}
function kh() {}
function ki() {
  var h = jS.trad;
  $("#pop-param .tab#tab-tuto .txt").html(h.bt.tuto);
  $("#pop-param #bloc-tuto1 .txt span").html(h.txt.tuto1);
  $("#pop-param #bloc-tuto2 .txt span").html(h.txt.tuto2);
  $("#pop-param #bloc-tuto3 .txt span").html(h.txt.tuto3);
  $("#pop-param #bloc-tuto4 .txt span").html(h.txt.tuto4);
  $("#pop-param #bloc-tuto5 .txt span").html(h.txt.tuto5);
  $("#pop-info .tab#tab-credit .txt").html(h.bt.credit);
  $("#pop-info #pop-credit #copy").html(h.txt.copyright);
  var i = h.txt.team.split("<br>");
  $("#pop-info #pop-credit #team-faces .face:eq(0) .text").html("Allan<br><span>" + i[0] + "</span>");
  $("#pop-info #pop-credit #team-faces .face:eq(1) .text").html("Romain<br><span>" + i[1] + "</span>");
  $("#pop-info #pop-credit #team-faces .face:eq(2) .text").html("Paul<br><span>" + i[2] + "</span>");
  $("#pop-info #pop-follow .title").html(h.txt.stayTuned);
  $("#pop-info #pop-follow #bt-feedback .txt").html(h.bt.feedback);
  $("#pop-info #pop-follow #bt-rating .txt").html(h.bt.rate);
  $("#pop-info #pop-follow #bt-privacy .txt").html(h.bt.privacy);
  $("#pop-info #pop-follow #bt-faq .txt").html(h.bt.faq);
  $("#pop-info #pop-follow .title").html(h.bt.git);
  $("#pop-info .tab#tab-follow .txt").html(h.bt.links);
  $("#pop-info .tab#tab-merch .txt").html(h.bt.merch);
  $("#pop-info #pop-merch .title#shop").html(h.txt.visitShop);
  $("#pop-info #pop-merch #shop-apparel .bt .txt").html(h.bt.apparel);
  $("#pop-info #pop-merch #shop-album .bt .txt").html(h.bt.cdvinyl);
  $("#pop-param .tab#tab-language .txt").html(h.txt.language);
  $("#pop-param .tab#tab-setting .txt").html(h.bt.param);
  $("#pop-param #pop-setting #param-dark .label").html(h.txt.modeDark);
  $("#pop-param #pop-setting #param-safe .label").html(h.txt.modeSafe);
  $("#pop-param #pop-setting #param-reset .label").html(h.txt.resetBonus);
  $("#pop-param #pop-setting #param-reset .bt .txt").html(h.bt.reset);
  $("#pop-param #pop-setting #param-recover .label").html(h.txt.recoverAllMix);
  $("#pop-param #pop-setting #param-recover .bt .txt").html(h.bt.recover);
  $(".biglist form input[type=text]").attr("placeholder", h.bt.search);
  $(".biglist form input[type=text]").val("");
  rc = "";
  rj();
  if (mz) {
    if (iP) {
      $("#home #box-version .txt").html("INCREDIMOD by <span>" + mP.credit.crewname + "</span>");
    } else {
      $("#home #box-version .txt").html("INCREDIBOX <span>V" + mP.version + "</span>");
    }
    $("#home #box-title .txt").html(mP.name);
    $("#mixlist .tab#tab-latest .txt").html(h.bt.latest);
    $("#mixlist .tab#tab-top50 .txt").html(h.bt.top50);
    $("#mixlist .tab#tab-search .txt").html(h.bt.search);
    $("#mixlist .tab#tab-mixlist .txt").html(h.bt.myMix);
    $("#mixlist .tab-filter #bt-name .txt").html(h.bt.djname);
    $("#mixlist .tab-filter #bt-title .txt").html(h.bt.mixtitle);
    $("#mixlist .tab-filter #bt-dedi .txt").html(h.txt.dedicatedTo.split("%{name}").join(""));
    $("#mixlist .tab-filter #bt-mymix .txt").html(h.bt.myMix);
    $("#mixlist .tab-filter #bt-myfav .txt").html(h.bt.myFav);
    $("#mixlist .tab-filter #bt-day .txt").html(h.bt.day);
    $("#mixlist .tab-filter #bt-week .txt").html(h.bt.week);
    $("#mixlist .tab-filter #bt-month .txt").html(h.bt.month);
    $("#mixlist .tab-filter #bt-year .txt").html(h.bt.year);
    $("#mixlist .scroll:not(#list-mymix) .infoListmix").html(h.txt.top50Info);
    if (qO.totalNbMix > 0) {
      $("#mixlist #latestbox .boxinfo").html(h.txt.latestMixInfo.replace("%{mix_total}", hb(qO.totalNbMix)).replace("%{version_name}", mP.name));
    } else {
      $("#mixlist #latestbox .boxinfo").html(h.txt.latestMixInfo.split("<br>")[0]);
    }
    $("#mixlist #list-day .boxinfo").html(h.txt.top50Info);
    $("#mixlist #list-week .boxinfo").html(h.txt.top50Info);
    $("#mixlist #list-month .boxinfo").html(h.txt.top50Info);
    $("#mixlist #list-year .boxinfo").html(h.txt.top50Info);
    $("#mixlist .box-info .offline .txt").html(h.txt.offline);
    $("#watch-info #bt-save .txt").html(h.bt.save);
    $("#watch-info .offline .txt").html(h.txt.offline);
    if (mT && mT.getMixlist) {
      i = mT.getMixlist().length == 0 ? km("txt.mixlistEmpty") : km("txt.mixlistInfo");
      $("#mixlist #list-mymix .boxinfo").html(i);
    }
    $("#watch-info .date, .box-info .date").each(function () {
      var j;
      if ($(this).attr("data-date")) {
        j = $(this).attr("data-date");
        $(this).html(pB(j));
      }
    });
    $("#pop-switch .title").html(h.txt.enjoyVersion);
  } else {
    $("#page-splash #sp-baseline").html(km("txt.baseline"));
    $("#page-splash #sp-experience").html(km("txt.sp-experience"));
    $("#page-splash #sp-choose").html(km("txt.selectVersion"));
  }
  if (hm(mv) && mv.isOpen()) {
    mv.refresh();
  }
  if (window.electron) {
    electron.ipc.loadLang(h);
  }
}
function kj(g) {
  var i = g && g.lang ? g.lang : null;
  var j = hm(i) && hm(ke[i]) ? i : hm(it.lang) && it.lang != "" ? it.lang : is.language != "" ? is.language : jT;
  if (ic) {
    j = gZ("lang") ? gZ("lang") : is.language;
  }
  if (window.electron && hl(i) && it.lang == "" && hm(electron.vars.lang)) {
    j = kg(electron.vars.lang);
  }
  j = kg(j);
  if (hl(ke[j])) {
    j = jT;
  }
  $("#pop-language .box-lang .bt-soft#bt-lang-" + j).addClass("active");
  if (hm(jS)) {
    $("body").removeClass("lang-" + jU);
  }
  var i = new XMLHttpRequest();
  function k() {
    if (g && g.fail) {
      g.fail();
    } else {
      kk();
    }
    return false;
  }
  i.addEventListener("load", function () {
    if (this.status != 200) {
      k();
      return false;
    }
    jS = h6(this.responseText);
    jg({
      lang: jU = j
    });
    $("body").addClass("lang-" + jU);
    if (g && g.cbck) {
      g.cbck();
    }
    sF("language", "load_success", jU);
  }, false);
  i.addEventListener("error", k, false);
  i.open("GET", "./lang/" + j + ".json");
  i.send();
}
function kk() {
  jg({
    lang: jT
  });
  mt.open("Impossible to load language settings. Please reload or force to quit the app then retry.", "ERROR", ["Reload"], [gS], true);
}
function kl(g) {
  var g = $(g.currentTarget);
  var h = g.attr("id").replace("bt-lang-", "");
  if (!g.hasClass("active")) {
    $("#pop-language .box-lang .bt").removeClass("active");
    g.addClass("active");
    kj({
      cbck: ki,
      lang: h
    });
  }
}
function km(g) {
  for (var j = g.split("."), k = jS.trad, l = 0, m = j.length; l < m; l++) {
    var p = j[l];
    if (!(p in k)) {
      return;
    }
    k = k[p];
  }
  return k;
}
var kn;
var ko;
var kp;
var kq;
var kr;
var ks;
var kt;
var ku;
var kv;
var kw;
var kx;
var ky;
var kz;
var kA = {};
function kB() {
  oX = mP.totalframe;
  oY = oX / 2;
  kn = {};
  ko = [];
  kp = (kp = mP.animearray.length) > 20 ? 20 : kp;
  kq = mP.bonusarray.length;
  kw = (kr = kp * 2 + (kq = kq > 3 ? 3 : kq) + 1) + (ks = kq) + (kt = kp) + (ku = kp) + 2;
  kx = [];
  kz = iP ? io : "./";
  var h = ky = kv = 0;
  var j = "";
  kn.sound = [];
  h = 0;
  for (; h < kp; h++) {
    kn.sound.push({
      sndA: 0,
      sndB: 0
    });
    ko.push({
      imgSprite: null,
      ratio: null,
      width: null,
      height: null,
      headWidth: null,
      headHeight: null,
      totalFrames: null,
      imgData: null,
      color: mP.animearray[h].color
    });
  }
  kn.bonus = [];
  h = 0;
  for (; h < kq; h++) {
    kn.bonus.push({
      snd: 0,
      predrop: 0
    });
  }
  kn.metro = [{
    snd: 0
  }];
  var k = gQ(iP ? "0_polo.png" : iy ? "polo-sprite-tshirt.png" : "polo-sprite.png");
  var k = iP ? ir ? rx["anime/0_polo.png"].dataURL : "" + io + ip + "anime/" + k : "./img/" + k;
  var l = ir ? rx["image/game-bck.jpg"].dataURL : "" + kz + mP.folder + "image/game-bck.jpg";
  var m = ir ? rx["image/game-picto.png"].dataURL : "" + kz + mP.folder + "image/game-picto.png";
  kx = [{
    func: kJ,
    params: {
      keyname: "spritePolo",
      path: k
    }
  }, {
    func: kJ,
    params: {
      keyname: "gameBck",
      path: l
    }
  }, {
    func: kJ,
    params: {
      keyname: "gamePicto",
      path: m
    }
  }];
  if (mV && mX > 4) {
    kx.pop();
  }
  h = 0;
  for (; h < kp; h++) {
    if (mP.animearray[h].uniqsnd) {
      kx.push({
        func: kE,
        params: ["sound", mP.animearray[h].soundA, h, "sndA", true]
      });
      kw--;
    } else {
      kx.push({
        func: kE,
        params: ["sound", mP.animearray[h].soundA, h, "sndA"]
      });
      kx.push({
        func: kE,
        params: ["sound", mP.animearray[h].soundB, h, "sndB"]
      });
    }
  }
  for (h = 0; h < kq; h++) {
    kx.push({
      func: kE,
      params: ["bonus", mP.bonusarray[h].sound, h, "snd"]
    });
    if (mP.bonusarray[h].predrop) {
      kx.push({
        func: kE,
        params: ["bonus", mP.bonusarray[h].predrop, h, "predrop"]
      });
    }
    j = gQ(mP.bonusarray[h].src);
    kx.push({
      func: kH,
      params: [j, h]
    });
  }
  for (h = 0; h < kt; h++) {
    j = mP.animearray[h].animeData;
    kx.push({
      func: kF,
      params: [j, h]
    });
    j = gQ(mP.animearray[h].anime);
    kx.push({
      func: kG,
      params: [j, h]
    });
  }
  kC();
}
function kC() {
  kD();
  if (ky < kx.length) {
    kx[ky].func(kx[ky].params);
    ky++;
  }
}
function kD() {
  kv++;
  var g = (g = Math.round(kv / kw * 100)) < 5 ? 5 : g;
  lY.css({
    width: String(g > 100 ? 100 : g) + "%"
  });
  if (kv == kw && (nH(), ng(), iE)) {
    gI("appLoadingComplete");
  }
}
function kE(g) {
  var j = g[0];
  var k = g[1];
  var l = g[2];
  var m = g[3];
  var p = !hl(g[4]) && g[4];
  var q = "" + kz + mP.folder + ("sound/" + iv + "/" + k + ".") + iv;
  var q = ir ? rx["sound/" + iv + "/" + k + "." + iv].dataURL : q;
  var u = new XMLHttpRequest();
  u.open("GET", q, true);
  u.responseType = "arraybuffer";
  u.onload = function () {
    pp.decodeAudioData(u.response, function (w) {
      kn[j][l][m] = w;
      if (p) {
        kn[j][l].sndB = w;
      }
      kC();
    }, function (w) {
      jv({
        error: "decoding " + q.replace(kz, ""),
        action: "reload"
      });
    });
  };
  u.onerror = function () {
    jv({
      error: "XHR " + q.replace(kz, ""),
      action: "reload"
    });
  };
  u.send();
}
function kF(g) {
  var i = g[0];
  var j = g[1];
  var k = "" + kz + mP.folder + "anime/" + i;
  var k = ir ? rx["anime/" + i].dataURL : k;
  var l = new XMLHttpRequest();
  l.open("GET", k, true);
  l.responseType = "json";
  l.onload = function () {
    for (var m = l.response, p = m.arrayFrame, q = p.length, u = [], v = 0; v < q; v++) {
      var w = p[v].prop.split(",");
      u.push([parseInt(w[0]), parseInt(w[1]), parseInt(w[2]), parseInt(w[3])]);
    }
    ko[j].imgData = u;
    ko[j].headHeight = m.headHeight;
    kC();
  };
  l.onerror = function () {
    jv({
      error: "XHR " + k.replace(kz, ""),
      action: "reload"
    });
  };
  l.send();
}
function kG(g) {
  var j = g[0];
  var k = g[1];
  var l = "" + kz + mP.folder + "anime/" + j;
  var l = ir ? rx["anime/" + j].dataURL : l;
  var m = new Image();
  m.crossOrigin = "anonymous";
  m.onload = function () {
    ko[k].imgSprite = m;
    kC();
  };
  m.onerror = function () {
    jv({
      error: "load " + l.replace(kz, ""),
      action: "reload"
    });
  };
  m.src = l;
}
function kH(g) {
  var i = g[0];
  var j = "" + kz + mP.folder + "bonus/" + i;
  var j = ir ? rx["bonus/" + i].dataURL : j;
  var k = g[1] + 1;
  if (iG && !iH && ih >= 174) {
    kI(i, k, j);
  } else {
    (g = new XMLHttpRequest()).onload = function () {
      kI(i, k, window.URL.createObjectURL(this.response));
    };
    g.onerror = function () {
      jv({
        error: "XHR " + j.replace(kz, ""),
        action: "reload"
      });
    };
    g.open("GET", j);
    g.responseType = "blob";
    g.send();
  }
}
function kI(g, h, i) {
  var k = document.createElement("video");
  k.src = i;
  k.type = "video/" + iw;
  k.muted = true;
  k.setAttribute("playsinline", "playsinline");
  k.setAttribute("webkit-playsinline", "webkit-playsinline");
  k.setAttribute("muted", "");
  k.onerror = function (l) {
    jv({
      error: "video " + g
    });
  };
  k.oncanplaythrough = function (l) {
    k.oncanplaythrough = null;
    m9.prepend("<div class='video' id='video" + h + "'></div>");
    m9.find(".video#video" + h).append(k);
    kC();
  };
  k.load();
}
function kJ(g) {
  var h = new Image();
  h.onload = function () {
    kA[g.keyname] = this;
    kC();
  };
  h.onerror = function () {
    jv({
      error: "load image " + g.path.replace(kz, ""),
      action: "reload"
    });
  };
  h.src = g.path;
}
function kK(g) {
  $("#fade-all").html("<div class='preload-box spin'><svg class='svg-box'><use xlink:href='" + (ir ? "#ic-cogwheel" : "#ic-language") + "'></use></svg></div>");
  $("#fade-all .preload-box").addClass("fadeIn").one(ie, function () {
    var j = "" + io + ip + "app.json";
    var j = ir ? rx["app.json"].dataURL : j;
    var k = new XMLHttpRequest();
    k.open("GET", j, true);
    k.responseType = "json";
    k.onload = function () {
      var l;
      if (k.status === 200) {
        l = k.response;
        if (ir) {
          l.version = 101;
          l.folder = "";
        }
        gA["v" + l.version] = l;
        $("#fade-all .preload-box").addClass("svgChangeFill");
        if (g) {
          g();
        }
      } else {
        jv({
          error: "JSON " + k.status,
          action: "reload"
        });
      }
    };
    k.onerror = function () {
      jv({
        error: "XHR " + j.replace(kz, ""),
        action: "reload"
      });
    };
    k.send();
  });
}
function kL(g) {
  var i = "" + io + ip + "image/home-screen.jpg";
  var i = ir ? rx["image/home-screen.jpg"].dataURL : i;
  var j = new Image();
  j.onload = function () {
    lU[0].style.backgroundImage = "url(" + i + ")";
    $("#fade-all .preload-box").removeClass("fadeIn").addClass("fadeOut").one(ie, function () {
      $("#fade-all").empty();
      if (g) {
        g();
      }
    });
  };
  j.onerror = function () {
    jv({
      error: "home background",
      action: "reload"
    });
  };
  j.src = i;
}
function kM() {
  this.sync = function (g) {
    hm(g);
  };
  this.save = gC;
  this.remove = gC;
  return this;
}
function kN() {
  var h = this;
  this.setItem = function (i, j, k) {
    window.localStorage.setItem(i, j);
    if (k) {
      lF.save(i, j);
    }
  };
  this.getItem = function (i) {
    return window.localStorage.getItem(i);
  };
  this.getAllItem = function () {
    return window.localStorage;
  };
  this.removeItem = function (i, j) {
    window.localStorage.removeItem(i);
    if (j) {
      lF.remove(i);
    }
  };
  this.clear = function () {
    window.localStorage.clear();
  };
  this.weight = function () {
    var j;
    var k;
    var l = window.localStorage;
    var m = 0;
    var p = "LS | --------------------------\n";
    for (k in l) {
      m += j = (l[k].length + k.length) * 2;
      p += "LS | " + k.substr(0, 50) + " = " + (j / 1024).toFixed(2) + " KB\n";
    }
    return p = p + ("LS | Total = " + (m / 1024).toFixed(2) + " KB\n") + "LS | --------------------------";
  };
  this.restoreMixFromDB = function (i) {
    var k = {
      maj: 1
    };
    k.uuid = iV();
    k.guid = jf().guid;
    var l = i || gC;
    if (iu && (k.uuid.length || k.user.guid)) {
      $.ajax({
        type: "POST",
        url: im + "ph4/get-all-mix-db.php",
        data: k,
        dataType: "json",
        crossdomain: true,
        success: function (m) {
          var p;
          if (m.state == "success") {
            h.setTimerCall("restore");
            m.mixlist.forEach(function (q) {
              q.synced = true;
              q.online = true;
              q.mymix = true;
              mT.deleteMix("mix-" + q.link);
              mT.deleteMix("mix-" + q.id);
              var r = mT.deleteMix("fav-" + q.link);
              var r = !!mT.deleteMix("fav-" + q.id) || r;
              mT.saveMix(q);
              if (r) {
                mT.saveMix(q, true);
              }
            });
            mT.getAllMix().forEach(function (q) {
              if (q.mymix && q.online && !q.synced) {
                h.removeItem("mix-" + q.link);
                h.removeItem("fav-" + q.link);
                h.removeItem("mix-" + q.id);
                h.removeItem("fav-" + q.id);
                0;
              }
            });
            p = iV();
            p.forEach(function (q) {
              if (!(q.toUpperCase() == is.uuid.toUpperCase() || gM(m.uuidlist, q, false))) {
                h.removeItem("uuid-" + q, true);
                0;
              }
            });
            m.uuidlist.forEach(function (q) {
              h.setItem("uuid-" + q.toUpperCase(), "", true);
              0;
            });
            l({
              msg: "ok",
              nb: m.mixlist.length
            });
          } else {
            l({
              msg: "bug"
            });
          }
        },
        error: function (m) {
          l({
            msg: "error"
          });
        }
      });
    }
  };
  this.setTimerCall = function (i) {
    h.setItem("timer-" + i, new Date());
  };
  this.getTimerCall = function (i) {
    return h.getItem("timer-" + i);
  };
  this.deleteTimerCall = function (i) {
    h.removeItem("timer-" + i);
  };
  this.isTimerExpired = function (i, j) {
    i = h.getItem("timer-" + i);
    return !i || new Date() - new Date(i) >= j * 60 * 1000;
  };
  return this;
}
function kO() {
  var h = this;
  this.saveMix = function (i, j) {
    var j = !!hm(j) && j;
    return !(!hm(i) || !i.id || (j = (j ? "fav-" : "mix-") + i.id, i = h7(i), lE.setItem(j, i), 0));
  };
  this.deleteMix = function (i) {
    return !!hm(lE.getItem(i)) && (lE.removeItem(i, true), true);
  };
  this.deleteMixById = function (i) {
    var j;
    var k = h.getAllMix(true);
    var l = h.getAllMix(true, true);
    for (j in k) {
      if (k[j].id == i) {
        h.deleteMix("mix-" + k[j].id);
        h.deleteMix("fav-" + k[j].id);
      }
    }
    for (j in l) {
      if (l[j].id == i) {
        h.deleteMix("fav-" + l[j].id);
        h.deleteMix("mix-" + l[j].id);
      }
    }
  };
  this.getMix = function (i) {
    return !!hm(lE.getItem(i)) && h6(lE.getItem(i));
  };
  this.getAllMix = function (j, k) {
    var l;
    var m;
    var p = !!hm(j) && j;
    var j = !!hm(k) && k;
    var q = [];
    var u = lE.getAllItem();
    var v = j ? "fav-" : "mix-";
    for (l in u) {
      if (l.indexOf(v) != -1 && (hl((m = h6(u[l])).datedb) && (m.datedb = hm(m.date) ? m.date : h5()), !p || mX && m.version == mX)) {
        q.push(m);
      }
    }
    return q;
  };
  this.getMixlist = function () {
    var i = h.getAllMix(true, false);
    return h.sortArrayMix(i);
  };
  this.getFavlist = function (i) {
    i = !!hm(i) && i;
    i = h.getAllMix(i, true);
    return h.sortArrayMix(i);
  };
  this.sortArrayMix = function (i, j) {
    i.sort(function (k, l) {
      if (l.datedb > k.datedb) {
        return 1;
      } else if (l.datedb < k.datedb) {
        return -1;
      } else {
        return 0;
      }
    });
    return i = j === true ? i.reverse() : i;
  };
  this.getLastMix = function () {
    var i = h.getAllMix(false);
    var j = i.length;
    if (j > 0) {
      return i[j - 1];
    } else {
      return null;
    }
  };
  this.getLastDjName = function () {
    var i = h.getLastMix();
    if (hm(i)) {
      return i.name;
    } else {
      return "";
    }
  };
  this.deleteAllMix = function () {
    for (var i in lE.getAllItem()) {
      if (!(i.indexOf("mix-") == -1 && i.indexOf("fav-") == -1)) {
        lE.removeItem(i);
      }
    }
  };
  this.getOnlineMixIds = function () {
    var i;
    var j = h.getAllMix(false);
    var k = [];
    for (i in j) {
      var l = j[i];
      if (/^[0-9]+$/.test(l.id) && /^[0-9]+$/.test(l.link)) {
        k.push(l.id);
      }
    }
    return k;
  };
  this.getStatMixOnline = function (j) {
    var l = h.getOnlineMixIds();
    if (l.length) {
      $.ajax({
        type: "GET",
        url: im + "ph4/get-stat-mix.php",
        data: {
          id: l
        },
        dataType: "json",
        crossdomain: true,
        success: function (m) {
          if (m.state == "success") {
            qr.mymix = new Date();
            var m = m.list;
            var p = [];
            m.forEach(function (r) {
              p.push(parseInt(r.id));
              var s = h.getMix("mix-" + r.link);
              s.id = r.id;
              s.newnbview = r.nbview;
              s.newnblike = r.nblike;
              h.saveMix(s);
            });
            if (p.length < l.length) {
              var q;
              var m = gL(p, l);
              for (q of m) {
                h.deleteMixById(q);
              }
            }
            if (j !== undefined) {
              j();
            }
          }
        },
        error: function (m) {}
      });
    } else if (j !== undefined) {
      j();
    }
  };
  this.getStatFavOnline = function (j) {
    var l = h.getFavlist(true);
    var m = [];
    l.forEach(function (p) {
      if (!(p.mymix && !p.online || !hm(p.id))) {
        m.push(parseInt(p.id));
      }
    });
    if (m.length) {
      $.ajax({
        type: "GET",
        url: im + "ph4/get-stat-mix.php",
        data: {
          id: m
        },
        dataType: "json",
        crossdomain: true,
        success: function (p) {
          if (p.state == "success") {
            qr.myfav = new Date();
            var p = p.list;
            var q = [];
            p.forEach(function (s) {
              q.push(s.id);
              var u = h.getMix("fav-" + s.id);
              u.id = s.id;
              u.nbview = s.nbview;
              u.nblike = s.nblike;
              h.saveMix(u, true);
            });
            if (q.length < m.length) {
              var r;
              var p = gL(q, m);
              for (r of p) {
                h.deleteMixById(r);
              }
            }
            if (j !== undefined) {
              j();
            }
          }
        },
        error: function (p) {}
      });
    } else if (j !== undefined) {
      j();
    }
  };
  this.tryConnectDB = function () {
    if (iu && lE.isTimerExpired("restore", 30)) {
      lE.restoreMixFromDB(function () {
        h.saveMixesOffline();
      });
    }
  };
  this.deleteOldLocalMixes = function () {
    var j;
    var k = h.getFavlist();
    for (j in k) {
      var l = k[j];
      if (l.link && /[0-9]/.test(l.link) && /[a-zA-Z]/.test(l.link)) {
        h.deleteMix("fav-" + l.link);
      }
    }
    var m = h.getAllMix();
    for (j in m) {
      var p = m[j];
      if (p.link && /[0-9]/.test(p.link) && /[a-zA-Z]/.test(p.link)) {
        h.deleteMix("mix-" + p.link);
      }
    }
  };
  this.saveMixesOffline = function () {
    var i = h.getAllMix();
    if (i.length) {
      for (var j in i) {
        j = i[j];
        if (/^[a-z]+$/.test(j.id)) {
          k7(j);
        }
      }
    }
  };
  this.deleteOldLocalMixes();
}
function kP(j, q, z) {
  var B;
  var E = this;
  var F = j + 1;
  var G = $("#bt-bonus-" + F);
  var H = G.find(".quarter");
  var I = $(".circle", G);
  var J = $("#box-video .video#video" + F);
  var K = $("#box-video .video#video" + F + " video")[0];
  var L = false;
  var M = false;
  var N = new q9("bonus" + F);
  var O = new q9("predrop" + F);
  var P = z.snd;
  var Q = z.predrop;
  var R = gP(q.code);
  var S = R.length;
  var U = [];
  var V = 0;
  var W = 0;
  this.$div = J;
  this.tabSVG = U;
  this.video = K;
  this.found = false;
  this.unlock = false;
  E.cntCode = 0;
  E.nbLoop = q.loop;
  E.sound = N;
  this.init = function () {
    var a1 = ir ? gZ("v") : mP.version;
    var a1 = lE.getItem("v" + a1 + "-bonus-complete") || 0;
    if (E.getId() == 0 || E.getId() <= a1) {
      E.unlockme();
    } else {
      E.lockme();
    }
    for (var a2 = 0; a2 < S; a2++) {
      var a3 = {
        obj: $(".svg.q" + (a2 + 1), H),
        col: $(".svg.q" + (a2 + 1) + " svg", H).css("fill")
      };
      U.push(a3);
    }
    E.modeTouch();
  };
  this.reinit = function () {
    E.hideLoader();
    G.removeClass("inprogress found bounce");
    H.find(".svg").removeClass("directshow show hide");
    E.found = false;
    E.inprogress = false;
    E.cntCode = 0;
    E.modeTouch();
  };
  this.modeTouch = function () {
    G.off().on(iF.down, E.touchStart);
  };
  this.modeClick = function () {
    G.off().on(iF.down, E.launchVideo);
  };
  this.unlockme = function () {
    G.addClass("unlock");
    this.unlock = true;
  };
  this.lockme = function () {
    G.removeClass("unlock");
    this.unlock = false;
  };
  this.getId = function () {
    return F - 1;
  };
  this.getCode = function () {
    return R;
  };
  var j = G.find(".box-loader .zone");
  var X = j.find(".loader");
  var Y = j.find(".bar");
  var Z = false;
  this.showLoader = function () {
    Z = true;
    X.addClass("show");
    Y.css({
      "animation-duration": ha(pF() / 1000, 2) + "s"
    });
    Y.addClass("progress");
  };
  this.hideLoader = function () {
    if (Z) {
      Z = false;
      X.removeClass("show");
      Y.removeClass("progress");
    }
  };
  var a0 = new kQ("canvas-bt-bonus-" + F);
  a0.init(43, 43, 1, 35, 16);
  this.playPredrop = function (a1) {
    a1 = hm(a1) ? a1 : 0;
    O.prepare(Q, 0);
    O.play(a1, true);
    M = true;
  };
  this.stopPredrop = function () {
    if (M) {
      O.stop(true);
      M = false;
    }
  };
  this.hasCode = function (a1) {
    return R.indexOf(a1) != -1;
  };
  this.checkCode = function (a1, a2) {
    a1 = R.indexOf(a1);
    if (a1 > -1) {
      if (a2) {
        E.showQuarter(a1);
      } else {
        E.hideQuarter(a1);
      }
    }
  };
  this.showQuarter = function (a1) {
    E.cntCode++;
    var a2 = U[a1].obj;
    var a1 = U[a1].col;
    if (E.cntCode == S && E.unlock) {
      E.hasBeenFound();
    }
    if (E.cntCode == 1) {
      E.inprogress = true;
      G.addClass("inprogress");
    }
    I.addClass("show").one(ie, function (a3) {
      $(a3.target).removeClass("show");
    });
    I.css({
      "border-color": a1
    });
    a2.removeClass("hide").addClass("directshow show");
  };
  this.hideQuarter = function (a1) {
    a1 = U[a1].obj;
    if (E.unlock) {
      a1.addClass("hide").one(ie, function (a2) {
        $(a2.target).removeClass("directshow show hide");
      });
    } else {
      a1.removeClass("directshow show hide");
    }
    if (E.cntCode == S) {
      ou();
      this.notFoundAnymore();
    }
    E.cntCode--;
    if (E.cntCode < 0) {
      E.cntCode = 0;
    }
    if (E.cntCode == 0) {
      E.inprogress = false;
      G.removeClass("inprogress");
    }
  };
  this.hideClock = function () {
    a0.stop(true);
  };
  this.render = function () {
    a0.render();
  };
  this.hasBeenFound = function () {
    if (!nD) {
      G.addClass("found bounce");
      jH();
    }
    E.modeClick();
    E.found = true;
  };
  this.notFoundAnymore = function () {
    if (!nD) {
      G.removeClass("found bounce");
    }
    E.found = false;
    E.hideClock();
    E.hideLoader();
    E.modeTouch();
  };
  this.touchStart = function (a1) {
    a1.preventDefault();
    if (E.unlock) {
      if (!oL) {
        (B = ~a1.type.indexOf("touch") ? G : lG).on(iF.up, E.touchEnd);
        V = h1();
        pv(F);
      }
    } else {
      jG();
    }
  };
  this.touchEnd = function (a1) {
    a1.preventDefault();
    B.off(iF.up, E.touchEnd);
    px(V);
  };
  this.launchVideo = function () {
    var a1;
    if (!(oM || oL || (a1 = !mP.bonusloopA || oQ, !n0 && pE() < 500 && a1))) {
      E.modeTouch();
      E.showLoader();
      nu.xmlAction("bonus", E);
      ot(F);
      G.removeClass("bounce");
      I.addClass("showCircle").one(ie, function (a2) {
        $(a2.target).removeClass("showCircle");
      });
      E.prepareVideo(1);
    }
  };
  this.prepareVideo = function (a1) {
    if (K.error) {
      K.load();
    }
    W = mP.looptime * (a1 - 1) / 1000;
    K.currentTime = W;
  };
  this.videoPlaying = function () {};
  this.videoEnded = function () {};
  this.play = function () {
    M = !(L = true);
    G.addClass("playing");
    E.hideLoader();
    a0.start(n7 * E.nbLoop, false);
    N.prepare(P);
    N.play(W);
    J.addClass("show");
    K.play().then(function () {
      if (n5) {
        K.pause();
      }
    }).catch(a1 => {
      throw new Error(a1);
    });
  };
  this.stop = function () {
    G.removeClass("playing");
    if (n4 && E.found) {
      E.modeClick();
    }
    if (L) {
      N.stop(true);
      a0.stop(true);
    }
    E.stopPredrop();
    L = false;
    J.removeClass("show");
    K.pause();
  };
  this.pause = function () {
    if (L) {
      K.pause();
    }
    a0.pause();
  };
  this.resume = function () {
    if (L) {
      K.play();
    }
    a0.resume();
  };
  this.init();
}
function kQ(j) {
  var q;
  var w;
  var x;
  var y;
  var z;
  var A;
  var B;
  var C;
  var D;
  var E;
  var F;
  var G = this;
  var H = $("#" + j)[0].getContext("2d");
  var I = Math.PI * 2;
  var J = Math.PI / 2;
  var K = false;
  var L = false;
  var M = 0;
  this.start = function (N, O) {
    C = lh() ? "#CCCCCC" : "#5A5A5A";
    H.strokeStyle = C;
    L = !(K = true);
    F = O;
    E = 100 / N;
    D = h1();
  };
  this.stop = function (N) {
    K = false;
    if (N) {
      G.clear();
    } else {
      L = true;
      q = F ? 0 : 1;
    }
  };
  this.pause = function () {
    M = h1();
  };
  this.resume = function () {
    var N = h1() - M;
    D += N;
  };
  this.render = function () {
    var N;
    var O;
    if (K || L) {
      if (K) {
        N = h1() - D;
        w = N * E / 100;
      } else if (L) {
        w += (q - w) * 0.2;
      }
      if ((w = w < 0.001 ? 0.001 : w) > 0.999) {
        w = 0.999;
      }
      N = F ? -J : I * w - J;
      O = F ? I * w - J : -J;
      G.clear();
      H.beginPath();
      H.arc(x, y, A, N, O, false);
      H.stroke();
      if (!(!L || w != 0.001 && w != 0.999)) {
        L = false;
        G.clear();
      }
    }
  };
  this.clear = function () {
    H.clearRect(x - A - B / 2, y - A - B / 2, A * 2 + B, A * 2 + B);
  };
  this.init = function (N, O, P, Q, R, S) {
    x = N == null ? 0 : N;
    y = O == null ? 0 : O;
    z = P == null ? 1 : P;
    A = Q == null ? 18 : Q;
    B = R == null ? 6 : R;
    C = S == null ? "#FFFFFF" : S;
    H.lineWidth = B;
    H.strokeStyle = C;
    H.globalAlpha = z;
  };
}
function kR(g, h, j) {
  var k = {
    xIcKW: function (I, J) {
      return I !== J;
    },
    UtYle: "open",
    EboBS: "shop",
    YzpML: function (I, J, K) {
      return I(J, K);
    },
    UwJTs: "scaleX(",
    ooxLJ: function (I, J) {
      return I / J;
    },
    SRljO: function (I, J) {
      return I + J;
    },
    bwzjw: "Spsxb",
    bnDIP: function (I, J) {
      return I < J;
    },
    JSnrM: "%'></div>",
    LYoqE: function (I, J) {
      return I * J;
    }
  };
  var q;
  var w = this;
  var x = $(g);
  var y = $("#reading-buffer", x);
  var z = ms.find("#t-spent");
  var A = ms.find("#t-duration");
  var B = "00:00";
  var C = false;
  var D = 0;
  var E = "record";
  var F = h0(mP.looptime * mP.recmaxloop);
  var G = 0;
  var H = 0;
  this.minLoop = h;
  this.maxLoop = j;
  this.maxTime = 0;
  this.cntLoop = 0;
  this.bonusList = [];
  this.onLoopsFinished = gC;
  this.onLooping = gC;
  this.isFinished = function () {
    return this.cntLoop == this.maxLoop;
  };
  this.isLastLoop = function () {
    return this.cntLoop + 1 == this.maxLoop;
  };
  this.open = function (I, J) {
    if (k.xIcKW("SbCfT", "SbCfT")) {
      if (!y) {
        G = true;
        q.attr("xlink:href", "#ic-loader");
        I.addClass("spin");
      }
      return E;
    } else {
      E = I;
      w.createRecordBlock(J);
      w.cntLoop = 0;
      w.maxTime = E == "record" ? F : h0(w.maxLoop * mP.looptime);
      y.css({
        transform: "scaleX(0)"
      });
      B = "00:00";
      z.text(B);
      A.text(" / " + w.maxTime);
      G = 0;
      H = 100 / ns.maxLoop;
      x.addClass("open");
      ms.addClass("fadeIn");
      gI("replayTime", {
        state: "open",
        spent: B,
        duration: w.maxTime
      });
      return w;
    }
  };
  this.close = function () {
    w.onLoopsFinished = gC;
    w.onLooping = gC;
    hs(x, k.UtYle, "transform", function () {
      y.removeClass("progress");
      $("#reading-marker").empty();
      $("#reading-marker-bonus").empty();
      w.bonusList = [];
    });
    ms.removeClass("fadeIn cssdelay");
    return w;
  };
  this.start = function () {
    C = true;
    w.cntLoop = 0;
    D = 0;
    w.render();
    G = Math.floor(D + q) / w.maxLoop;
    y.css({
      transform: "scaleX(" + G / 100 + ")",
      "animation-duration": ha(w.maxLoop * mP.looptime / 1000, 2) + "s"
    });
    y.addClass("progress");
    gI("replayTime", {
      state: "start",
      spent: B,
      duration: w.maxTime
    });
    return w;
  };
  this.stop = function () {
    C = false;
    k.YzpML(gI, "replayTime", {
      state: "stop",
      spent: B,
      duration: w.maxTime
    });
    return w;
  };
  this.froze = function () {
    y.addClass("froze");
  };
  this.seek = function (I) {
    w.cntLoop = I;
    y.removeClass("progress");
    ho(y[0]);
    y.css({
      transform: k.UwJTs + H * w.cntLoop / 100 + ")"
    });
    w.render();
  };
  this.unfroze = function () {
    y.css({
      transform: "scaleX(" + H * w.cntLoop / 100 + ")",
      "animation-duration": ha(k.ooxLJ((w.maxLoop - w.cntLoop) * mP.looptime, 1000), 2) + "s"
    });
    y.removeClass("froze").addClass("progress");
  };
  this.openBig = function () {
    x.addClass("seeking");
  };
  this.openNormal = function () {
    x.removeClass("seeking");
  };
  this.loop = function () {
    w.cntLoop++;
    D += q;
    if (w.isFinished()) {
      if (w.onLoopsFinished) {
        w.onLoopsFinished();
      }
    } else if (w.onLooping) {
      w.onLooping();
    }
    return w;
  };
  this.render = function () {
    var I;
    if (C && (q = oU, I = h0(k.SRljO(pC(), n7 * w.cntLoop)), B != I)) {
      B = I;
      z.text(B);
      gI("replayTime", {
        state: "render",
        spent: B,
        duration: w.maxTime
      });
    }
  };
  this.createRecordBlock = function (I) {
    var J = E == "record" ? "#D20A0A" : mV ? "#2C86FE" : "#36B460";
    var K = E == "record" ? ha(w.minLoop / w.maxLoop, 2) : 0;
    $("#reading-block", x).css({
      transform: "scale(" + K + ", 1)"
    });
    $(ms).css({
      color: J
    });
    y.css({
      "background-color": J
    });
    if (I === true) {
      if (k.bwzjw !== k.bwzjw) {
        j.setItem(k, "ok");
        y.$popup.find("#pointe-box").remove();
      } else {
        for (var L = "", M = 100 / w.maxLoop, N = 0, N = 0; k.bnDIP(N, w.maxLoop); N++) {
          L += "<div class='marker' style='left:" + M * N + k.JSnrM;
        }
        $("#reading-marker").html(L);
        L = "";
        N = 0;
        for (; N < w.bonusList.length; N++) {
          L += "<div class='marker' style='left:" + k.LYoqE(M, w.bonusList[N].loopIndex) + "%; width:" + M + k.JSnrM;
        }
        $("#reading-marker-bonus").html(L);
      }
    }
  };
  this.createRecordBlock();
}
function kS(g) {
  var h;
  var j = g || gC;
  var k = false;
  function l(m) {
    j();
    h = requestAnimationFrame(l);
  }
  this.start = function () {
    if (!k) {
      k = true;
      l();
    }
  };
  this.stop = function () {
    if (k) {
      k = false;
      cancelAnimationFrame(h);
    }
  };
}
var kT = {
  $bt: null,
  $svg: null,
  xlink: "",
  add: function (g) {
    if (hm(g)) {
      this.$bt = g;
      this.$svg = this.$bt.find("svg use");
      if (this.$svg.length > 0) {
        this.xlink = this.$svg.attr("xlink:href");
        this.$svg.attr("xlink:href", "#ic-loader");
      }
      this.$bt.addClass("spin");
    }
  },
  reset: function () {
    if (hm(this.$bt)) {
      this.$bt.removeClass("spin");
    }
    if (hm(this.$svg) && this.$svg.length > 0) {
      this.$svg.attr("xlink:href", this.xlink);
    }
    this.$bt = null;
    this.$svg = null;
    this.xlink = "";
  }
};
function kU(g) {
  var j = g;
  var k = j.find("svg");
  var l = k.find("use");
  var m = l.attr("xlink:href");
  var p = false;
  var q = false;
  j.addSpinner = function () {
    if (!p) {
      p = true;
      l.attr("xlink:href", "#ic-loader");
      k.addClass("spin");
    }
    return j;
  };
  j.removeSpinner = function () {
    if (p) {
      p = false;
      l.attr("xlink:href", m);
      k.removeClass("spin");
    }
    return j;
  };
  j.addTouchAnimation = function () {
    if (q) {
      j.removeClass("ontouch").get(0).offsetHeight;
    }
    q = true;
    j.addClass("ontouch").one(ie, function (r) {
      j.removeClass("ontouch");
      q = false;
    });
    return j;
  };
  return j;
}
function kV(g) {
  var h;
  var i = this;
  this.id = g;
  this.div = document.getElementById(g);
  this.context = this.div.getContext("2d");
  this.saveImage = function () {
    try {
      h = i.context.getImageData(0, 0, i.div.width, i.div.height);
    } catch (j) {}
  };
  this.showImage = function () {
    if (h) {
      i.clear();
      i.context.putImageData(h, 0, 0);
    }
  };
  this.clear = function () {
    i.context.clearRect(0, 0, i.div.width, i.div.height);
  };
  return this;
}
var kW;
var kX = [];
var kY = -1;
var kZ = [];
function l0() {
  l1();
  document.addEventListener("keydown", l2, false);
  $(document).on(iF.down, h => {
    if (h.isTrigger != 3) {
      l6(h);
    }
  });
}
function l1() {
  document.removeEventListener("keydown", l2, false);
  $(document).off(iF.down, l6);
}
function l2(g) {
  var i = g.key.toLowerCase();
  if (!(g.shiftKey && g.keyCode == 9)) {
    if (g.keyCode == 9) {
      g.preventDefault();
    }
    if (g.keyCode == 27) {
      g.preventDefault();
    }
    if (g.keyCode == 38) {
      g.preventDefault();
    }
    if (g.keyCode == 40) {
      g.preventDefault();
    }
    if (!$("input").is(":focus")) {
      if (g.keyCode == 13) {
        g.preventDefault();
      }
      if (g.keyCode == 37) {
        g.preventDefault();
      }
      if (g.keyCode == 39) {
        g.preventDefault();
      }
    }
    l9(i);
  }
}
function l3() {
  var h;
  var i;
  kY = ++kY > kX.length - 1 ? kX.length - 1 : kY;
  if (kZ[kZ.length - 1] == "playlist-all" && (i = qn.$scrollbox.find(".boxline .line.focused")).length && (h = i.index()) > 0) {
    i = i.height();
    qn.$scrollbox[0].scroll({
      top: h * i,
      left: 0,
      behavior: "smooth"
    });
  }
  l5();
}
function l4() {
  var g;
  var h;
  kY = --kY < 0 ? 0 : kY;
  if (kZ[kZ.length - 1] == "playlist-all" && (h = qn.$scrollbox.find(".boxline .line.focused")).length && (g = h.index()) > 0) {
    h = h.height();
    qn.$scrollbox[0].scroll({
      top: g * h - h * 2,
      left: 0,
      behavior: "smooth"
    });
  }
  l5();
}
function l5() {
  if (hm(kW)) {
    kW.removeClass("focused");
    kW = null;
  }
  if (kX.length > 0) {
    (kW = kX[kY].toFocus).addClass("focused");
  }
}
function l6() {
  if (hm(kW)) {
    kW.removeClass("focused");
    kW = null;
    kY = -1;
  }
}
function l7() {
  var h;
  if (hm(kW) && hm(kX[kY])) {
    if (hm(kX[kY].onEnter)) {
      kX[kY].onEnter();
    } else {
      h = kX[kY].toClick || kX[kY].toFocus;
      if ($._data(h[0], "events") != null) {
        if ($._data(h[0], "events").click) {
          h.trigger("click");
        } else {
          h.trigger(iF.down);
        }
      } else {
        h[0].dispatchEvent(new Event(iF.down));
      }
    }
  }
}
function l8() {
  if (kZ[kZ.length - 1] == "popup-menu-exit") {
    return false;
  }
  if (hm(kW)) {
    kW.removeClass("focused");
    kW = null;
  }
  kX = [];
  kY = -1;
}
function l9(g) {
  switch (g) {
    case "tab":
      if ($("input").is(":focus")) {
        le();
      }
      l3();
      break;
    case "enter":
      if (hl(kW) && kZ[kZ.length - 1] == "pop-safe-code") {
        kX[10].toFocus.trigger(iF.down);
        return false;
      }
      if ($("input").hasClass("focused") && $("input").is(":focus")) {
        le();
        l3();
      }
      l7();
      break;
    case "escape":
      if ($("input").is(":focus")) {
        le();
        return false;
      }
      if (hm(kW)) {
        l6();
      }
      if (mz && n5) {
        return false;
      }
      if (mt.isOpen()) {
        return false;
      }
      if (mz && lJ.hasClass("show")) {
        return false;
      }
      if (kZ[kZ.length - 1] == "pop-safe-code") {
        mv.close();
        return false;
      }
      if (kZ[kZ.length - 1] == "popup-switch") {
        my.close();
        return false;
      }
      if (mw.isOpen()) {
        mw.close();
        return false;
      }
      if (mx.isOpen()) {
        mx.close();
        return false;
      }
      if (mz && mv.isOpen()) {
        if (mv.$popup.hasClass("action") || mv.$popup.hasClass("action-back")) {
          mv.$icon.trigger(iF.down);
        } else {
          mv.close();
        }
        return false;
      }
      if (qn && qn.isOpen()) {
        if (kZ[kZ.length - 1] == "playlist-line-open") {
          qo.trigger(iF.down).trigger(iF.up);
          return false;
        }
        if (kZ[kZ.length - 1] == "playlist-all") {
          qn.close();
          return false;
        }
      }
      if ((window.cordova || window.electron) && kW == null) {
        l6();
        if (mu.isOpen()) {
          mu.close();
        } else {
          ly();
        }
        return false;
      }
      break;
    case " ":
      if (!(!(mz && n3 && n4) || lJ.hasClass("show") || mu !== undefined && mu.isOpen())) {
        mr.trigger(iF.down);
      }
      break;
    case "arrowright":
      if (!$("input").is(":focus")) {
        l3();
      }
      break;
    case "arrowleft":
      if (!$("input").is(":focus")) {
        l4();
      }
      break;
    case "arrowdown":
      if (!$("input").is(":focus")) {
        l3();
      }
      break;
    case "arrowup":
      if (!$("input").is(":focus")) {
        l4();
      }
      break;
    case "1":
      if (kZ[kZ.length - 1] == "pop-safe-code") {
        kX[0].toFocus.trigger(iF.down);
      }
      break;
    case "2":
      if (kZ[kZ.length - 1] == "pop-safe-code") {
        kX[1].toFocus.trigger(iF.down);
      }
      break;
    case "3":
      if (kZ[kZ.length - 1] == "pop-safe-code") {
        kX[2].toFocus.trigger(iF.down);
      }
      break;
    case "4":
      if (kZ[kZ.length - 1] == "pop-safe-code") {
        kX[3].toFocus.trigger(iF.down);
      }
      break;
    case "5":
      if (kZ[kZ.length - 1] == "pop-safe-code") {
        kX[4].toFocus.trigger(iF.down);
      }
      break;
    case "6":
      if (kZ[kZ.length - 1] == "pop-safe-code") {
        kX[5].toFocus.trigger(iF.down);
      }
      break;
    case "7":
      if (kZ[kZ.length - 1] == "pop-safe-code") {
        kX[6].toFocus.trigger(iF.down);
      }
      break;
    case "8":
      if (kZ[kZ.length - 1] == "pop-safe-code") {
        kX[7].toFocus.trigger(iF.down);
      }
      break;
    case "9":
      if (kZ[kZ.length - 1] == "pop-safe-code") {
        kX[8].toFocus.trigger(iF.down);
      }
      break;
    case "0":
      if (kZ[kZ.length - 1] == "pop-safe-code") {
        kX[9].toFocus.trigger(iF.down);
      }
      break;
    case "backspace":
      if (kZ[kZ.length - 1] == "pop-safe-code") {
        mv.$popup.find(".text").text("_ _ _ _");
      }
  }
}
function la(g, h) {
  if (mu && mu.isOpen() && g != "popup-menu-exit") {
    gN("popup-menu-exit", kZ);
    kZ.push(g);
    kZ.push("popup-menu-exit");
    return false;
  }
  if (mt && mt.isOpen() && g != "popup-dialog") {
    gN("popup-dialog", kZ);
    kZ.push(g);
    kZ.push("popup-dialog");
    return false;
  }
  kX = [];
  kY = -1;
  if (g == "popup-menu-exit") {
    mu.$popup.find(".bt:not(.icon)").each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
    kX.push({
      toFocus: mu.$icon
    });
  }
  if (mz && g == "home") {
    kX.push({
      toFocus: m4
    });
    if (m5 && m5.length > 0) {
      kX.push({
        toFocus: m5
      });
    }
    kX.push({
      toFocus: m2
    });
    kX.push({
      toFocus: m3
    });
    kX.push({
      toFocus: $("#home-bt-fs")
    });
    kX.push({
      toFocus: m1
    });
    kX.push({
      toFocus: lZ
    });
    kX.push({
      toFocus: m0
    });
  }
  if (!(g != "pop-credit" && g != "pop-follow" && g != "pop-merch")) {
    $("#pop-info .box-tab .tab").each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
  }
  if (g == "pop-follow") {
    $("#pop-info #pop-follow .bt").each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
  }
  if (g == "pop-merch") {
    $("#pop-info #pop-merch .bt").each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
    kX.push({
      toFocus: $("#pop-info #pop-merch #img-shop")
    });
  }
  if (!(g != "pop-language" && g != "pop-setting" && g != "pop-tuto" && g != "pop-feedback")) {
    $("#pop-param .box-tab .tab").each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
  }
  if (g == "pop-language") {
    $("#pop-param #pop-language .bt").each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
  }
  if (g == "pop-tuto") {
    $("#pop-param #pop-tuto .bt").each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
  }
  if (g == "pop-feedback") {
    $("#pop-param #pop-feedback .bt").each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
  }
  if (g == "pop-setting") {
    $("#pop-param #pop-setting .bt-onoff, #pop-param #pop-setting .bt").each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
  }
  if (g == "pop-safe-code") {
    mv.$popup.find(".bt:not(.icon)").each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
    kX.push({
      toFocus: mv.$icon
    });
  }
  if (g == "popup-modcredit") {
    $("#pop-popup .bt").each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
  }
  if (g == "index-select") {
    kX.push({
      toFocus: $("#home-bt-modlist")
    });
    kX.push({
      toFocus: $("#home-bt-fs")
    });
    kX.push({
      toFocus: $("#home-bt-info")
    });
    kX.push({
      toFocus: $("#home-bt-param")
    });
    $("#sp-select .vicon:not(.open)").each(function (v) {
      kX.push({
        toFocus: $(this).find(".img"),
        onEnter: () => {
          $(this).trigger(iF.up);
        }
      });
    });
  }
  if (g == "popup-switch") {
    $("#sp-select .vicon:not(.open)").each(function (v) {
      kX.push({
        toFocus: $(this).find(".img"),
        onEnter: () => {
          $(this).trigger(iF.up);
        }
      });
    });
  }
  if (g == "toolbar") {
    kX.push({
      toFocus: mg
    });
    kX.push({
      toFocus: mr
    });
  }
  if (g == "toolbar-open") {
    $("#game #box-bt1 .bt").each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
  }
  if (g == "game-paused") {
    if (lK.css("visibility") == "visible") {
      kX.push({
        toFocus: mr,
        toClick: lK
      });
    } else {
      kX.push({
        toFocus: mr
      });
    }
  }
  if (g == "mode-replay") {
    kX.push({
      toFocus: mg
    });
    kX.push({
      toFocus: mr
    });
    kX.push({
      toFocus: mk
    });
    kX.push({
      toFocus: ml
    });
  }
  if (g == "popup-record-complete") {
    mv.$popup.find(".box-bt-haut .bt").each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
    kX.push({
      toFocus: mv.$icon
    });
  }
  if (g == "popup-save-form") {
    mv.$popup.find(".formzone .formline:visible input").each(function (v) {
      var w = $(this);
      kX.push({
        toFocus: w,
        onEnter: function () {
          var x = w.val().length;
          w.focus();
          w[0].setSelectionRange(x, x);
        }
      });
    });
    kX.push({
      toFocus: mv.$popup.find(".bt-onofftext")
    });
    kX.push({
      toFocus: mv.$popup.find(".bt.valid")
    });
    kX.push({
      toFocus: mv.$icon
    });
  }
  if (g == "popup-mix-saved") {
    mv.$popup.find(".box-bt-haut .bt").each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
    kX.push({
      toFocus: mv.$icon
    });
  }
  if (g == "popup-global-share") {
    mv.$popup.find(".box-bt-haut .bt").each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
    kX.push({
      toFocus: mv.$icon
    });
  }
  if (g == "popup-email-form") {
    mv.$popup.find(".formzone .formline input").each(function (v) {
      var w = $(this);
      kX.push({
        toFocus: w,
        onEnter: function () {
          var x = w.val().length;
          w.focus();
          w[0].setSelectionRange(x, x);
        }
      });
    });
    kX.push({
      toFocus: mv.$popup.find(".bt.valid")
    });
    kX.push({
      toFocus: mv.$icon
    });
  }
  if (g == "popup-convert-mix") {
    kX.push({
      toFocus: mv.$icon
    });
  }
  if (g == "popup-convert-mix-ready") {
    k = mv.$popup.find("#bt-save-file");
    kX.push({
      toFocus: k,
      onEnter: function () {
        k[0].click();
      }
    });
    kX.push({
      toFocus: mv.$icon
    });
  }
  if (g == "popup-dialog") {
    $("#pop-dialog .bt").each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
  }
  if (g == "playlist-all") {
    $(".tabbox .tab", qn).each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
    (l = $(".pagebox.show", qn)).find(".tab-filter:visible").find(".bt").each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
    if (l.find(".formline input[type=text]").length) {
      kX.push({
        toFocus: l.find(".formline input[type=text]"),
        onEnter: function () {
          l.find(".formline input").focus();
        }
      });
      kX.push({
        toFocus: l.find(".bt.search")
      });
    }
    if (qn.attr("id") === "modlist") {
      kX.push({
        toFocus: qn.find("input[type=text]"),
        onEnter: function () {
          qn.find("input[type=text]").focus();
        }
      });
      kX.push({
        toFocus: qn.find(".bt#bt-import")
      });
      kX.push({
        toFocus: qn.find(".bt#bt-doc")
      });
    }
    qn.$scrollbox.find(".boxline .line").each(function (v) {
      var w = $(this);
      kX.push({
        toFocus: w,
        onEnter: function () {
          w.trigger(iF.down).trigger(iF.up);
        }
      });
    });
  }
  if (g == "playlist-line-open" && qo) {
    qo.find(".box-action .bt").each(function (v) {
      kX.push({
        toFocus: $(this)
      });
    });
  }
  var k;
  var l;
  var m;
  var p = [];
  for (m in kX) {
    if (ld(kX[m])) {
      p.push(kX[m]);
    }
  }
  kX = p;
  if (g != kZ[kZ.length - 1]) {
    kZ.push(g);
  }
  if (kZ.length > 5) {
    kZ.shift();
  }
  if (hm(h)) {
    for (var q = 0, u = kX.length; q < u; q++) {
      if (kX[q].toFocus && kX[q].toFocus[0] === h[0]) {
        kY = q;
        break;
      }
    }
  }
}
function lb(g) {
  gN(g, kZ);
}
function lc() {
  if (kZ.length) {
    la(kZ[kZ.length - 1]);
  }
}
function ld(g) {
  return !!hm(g) && !!(g = hm(g.toClick) ? g.toClick : g.toFocus).length && g.css("visibility") != "hidden" && g.css("display") != "none";
}
function le() {
  if (qn) {
    qn.find(".poplist form input[type=text]").trigger("blur");
  }
  if (hm(document.activeElement)) {
    document.activeElement.blur();
  }
}
function lf() {
  var g;
  if (iG) {
    g = false;
    document.addEventListener("focusin", function () {
      g = true;
    });
    document.addEventListener("focusout", function () {
      g = false;
      // TOLOOK
      setTimeout(function () {
        if (!g) {
          window.scrollTo(0, 0);
        }
      }, 250);
    });
  }
}
function lg() {
  if (ic && iG) {
    $("#home-bt-fs").hide();
  }
  if (lh()) {
    $("body").addClass("darkmode");
    $("#pop-setting #param-dark .bt-onoff").addClass("active");
  }
  if (li()) {
    $("body").addClass("safemode");
    $("#pop-setting #param-safe .bt-onoff").addClass("active");
  }
  $("#pop-setting #param-reset .bt").on(iF.down, lj).parent().find(".ic-info").on(iF.down, lk);
  $("#pop-setting #param-dark .bt-onoff").on(iF.down, ln);
  $("#pop-setting #param-safe .bt-onoff").on(iF.down, lp).parent().find(".ic-info").on(iF.down, lt);
}
function lh() {
  return !(lE.getItem("param-dark") == null && !$("body").hasClass("darkmode")) && (lE.getItem("param-dark") == "true" || $("body").hasClass("darkmode"));
}
function li() {
  return lE.getItem("param-safe") != null;
}
function lj(g) {
  g.preventDefault();
  lE.removeItem("popupDragViewed");
  for (var [i, j] of Object.entries(lE.getAllItem())) {
    if (i.match("-popup-bonus-next")) {
      lE.removeItem(i);
    }
    if (i.match("-popup-bonus-unlock")) {
      lE.removeItem(i);
    }
    if (i.match("-bonus-complete")) {
      lE.removeItem(i);
    }
  }
  if (mz) {
    hr($("#fade-all"), "fadeIn", "opacity", function () {
      window.location.reload();
    });
  } else {
    $(g.currentTarget).addClass("disable");
  }
}
function lk(g) {
  g.preventDefault();
  mt.open(km("pop.paramResetInfoText"), "", [km("bt.gotit")], []);
}
function ll(g) {
  g = g || (ir ? gZ("v") : mP.version);
  lE.removeItem("v" + g + "-popup-bonus-next");
  lE.removeItem("v" + g + "-popup-bonus-unlock");
  lE.removeItem("v" + g + "-bonus-complete");
}
function lm() {
  var g = ir ? gZ("v") : mP.version;
  lE.setItem("v" + g + "-popup-bonus-next", "ok");
  lE.setItem("v" + g + "-popup-bonus-unlock", "ok");
  lE.setItem("v" + g + "-bonus-complete", "2");
  hr($("#fade-all"), "fadeIn", "opacity", function () {
    window.location.reload();
  });
}
function ln(g) {
  g.preventDefault();
  if (lh()) {
    lE.setItem("param-dark", false);
    lG.removeClass("darkmode");
    $("#pop-setting #param-dark .bt-onoff").removeClass("active");
  } else {
    lE.setItem("param-dark", true);
    lG.addClass("darkmode");
    $("#pop-setting #param-dark .bt-onoff").addClass("active");
  }
}
var lo = "";
function lp(g) {
  g.preventDefault();
  l8();
  ls();
}
function lq(g) {
  lE.setItem("param-safe", g);
  lG.addClass("safemode");
  $("#pop-setting #param-safe .bt-onoff").addClass("active");
  if (iP) {
    gT();
  }
}
function lr() {
  lE.removeItem("param-safe");
  lG.removeClass("safemode");
  $("#pop-setting #param-safe .bt-onoff").removeClass("active");
}
function ls() {
  mv.open({
    name: "safe-code",
    icntype: "action",
    content: function () {
      return "<div class='title'>" + (li() ? km("txt.codeEnter") : km("txt.codeChoose")) + `</div>
\t\t\t\t<div class='text'>_ _ _ _</div>
\t\t\t\t<div class='content'>
\t\t\t\t\t<div class='bt bt-round bt-soft bt-number'><div class='bck'><div class='txt'>1</div></div><div class='hitzone'></div></div>
\t\t\t\t\t<div class='bt bt-round bt-soft bt-number'><div class='bck'><div class='txt'>2</div></div><div class='hitzone'></div></div>
\t\t\t\t\t<div class='bt bt-round bt-soft bt-number'><div class='bck'><div class='txt'>3</div></div><div class='hitzone'></div></div>
\t\t\t\t\t<div class='bt bt-round bt-soft bt-number'><div class='bck'><div class='txt'>4</div></div><div class='hitzone'></div></div>
\t\t\t\t\t<div class='bt bt-round bt-soft bt-number'><div class='bck'><div class='txt'>5</div></div><div class='hitzone'></div></div><br>
\t\t\t\t\t<div class='bt bt-round bt-soft bt-number'><div class='bck'><div class='txt'>6</div></div><div class='hitzone'></div></div>
\t\t\t\t\t<div class='bt bt-round bt-soft bt-number'><div class='bck'><div class='txt'>7</div></div><div class='hitzone'></div></div>
\t\t\t\t\t<div class='bt bt-round bt-soft bt-number'><div class='bck'><div class='txt'>8</div></div><div class='hitzone'></div></div>
\t\t\t\t\t<div class='bt bt-round bt-soft bt-number'><div class='bck'><div class='txt'>9</div></div><div class='hitzone'></div></div>
\t\t\t\t\t<div class='bt bt-round bt-soft bt-number'><div class='bck'><div class='txt'>0</div></div><div class='hitzone'></div></div><br>
\t\t\t\t\t<br>
\t\t\t\t\t<div class='bt bt-light' id='bt-valid-code'><div class='bck'><div class='txt'>` + km("bt.ok") + "</div></div><div class='hitzone'></div></div>\n\t\t\t\t</div>";
    },
    onBoxOpenEnd: function () {
      la("pop-safe-code");
      li();
      lo = "";
      mv.$icon.on(iF.down, mv.close);
      mv.$popup.find(".bt-number").on(iF.down, function (h) {
        h.preventDefault();
        var h = mv.$popup.find(".text");
        var i = h.text();
        var j = i.indexOf("_");
        if (j > -1) {
          h.text(i.replaceAt(j, $(this).text()));
        }
        if (!(!li() || (lo += $(this).text()) != "15092009" && h.text().replace(/ /g, "") != lE.getItem("param-safe"))) {
          lr();
          mv.close();
        }
        if ($(this).hasClass("ontouch")) {
          $(this).removeClass("ontouch").get(0).offsetHeight;
        }
        $(this).addClass("ontouch").one(ie, function (k) {
          $(k.target).removeClass("ontouch");
        });
      });
      mv.$popup.find("#bt-valid-code").on(iF.down, function (h) {
        var j = mv.$popup.find(".text").text().replace(/ /g, "");
        if (j.indexOf("_") == -1) {
          if (li()) {
            if (j == lE.getItem("param-safe")) {
              lr();
              mv.close();
            } else {
              mv.$popup.find(".text").addClass("shake").one(ie, function (k) {
                lo = "";
                $(k.target).text("_ _ _ _").removeClass("shake");
              });
            }
          } else {
            lq(j.replace(/ /g, ""));
            if (iP) {
              hr($("#fade-all"), "fadeIn", "opacity", function () {
                window.location.href = "index." + il.htmlExt;
              });
            } else {
              mv.close();
            }
          }
        } else {
          mv.$popup.find(".text").addClass("shake").one(ie, function (k) {
            $(k.target).removeClass("shake");
          });
        }
      });
    },
    onBoxCloseStart: function () {
      lb("pop-safe-code");
      l8();
      mv.$icon.off();
      mv.$popup.find(".bt").off();
    },
    onCloseComplete: function () {
      lc();
    }
  });
}
function lt(g) {
  g.preventDefault();
  mt.open(km("pop.paramSafeInfoText"), "", [km("bt.gotit")], []);
}
function lu(g) {}
function lv(g) {}
var lw = window.electron && window.electron.vars.isFullScreenable;
var lx = window.electron && window.electron.vars.isMinimizable;
function ly() {
  mu.open({
    name: "menu-exit",
    icntype: "action",
    content: function () {
      var h = lz() ? km("bt.fullscreenOff") : km("bt.fullscreenOn");
      var i = `
\t\t\t\t<div class='title'>Menu</div>
\t\t\t\t<div class='content'>`;
      if (lw) {
        i += "<div class=\"bt bt-light\" id=\"bt-exit-fullscreen\"><div class=\"bck\"><div class=\"txt\">" + h + "</div></div><div class=\"hitzone\"></div></div>";
      }
      if (lx) {
        i += "<div class=\"bt bt-light\" id=\"bt-minimize\"><div class=\"bck\"><div class=\"txt\">" + km("bt.minimizeWindow") + "</div></div><div class=\"hitzone\"></div></div>";
      }
      i += "<div class=\"bt bt-light\" id=\"bt-open-settings\"><div class=\"bck\"><div class=\"txt\">" + km("bt.param") + "</div></div><div class=\"hitzone\"></div></div>";
      if (window.cordova || window.electron) {
        i += "<div class=\"bt bt-light\" id=\"bt-exit-app\"><div class=\"bck\"><div class=\"txt\">" + km("bt.quitApp") + "</div></div><div class=\"hitzone\"></div></div>";
      }
      return i += "</div>";
    },
    onBoxOpenStart: function () {
      la("popup-menu-exit");
    },
    onBoxOpenEnd: function () {
      if (lw) {
        mu.$popup.find("#bt-exit-fullscreen").on(iF.down, lA);
      }
      if (lx) {
        mu.$popup.find("#bt-minimize").on(iF.down, lB);
      }
      if (window.cordova || window.electron) {
        mu.$popup.find("#bt-exit-app").on(iF.down, lC);
      }
      mu.$popup.find("#bt-open-settings").on(iF.down, lD);
      mu.$icon.on(iF.down, mu.close);
    },
    onBoxCloseStart: function () {
      mu.$icon.off();
      mu.$popup.find(".bt").off();
    },
    onCloseComplete: function () {
      lb("popup-menu-exit");
      lc();
    }
  });
}
function lz() {
  return window.electron && electron.ipc.isFullScreen();
}
function lA(g) {
  if (hm(g)) {
    g.preventDefault();
  }
  g = $(g.currentTarget).find(".txt");
  if (lz()) {
    g.text(km("bt.fullscreenOn"));
    electron.ipc.leaveFullScreen();
  } else {
    g.text(km("bt.fullscreenOff"));
    electron.ipc.enterFullScreen();
  }
}
function lB(g) {
  if (hm(g)) {
    g.preventDefault();
  }
  electron.ipc.minimize();
  mu.close();
}
function lC(g) {
  if (hm(g)) {
    g.preventDefault();
  }
  if (window.electron) {
    electron.ipc.close();
  } else if (window.cordova) {
    mt.open(km("txt.quitAppConfirm"), "", [km("bt.yes"), km("bt.no")], [() => {
      navigator.app.exitApp();
    }]);
  }
  mu.close();
}
function lD() {
  mu.close();
  if (mw.isOpen()) {
    mw.close();
  }
  jB();
}
var lE;
var lF;
var lG;
var lH;
var lI;
var lJ;
var lK;
var lL;
var lM;
var lN;
var lO;
var lP;
var lQ;
var lR;
var lS;
var lT;
var lU;
var lV;
var lW;
var lX;
var lY;
var lZ;
var m0;
var m1;
var m2;
var m3;
var m4;
var m5;
var m6;
var m7;
var m8;
var m9;
var ma;
var mb;
var mc;
var md;
var me;
var mf;
var mg;
var mh;
var mi;
var mj;
var mk;
var ml;
var mm;
var mn;
var mo;
var mp;
var mq;
var mr;
var ms;
var mt;
var mu;
var mv;
var mw;
var mx;
var my;
var mz = false;
function mA() {
  lF = new kM();
  lE = new kN();
  mT = new kO();
  iT();
  sE();
  kf();
  ia();
  mT.tryConnectDB();
  $(document).ready(function () {
    if (iE && ic) {
      gI("appIsReady");
    } else {
      mB();
    }
  });
}
function mB() {
  lG = $("body");
  mu = new jo(".box-popup#pop-menu-exit");
  mt = new jn("#pop-dialog");
  mv = new jo(".box-popup#pop-popup");
  if (j3() != "ok") {
    mG();
    jv({
      error: j3(),
      action: "kill"
    });
    return false;
  }
  kj({
    cbck: function () {
      if (ir) {
        rP(function () {
          kK(mC);
        });
      } else if (iP) {
        kK(mC);
      } else {
        mC();
      }
    },
    fail: function () {
      mG();
      jv({
        error: "no language found",
        action: "reload"
      });
    }
  });
}
function mC() {
  if (mz) {
    gB();
  }
  mF();
  jl();
  l0();
  lg();
  jr();
  ki();
  ry();
  if (iP) {
    kL(mD);
  } else {
    mD();
  }
}
function mD() {
  (mz ? n6 : mI)();
}
function mE(g) {
  var i = $(this).attr("id").split("icon").join("");
  var j = "app." + ib + "?v=" + i;
  var j = (j += gZ("lang") != null ? "&lang=" + gZ("lang") : "") + (gZ("afs") != null ? "&afs=" + gZ("afs") : "");
  if (iz && parseInt(i) > 4) {
    js();
  } else if (i != mX) {
    pN();
    kZ = [];
    l8();
    if (mz) {
      $(".box-popup#pop-switch #icon" + mX).addClass("close");
    }
    $(this).addClass("open clicked").one(ie, function () {
      hr(lL, "fadeIn", "opacity", function () {
        gS(j);
      });
    });
  }
}
function mF() {
  lG = $("body");
  lL = $("#fade-all");
  lJ = $("#lock-all").on(iF.down, hu);
  lI = $("#bck-global");
  m2 = $("#home-bt-info");
  m3 = $("#home-bt-param");
  m5 = $("#home-bt-modcredit");
  m6 = $("#home-bt-fs");
  m4 = new kU($("#home-bt-modlist"));
  (lO = $("#modlist")).isOpen = function () {
    return lO.hasClass("show");
  };
  if (mz) {
    lH = $("#app-incredibox");
    lK = $("#lock-pause").on(iF.down, function (h) {
      h.preventDefault();
      if (h.pageY - lH[0].getBoundingClientRect().y < lH[0].getBoundingClientRect().height * 0.7) {
        gF(op);
      }
    });
    (lN = $("#mixlist")).isOpen = function () {
      return lN.hasClass("show");
    };
    lQ = $("#tab-latest");
    lR = $("#tab-top50");
    lS = $("#tab-search");
    lT = $("#tab-mixlist");
    lU = $("#home");
    m7 = $("#home #img-bck");
    lV = $("#home #box-version");
    lW = $("#home #box-title");
    lX = $("#home #load-box");
    lY = $("#home #load-box #load-bar");
    lZ = new kU($("#home #home-bt-play"));
    m0 = new kU($("#home #home-bt-list"));
    m1 = $("#home #home-bt-switch");
    mh = $("#box-bt");
    mi = $("#bt-back");
    (mg = $("#bt-tool")).$bck = $("#bt-tool .bck");
    mg.$svg = mg.$bck.find("svg use");
    mg.bounce = function () {
      this.addClass("animateBounce").one(ie, function (i) {
        $(i.target).removeClass("animateBounce");
      });
    };
    mo = $("#bt-stop");
    mq = $("#bt-random");
    mp = $("#bt-record");
    mj = $("#bt-home");
    mm = $("#bt-help");
    mn = $("#bt-switch");
    mr = $("#bt-clock");
    ms = $("#cnt-record");
    mk = $("#bt-save");
    ml = $("#bt-like");
    m8 = $("#box-stage");
    m9 = $("#box-video");
    ma = $("#fade-video");
    mb = $("#box-top");
    mc = $("#box-bt-bonus");
    md = $("#box-bottom");
    me = $("#box-picto");
    mf = $("#box-loader-polo");
    (lM = $("#watch-info")).$title = $("#watch-info .title");
    lM.$name = $("#watch-info .name");
    lM.$dedi = $("#watch-info .dedi");
    lM.$date = $("#watch-info .date");
    my = new jo(".box-popup#pop-switch");
    $(".box-popup#pop-switch #icon" + mX).addClass("open");
    $(".box-popup#pop-switch .vicon").on(iF.up, mE);
  }
}
function mG() {
  if ((lL = hl(lL) ? $("#fade-all") : lL).hasClass("fadeIn")) {
    lL.removeClass("fadeIn");
  }
}
function mH() {
  if (mz) {
    if (n3 && n4 && !n5) {
      pd();
    } else {
      gS("index.html?back=1");
    }
  } else {
    lC();
  }
}
function mI() {
  lF.sync(lE.manageMixAtLaunch);
  hs($("#fade-all"), "fadeIn", "opacity", function () {
    if (window.cordova) {
      $("#fade-all").removeClass("white");
    }
  });
  if (gZ("skipintro")) {
    mK();
    mL();
  } else {
    mN(function () {
      // TOLOOK
      setTimeout(mJ, 2000);
    });
  }
}
function mJ() {
  $("#page-splash #sp-title").addClass("titleTweenUp");
  $("#page-splash #sp-baseline").addClass("baselineTweenUp");
  $("#page-splash #sp-experience").html(km("txt.useHeadphones")).addClass("experienceTweenUp");
  $("#page-splash #sp-headphone").addClass("headphoneTweenUp");
  // TOLOOK
  setTimeout(function () {
    $("#page-splash #sp-title").addClass("titleTweenUpHide");
    $("#page-splash #sp-experience").addClass("experienceTweenUpHide");
    $("#page-splash #sp-choose").html(km("txt.selectVersion")).addClass("chooseTweenUp");
    $("#page-splash #sp-headphone").addClass("headphoneTweenUpHide").one(ie, mL);
  }, 2500);
}
function mK() {
  $("#page-splash #sp-title").hide();
  $("#page-splash #sp-baseline").hide();
  $("#page-splash #sp-experience").hide();
  $("#page-splash #sp-choose").html(km("txt.selectVersion")).addClass("chooseTweenUp");
  $("#page-splash #sp-headphone").hide();
}
function mL() {
  m2.on(iF.down, jA).addClass("animate");
  m3.on(iF.down, jB).addClass("animate");
  m6.on(iF.down, function () {
    gI("openFullscreen");
  }).addClass("animate");
  m4.on(iF.down, function (h) {
    pN();
    m4.addSpinner();
    nk();
  }).addClass("animate");
  $("#page-splash").addClass("enabled");
  $("#page-splash #sp-select .vicon").addClass("iconTweenUp").on(iF.up, mE);
  la("index-select");
}
document.addEventListener(window.cordova ? "deviceready" : "DOMContentLoaded", mA, false);
var mM = false;
function mN(g) {
  var j;
  var k;
  var l = 0;
  var m = "ratemsg";
  function p(q) {
    if (q == 1) {
      lE.setItem(m, "false:0");
    } else if (q == 2) {
      lE.removeItem(m);
    } else {
      lE.removeItem(m);
      gU(iG || window.electron && iI ? il.storeRateURL : il.storeURL);
    }
    mt.close();
    g();
  }
  if (!((window.cordova || window.electron) && iu && !li() && il.store != "steam" && (hl(lE.getItem(m)) && lE.setItem(m, "true:0"), hl(j = lE.getItem(m)) || (j = String(j).split(":"), k = Boolean(j[0] == "true"), l = Number(j[1]), k && (++l >= 5 ? (mM = true, mt.open(km("pop.rateText"), km("pop.rateTitle"), [km("bt.nope"), km("bt.later"), km("bt.sure")], [function () {
    p(1);
  }, function () {
    p(2);
  }, function () {
    p(3);
  }])) : lE.setItem(m, "true:" + String(l)))), mM))) {
    g();
  }
}
function mO() {
  lE.setItem("ratemsg", "true:0");
}
var mP;
var mQ;
var mR;
var mS;
var mT;
var mU = gZ("mix");
var mV = !!mU;
var mW = ir ? 101 : gZ("v");
var mX = hl(mW) || isNaN(mW) ? 0 : Number(mW);
var mY = false;
var mZ = false;
var n0 = false;
var n1 = false;
var n2 = 500;
var n3 = false;
var n4 = false;
var n5 = false;
function n6() {
  j8();
  q6();
  lf();
  sA();
  mS = $("#cnv-stage")[0].getContext("2d");
  pX();
  q5();
  if (q8()) {
    return false;
  }
  lU.addClass("animate");
  lU[0].onanimationend = () => {
    lU.removeClass("animate");
  };
  hs(lL, "fadeIn", "opacity", function () {
    (mV ? nd : (qP(), ne))();
  });
}
var n7;
var n8;
var n9 = false;
var na = false;
function nb() {}
function nc(g) {
  n9 = true;
  qL = g;
}
function nd() {
  if (n9) {
    if (qL.dedi && qL.dedi != "") {
      $("#home #home-dedicated").html(km("txt.dedicatedTo").replace("%{name}", qL.dedi));
      $("#home #home-dedicated").addClass("animate");
    }
    lL.removeClass("fadeIn");
    if (!hl(qL)) {
      sq();
      nf();
    }
  } else {
    na = true;
    if (!iE) {
      nb();
    }
  }
}
function ne() {
  pO();
  j5();
  lL.removeClass("fadeIn");
  lW.addClass("animate");
  lV.addClass("animate");
  if (!(mZ = mV && iy ? true : mZ)) {
    mZ = true;
    (mY ? ni : nf)();
    m1.on(iF.down, function (h) {
      gF(jC);
    }).addClass("animate");
    m2.on(iF.down, function (h) {
      h.preventDefault();
      gF(jA);
    }).addClass("animate");
    m3.on(iF.down, function (h) {
      h.preventDefault();
      gF(jB);
    }).addClass("animate");
    m6.on(iF.down, function (h) {
      h.preventDefault();
      gI("openFullscreen");
    }).addClass("animate");
    m4.on(iF.down, function (h) {
      pN();
      m4.addSpinner();
      nk();
    }).addClass("animate");
    if (iP) {
      m5.on(iF.down, function (h) {
        h.preventDefault();
        gF(jy);
      }).addClass("animate");
    }
  }
}
function nf() {
  lX.addClass("animate");
  kB();
}
function ng() {
  lX.removeClass("animate");
  if (mV) {
    if (iy) {
      gI("replayIsReady", {
        func: function () {
          if (n4) {
            op();
          } else {
            q4(function () {
              sd(qL);
            });
          }
        }
      });
    } else {
      nh();
    }
  } else {
    ni(true);
  }
}
function nh() {
  lZ.on(iF.down, function () {
    lZ.addSpinner();
    q4(function () {
      sd(qL);
      gI("replayStart", qL);
    });
  });
  lZ.addClass("animate");
  var g = 0;
  lG.on(iF.down, function (h) {
    g = window.top.scrollY;
  });
  lG.on(iF.up, function (h) {
    if (window.top.scrollY == g && n4) {
      op();
    }
  });
  lK.off();
}
function ni(g) {
  if (g) {
    la("home");
  }
  lZ.addClass("animate");
  m0.addClass("animate");
  lZ.on(iF.down, function () {
    pN();
    lZ.addSpinner();
    q4(nl);
  });
  m0.on(iF.down, function () {
    if (ic) {
      js();
    } else {
      pN();
      m0.addSpinner();
      q4(nj);
    }
  });
  if (ij) {
    nl();
  }
}
function nj() {
  l8();
  pN();
  TweenMax.delayedCall(0.5, function () {
    pO();
    qQ();
  });
}
function nk() {
  l8();
  rz();
}
function nl() {
  if (iy && !mV) {
    gI("clickBtPlay");
  }
  l8();
  hr(lL, "fadeIn", "opacity", function () {
    sB("start", "new-game", nm);
  });
}
function nm() {
  pN();
  j4();
  q7();
  n3 = !(n1 = false);
  lU.hide();
  lH.addClass("show");
  document.body.classList.remove("darkback");
  lZ.removeSpinner();
  oI.start();
  if (n0) {
    s8();
    o2(true);
  } else {
    oE(mc);
    oE(me);
    oE(mf);
    o1();
  }
  hs(lL, "fadeIn", "opacity", np);
}
function nn(g) {
  l8();
  pN();
  n1 = true;
  qe();
  hr(lL, "fadeIn", "opacity", function () {
    no();
    if (g) {
      g();
    }
  });
}
function no() {
  document.body.classList.add("darkback");
  n3 = false;
  pd();
  oI.stop();
  nS();
  jp();
  lU.show();
  lH.removeClass("show");
  hs(lL, "fadeIn", "opacity", ne);
  if (n0) {
    sc();
    lc();
  } else {
    kZ = [];
    la("home");
  }
}
function np() {
  lL.removeClass("fadeIn");
  if (n0) {
    s9();
  } else {
    pO();
    o2();
    la("toolbar");
    if (hl(lE.getItem("popupDragViewed"))) {
      // TOLOOK
      setTimeout(jD, 600);
    }
  }
  sF("game", "launch");
}
var nq;
var nr;
var ns;
var nt;
var nu;
var nv;
var nw = [];
var nx = [];
var ny = [];
var nz = [];
var nA = false;
var nB = false;
var nC = false;
var nD = false;
var nE = false;
var nF = 0;
var nG = 0;
function nH() {
  mY = true;
  n7 = mP.looptime;
  n8 = 7;
  p0 = oY / n7;
  p1 = 100 / n7;
  kn.metro[0].snd = pp.createBuffer(2, pS * (mP.looptime / 1000), pS);
  (oJ = new q9("metronome")).setSilence();
  (mQ = new kQ("cnv-clock")).init(76, 76, 1, 68, 16);
  oI = new kS(pc);
  mR = new kV("cnv-stage");
  if (mV) {
    (nu = function () {}).xmlAction = function () {};
    nt = function () {};
  } else {
    nt = new s1();
    nu = new s7();
  }
  nv = new so();
  ns = new kR("#reading-bar", mP.recminloop, mP.recmaxloop);
  nq = nJ();
  on();
  nr = nI();
  nL();
  nw = nK();
  document.getElementById("box-stage-bck").style.backgroundImage = "url(" + kA.gameBck.src + ")";
  if (!mV) {
    document.querySelectorAll(".picto .bck").forEach(h => {
      h.style.backgroundImage = "url(" + kA.gamePicto.src + ")";
    });
  }
  nO();
  ia();
}
function nI() {
  for (var h = [], j = "", k = "", l = 0, l = 0; l < 20; l++) {
    var m = l < kp ? "<div class=\"picto\" id=\"picto" + l + "\" data-picto-num=\"" + l + "\"><div class=\"bck\"></div><div class=\"hitzone\"></div></div>" : "<div class=\"picto empty\"><div class=\"bck\"></div><div class=\"hitzone\"></div></div>";
    if (l < 10) {
      j += m;
    } else {
      k += m;
    }
  }
  me.find(".pictoline.top").html(j);
  me.find(".pictoline.bot").html(k);
  l = 0;
  for (; l < kp; l++) {
    h.push(new ql(l, me));
  }
  return h;
}
function nJ() {
  for (var g = [], h = "", i = "", j = 0, j = 0; j < n8; j++) {
    h += "\n\t\t\t<div class=\"polo\" data-polo-id=\"" + j + `">
\t\t\t\t<div class="ctrl">
\t\t\t\t\t<div class="cbt icon-game-bt-mute"><svg class="svg-box"><use xlink:href="#ic-mute"></use></svg></div>
\t\t\t\t\t<div class="cbt icon-game-bt-solo"><svg class="svg-box"><use xlink:href="#ic-solo"></use></svg></div>
\t\t\t\t\t<div class="cbt icon-game-bt-delete"><svg class="svg-box"><use xlink:href="#ic-close"></use></svg></div>
\t\t\t\t</div>
\t\t\t</div>`;
    i += "\n\t\t\t<div class=\"zone\" data-polo-id=\"" + j + `">
\t\t\t\t<div class="loader">
\t\t\t\t\t<div class="bar"></div>
\t\t\t\t</div>
\t\t\t</div>`;
  }
  document.querySelector("#box-polo").innerHTML = h;
  document.querySelector("#box-loader-polo").innerHTML = i;
  j = 0;
  for (; j < n8; j++) {
    g.push(new qm(j, mS));
  }
  return g;
}
function nK() {
  for (var g = [], h = 0; h < ks; h++) {
    for (var j = mP.bonusarray[h], k = j.code, l = $("#bt-bonus-" + (h + 1)), m = 0, p = k.length; m < p; m++) {
      var q = mP.animearray[k[m] - 1].color;
      $(".svg.q" + (m + 1) + " svg", l).css({
        fill: q
      });
    }
    if (!kn.bonus[h].predrop) {
      kn.bonus[h].predrop = pp.createBuffer(2, pS * (mP.looptime / 1000), pS);
    }
    j = new kP(h, j, kn.bonus[h]);
    g.push(j);
  }
  return g;
}
function nL() {
  for (var g = "", h = 1; h <= ks; h++) {
    g += "\n\t\t\t<div class=\"bt-bonus\" id=\"bt-bonus-" + h + `">
\t\t\t\t<div class="box-loader">
\t\t\t\t\t<div class="zone"><div class="loader"><div class="bar"></div></div></div>
\t\t\t\t</div>
\t\t\t\t<div class="circle"></div>
\t\t\t\t<div class="quarter">
\t\t\t\t\t<div class="svg q0"><svg x="0px" y="0px" width="86px" height="86px" viewBox="0 0 86 86"><path d="M83.88,29.72A42.83,42.83,0,1,0,86,43,43,43,0,0,0,83.88,29.72ZM43,58.64A15.69,15.69,0,0,1,27.36,43,15.64,15.64,0,1,1,52.18,55.64,15.52,15.52,0,0,1,43,58.64Z"/></svg></div>
\t\t\t\t\t<div class="svg q1"><svg x="0px" y="0px" width="86px" height="86px" viewBox="0 0 86 86"><path d="M57.87,38.17l26-8.45A43,43,0,0,0,43,0V27.36A15.65,15.65,0,0,1,57.87,38.17Z"/></svg></div>
\t\t\t\t\t<div class="svg q2"><svg x="0px" y="0px" width="86px" height="86px" viewBox="0 0 86 86"><path d="M83.88,29.72l-26,8.45a15.58,15.58,0,0,1-5.69,17.47L68.25,77.75a42.83,42.83,0,0,0,15.63-48Z"/></svg></div>
\t\t\t\t\t<div class="svg q3"><svg x="0px" y="0px" width="86px" height="86px" viewBox="0 0 86 86"><path d="M52.18,55.64a15.55,15.55,0,0,1-18.36,0L17.75,77.75a42.77,42.77,0,0,0,50.5,0Z"/></svg></div>
\t\t\t\t\t<div class="svg q4"><svg x="0px" y="0px" width="86px" height="86px" viewBox="0 0 86 86"><path d="M27.36,43a15.71,15.71,0,0,1,.77-4.83l-26-8.45a42.88,42.88,0,0,0,15.64,48L33.82,55.64A15.61,15.61,0,0,1,27.36,43Z"/></svg></div>
\t\t\t\t\t<div class="svg q5"><svg x="0px" y="0px" width="86px" height="86px" viewBox="0 0 86 86"><path d="M43,27.36V0A43,43,0,0,0,2.11,29.72l26,8.45A15.65,15.65,0,0,1,43,27.36Z"/></svg></div>
\t\t\t\t</div>
\t\t\t\t<canvas id="canvas-bt-bonus-` + h + `" width="86" height="86"></canvas>
\t\t\t\t<div class="icon">
\t\t\t\t\t<div class="icn-bck"></div>
\t\t\t\t</div>
\t\t\t\t<div class="hitzone"></div>
\t\t\t</div>`;
  }
  mc.append(g);
}
var nM = false;
var nN = false;
function nO() {
  mi.on(iF.down, function (h) {
    h.preventDefault();
    if (!nN) {
      gF(nQ);
    }
  });
  mo.on(iF.down, function (h) {
    h.preventDefault();
    if (!nN && n4) {
      gF(nV);
    }
  });
  mq.on(iF.down, function (h) {
    h.preventDefault();
    if (!nN) {
      gF(nX);
    }
  });
  mp.on(iF.down, function (h) {
    h.preventDefault();
    if (!nN) {
      gF(nY);
    }
  });
  mj.on(iF.down, function (h) {
    h.preventDefault();
    if (!nN) {
      gF(nW);
    }
  });
  mm.on(iF.down, function (h) {
    h.preventDefault();
    if (!nN) {
      gF(nZ);
    }
  });
  mn.on(iF.down, function (h) {
    h.preventDefault();
    if (!nN) {
      gF(o0);
    }
  });
  nP();
  qb();
}
function nP() {
  mg.on(iF.down, function (g) {
    g.preventDefault();
    if (!nN) {
      gF(nQ);
    }
  });
}
function nQ() {
  nN = true;
  (nM ? nS : nR)();
}
function nR() {
  l8();
  document.body.addEventListener(iF.down, nU);
  hr(mh, "open", "transform", nT, true);
  nM = true;
}
function nS() {
  l8();
  document.body.removeEventListener(iF.down, nU);
  hs(mh, "open", "transform", nT);
  nM = false;
}
function nT() {
  nN = false;
  if (n3) {
    la(nM ? "toolbar-open" : "toolbar");
  }
}
function nU(g) {
  if (!mh[0].contains(g.target)) {
    nQ();
  }
}
function nV() {
  pd();
}
function nW() {
  nn();
}
function nX() {
  rW();
}
function nY() {
  s2();
}
function nZ() {
  nn(jB);
}
function o0() {
  nn(jC);
}
function o1() {
  if (nA) {
    nA = false;
    for (var g = 0; g < n8; g++) {
      nq[g].baisser();
    }
  }
}
function o2(g) {
  if (!nA) {
    nA = true;
    for (var i = 0; i < n8; i++) {
      nq[i].remonte(i * 0.03, false, g);
    }
  }
}
function o3(g, h, j, k) {
  j = hl(j) ? 0 : j;
  var l = h.id;
  var l = ko[l];
  g.habiller(h, oR, l, j, k);
  if (n4) {
    g.showLoader();
    g.activerClick();
  } else if (!oK) {
    oK = true;
    q2().then(() => {
      o4();
    }).catch(m => {
      pW().then(() => {
        o4();
      }).catch(() => {
        pd();
        jv({
          error: "rebuilding audio",
          action: "reload"
        });
      });
    });
  }
}
function o4() {
  oK = false;
  q0();
  o5();
  p6();
  if (nE) {
    s4();
  }
  oq();
}
function o5() {
  for (var g = 0; g < n8; g++) {
    var h = nq[g];
    if (h.getBusy()) {
      h.activerClick();
    }
  }
}
function o6(g) {
  if (!(oL || nB || ((g = g).desactiverClick(), pE() < n2 ? ny.push(g) : og(g), (g = pH().length) !== 0 && g != ny.length))) {
    p8();
  }
}
function o7(g) {
  g.mute();
}
function o8(g) {
  g.unmute();
}
function o9() {
  for (var g = pH(), h = g.length, i = 0; i < h; i++) {
    var j = g[i];
    if (j.getSolo()) {
      j.unmute();
    } else {
      j.mute();
    }
  }
}
function oa(g) {
  for (var h = pH(), j = h.length, k = 0; k < j; k++) {
    var l = h[k];
    if (l.id != g.id) {
      l.setSolo(false);
      l.mute();
    } else {
      l.setSolo(true);
      l.unmute();
    }
  }
}
function ob() {
  for (var h = pH(), i = h.length, j = 0; j < i; j++) {
    var k = h[j];
    k.setSolo(false);
    nz.push(k);
  }
  if (pE() > n2) {
    oc();
  }
}
function oc() {
  for (var g = 0, h = nz.length; g < h; g++) {
    nz[g].unmute();
  }
  nz = [];
}
function od() {
  for (var g = pH(), h = g.length, i = 0, j = 0; j < h; j++) {
    if (g[j].getSolo()) {
      i++;
    }
  }
  return i;
}
function oe() {
  for (var g = pH(), h = g.length, i = 0; i < h; i++) {
    var j = g[i];
    nz.push(j);
  }
  if (pE() > n2) {
    oc();
  }
}
function of() {
  for (var g = pH(), h = g.length, i = 0; i < h; i++) {
    g[i].setSolo(false);
  }
}
function og(g, h, i) {
  oC(g.getPicto(), false);
  if (od() == 1 && g.getSolo()) {
    g.setSolo(false);
    oe();
  }
  g.deshabiller(h, oL);
  g.desactiverClick();
  g.stopSound(i);
  h = pH();
  if (h.length == 1 && (g = h[0]).getSolo() && iA && !iB) {
    g.setSolo(false);
  }
}
function oh(g) {
  for (var h = ny.length, j = oL ? 0.01 : 0.03, k = 0, l = h - 1; k < h; k++, l--) {
    og(ny[k], l * j, g);
  }
  ny = [];
}
function oi() {
  for (var g = 0, h = nx.length; g < h; g++) {
    if (nx[g].state != "hover") {
      nx[g].mode("regarde");
    }
  }
}
function oj() {
  for (var g = 0, h = nx.length; g < h; g++) {
    nx[g].mode("normal");
  }
}
function ok(g) {
  for (var h = 0, i = nx.length; h < i; h++) {
    var j = nx[h];
    if (j.hitTestPicto(g)) {
      j.rollover();
      j.pictoHoverId = g.id;
    } else if (j.pictoHoverId == g.id) {
      j.rollout();
      j.pictoHoverId = null;
    }
  }
}
function ol(g, h) {
  var j;
  var k = 0;
  var h = !!hm(h) && h;
  var l = nx.length;
  var m = false;
  if (!h && !n1) {
    for (k = 0; k < l; k++) {
      if (!m) {
        if ((j = nx[k]).hitTestPicto(g)) {
          m = true;
          om(j, g);
        }
      }
    }
  }
  if (m) {
    on();
    nx.length;
  } else {
    g.replacer();
  }
}
function om(g, h, i, j) {
  h.absorber(g);
  oC(h, true);
  o3(g, h, i, j);
  if (od() > 0) {
    g.mute();
  }
}
function on() {
  nx = [];
  for (var g = 0; g < n8; g++) {
    var h = nq[g];
    if (!h.getBusy()) {
      nx.push(h);
    }
  }
}
var oo = 0;
function op() {
  if (h1() - oo > 350) {
    pg();
    oo = h1();
  }
}
function oq() {
  mr.off().on(iF.down, function (h) {
    h.preventDefault();
    gF(op);
  }).addClass("enable");
}
function or() {
  mr.off().removeClass("enable");
}
var os = null;
function ot(g) {
  oM = true;
  os = nw[(oO = g) - 1];
  p7(true);
  g = ha(pF() / 1000, 2);
  g = (g = g - 0.5) < 0.5 ? 0 : g;
  TweenMax.delayedCall(g, ov);
}
function ou() {
  if (oM) {
    oz();
  }
}
function ov() {
  m9.addClass("visible");
  ma[0].offsetHeight;
  if (parseInt(mP.version) != 9) {
    ma.addClass("animateFadeIn");
  }
  if (!(nD || nB || mV)) {
    oF(me, true);
    oF(mf, true);
  }
}
function ow() {
  m9.removeClass();
  ma.removeClass();
  if (!(nD || nB || mV)) {
    m8.removeClass("pointerlock");
    oE(me, true);
    oE(mf, true);
  }
}
function ox() {
  if (i8 && !mV) {
    lG.addClass("bottomSlide");
  }
}
function oy() {
  m9.addClass("visible");
  m8.addClass("pointerlock");
  ma.removeClass();
  qe();
  ox();
  os.play();
  oL = !(oM = false);
}
function oz() {
  oB();
  if (os) {
    os.stop();
  }
  oA();
  oL = oM = false;
  oS = oO = 0;
  os = null;
}
function oA() {
  if (m9.hasClass("visible")) {
    ma.removeClass().addClass("show");
    ma[0].offsetHeight;
    if (lG.hasClass("bottomSlide")) {
      lG.removeClass("bottomSlide");
      m9.one(id, function () {
        ma.addClass("animateFadeOut").one(ie, ow);
      });
    } else {
      ma.addClass("animateFadeOut").one(ie, ow);
    }
  } else {
    ow();
  }
}
function oB() {
  TweenMax.killTweensOf(ov);
}
function oC(g, h) {
  for (var i = g.id + 1, j = 0; j < ks; j++) {
    nw[j].checkCode(i, h);
  }
}
function oD() {
  var h;
  var i;
  if (!(nD || nB)) {
    h = os.getId();
    i = "v" + (ir ? gZ("v") : mP.version) + "-bonus-complete";
    if ((lE.getItem(i) || 0) <= h && h < ks - 1) {
      lE.setItem(i, i = h + 1);
      nw[i].unlockme();
      jI();
    }
  }
}
function oE(g, h, i) {
  if (h) {
    hr(g, "fade", "opacity", i);
  } else {
    g.removeClass("fade");
  }
  g.removeClass("hide");
}
function oF(g, h, i) {
  if (h) {
    hr(g, "fade", "opacity", i);
  } else {
    g.removeClass("fade");
  }
  g.addClass("hide");
}
var oG;
var oH;
var oI;
var oJ;
var oK = false;
var oL = false;
var oM = false;
var oN = false;
var oO = 0;
var oP = false;
var oQ = true;
var oR = 0;
var oS = 0;
var oT = 0;
var oU = 0;
var oV = 0;
var oW = 0;
var oX = 0;
var oY = 0;
var oZ = 0;
var p0 = 0;
var p1 = 0;
var p2 = 0;
var p3 = 0;
var p4 = 0;
function p5() {
  oh();
  oc();
  if (nB) {
    nt.loop();
  }
  if (nD) {
    if (nv.waitForReloop && oS == os.nbLoop) {
      nv.waitForReloop = false;
      nv.reloop = true;
    }
    ns.loop();
  }
  if (n4) {
    p6();
  }
  if (nC) {
    ns.loop();
  }
}
function p6() {
  if (oL && oS == os.nbLoop && mP.bonusendloopA && !oQ) {
    oQ = true;
  }
  if (oR == 0) {
    jc();
  }
  p3 = h1();
  n4 = true;
  oW = 0;
  p2 = oQ ? oZ = 0 : (oZ = oY, 1);
  mQ.start(n7, oQ);
  oJ.prepare(kn.metro[0].snd);
  if (nD && ns.isLastLoop()) {
    oJ.onComplete(ns.loop);
  } else {
    oJ.onComplete(p5);
  }
  if (oM || oL) {
    p9();
  }
  if (!oL) {
    pa();
  }
  p7();
  oJ.play();
  oR++;
  oQ = !oQ;
}
function p7(g) {
  if (oM) {
    if (g) {
      if ((oQ || !mP.bonusloopA) && pE() > 600) {
        os.playPredrop(ha(pC() / 1000, 2));
      }
    } else if (!oQ) {
      os.playPredrop(0);
    }
  }
}
function p8() {
  oQ = !(n4 = false);
  p2 = oR = 0;
  mQ.stop();
  oz();
  oh(oL);
  oJ.stop();
  or();
  if (nC) {
    s5();
  }
  if (nD) {
    sa();
  }
  jd();
}
function p9() {
  var g = !mP.bonusloopA || oQ;
  if ((g = nD ? !!nv.waitForReloop || g : g) && !oL) {
    oy();
    pe();
  }
  if (oL && ++oS > os.nbLoop) {
    oD();
    oz();
  }
}
function pa() {
  for (var g = 0; g < n8; g++) {
    var h = nq[g];
    if (h.getBusy()) {
      if (h.waitOneLoop) {
        h.showLoader();
        h.waitOneLoop = false;
      } else {
        pb(h);
      }
    }
  }
}
function pb(g) {
  var h = p2 == 0 ? "sndA" : "sndB";
  g.sound.prepare(kn.sound[g.getAssetId()][h]);
  g.hideLoader();
  if (!(g.getMute() || g.getHide())) {
    g.mode("anime");
  }
  g.playSound();
}
function pc() {
  oG = h1();
  oH = pC();
  oT = pD();
  oU = oH * p1;
  oV = mP.bonusloopA ? ha(100 - (oV = pE(!oQ) * p1) / 2, 2) : oU;
  oW = Math.floor(oH * p0);
  mQ.render();
  ns.render();
  if (!hl(os)) {
    if (oL) {
      os.render();
    }
  }
  if (!oL) {
    mR.clear();
    for (var g = 0; g < n8; g++) {
      nq[g].draw();
    }
  }
}
function pd() {
  if (nB) {
    rZ();
  }
  qe();
  for (var g = pH(), h = 0, i = g.length; h < i; h++) {
    var j = g[h];
    ny.push(j);
  }
  h = 0;
  i = nw.length;
  for (; h < i; h++) {
    nw[h].reinit();
  }
  pZ(p8);
}
function pe() {
  for (var g = pH(), h = 0, i = g.length; h < i; h++) {
    g[h].hideLoader();
  }
}
var pf = false;
function pg() {
  (n5 ? (pf = false, pi) : (pf = true, ph))();
}
function ph() {
  if (!n5) {
    n5 = true;
    p4 = h1();
    lG.addClass("pause");
    pn();
    if (n3) {
      if (nM) {
        nS();
      }
      if (n4 && !pq && (mQ.pause(), TweenMax.pauseAll(), os)) {
        os.pause();
      }
      if (pq) {
        clearTimeout(s6);
      }
      oI.stop();
      qe();
      la("game-paused");
    }
  }
}
function pi() {
  if (n5 && (n5 = false, p3 += h1() - p4, lG.removeClass("pause"), po(), n3)) {
    if (n4 && !pq && (mQ.resume(), TweenMax.resumeAll(), os)) {
      os.resume();
    }
    if (pq) {
      sl();
    }
    oI.start();
    lb("game-paused");
    lc();
  }
}
function pj() {
  ph();
  oP = true;
  pN();
  TweenMax.killTweensOf(pl);
}
function pk() {
  q3 = !(oP = false);
  TweenMax.killTweensOf(pl);
  TweenMax.delayedCall(0.25, pl);
}
function pl() {
  pO();
  jz();
}
function pm() {
  pN();
  q4(function () {
    if (!pf) {
      pi();
    }
    pO();
  });
}
function pn() {
  pZ(() => {
    pp.suspend().then(() => {}).catch(g => {});
  });
}
function po() {
  pp.resume().then(() => {
    q2().then(() => {
      q0();
    }).catch(h => {
      pd();
    });
  }).catch(h => {
    pd();
  });
}
var pp;
var pq = false;
function pr() {
  if (!(n5 || pq)) {
    n4 = !(pq = true);
    oJ.stop();
    pt();
    nv.stop();
    ns.froze();
    oI.stop();
    mQ.stop(true);
    mR.saveImage();
    mR.showImage();
    if (hm(os)) {
      if (oM) {
        oz();
      } else if (oL) {
        oB();
        os.sound.stop();
        os.pause();
        oL = false;
      }
    }
  }
}
function ps(g) {
  var h;
  var i;
  if (!n5 && pq) {
    h = os;
    i = pq = false;
    nv.loop(g);
    oI.start();
    ns.unfroze();
    if (h) {
      if (oN) {
        if (os.getId() != h.getId()) {
          h.stop();
        } else {
          i = true;
        }
      } else {
        oz();
      }
    }
    if (oN) {
      oN = false;
      nv.waitForReloop = true;
      p6();
      if (!i) {
        ma[0].offsetHeight;
        ma.removeClass().addClass("show animateFadeOut");
      }
    } else {
      mR.showImage();
    }
  }
}
function pt() {
  for (var g = pH(), h = 0, i = g.length; h < i; h++) {
    oC(g[h].getPicto(), false);
    g[h].stopSound();
    g[h].deshabiller(0, true);
    g[h].desactiverClick();
  }
}
function pu(g, h) {
  oM = oN = true;
  (os = nw[oO = g]).prepareVideo(h);
  oS = h - 1;
}
function pv(g) {
  for (var h = pH(), j = nw[g - 1], k = [], l = 0, m = h.length; l < m; l++) {
    var p = h[l].getPicto().id;
    if (j.hasCode(p + 1)) {
      k.push(h[l].id);
    }
  }
  pw(k);
  pz(g);
}
function pw(g) {
  TweenMax.killTweensOf(py);
  var h = pH();
  if (h.length > 1) {
    for (var j = 0, k = h.length; j < k; j++) {
      var l = h[j];
      if (gM(g, l.id)) {
        if (l.getHide()) {
          l.stopHidingYourself();
        }
      } else {
        l.hideYourself();
      }
    }
  }
}
function px(g) {
  var h = pM();
  var g = g || 0;
  var g = ha((h1() - g) / 1000, 2);
  TweenMax.delayedCall(g < 1 ? 1 : 0.1, py, [h]);
}
function py(g) {
  for (var h = 0, i = g.length; h < i; h++) {
    g[h].stopHidingYourself();
  }
  pA();
}
function pz(g) {
  pA();
  for (var h = nw[g - 1].getCode(), j = h.length, k = 0, l = nr.length; k < l; k++) {
    for (var m = nr[k], p = 0; p < j; p++) {
      if (!gM(h, m.id + 1)) {
        m.hideYourself();
      }
    }
  }
}
function pA() {
  for (var g = 0, h = nr.length; g < h; g++) {
    nr[g].stopHiddingYourself();
  }
}
function pB(g, h) {
  g = g.indexOf("/") == -1 ? g.split("-").join("/") : g;
  var j;
  var k;
  var g = new Date(g);
  if (h) {
    h = g.getHours();
    j = g.getMinutes();
    k = g.getSeconds();
    h = h < 10 ? String("0" + h) : String(h);
    j = j < 10 ? String("0" + j) : String(j);
    k = k < 10 ? String("0" + k) : String(k);
    return String(h + ":" + j + ":" + k);
  } else {
    h = g.getDate();
    j = g.getMonth();
    k = g.getFullYear();
    g = h + " " + km("txt.months")[j] + " " + k;
    if (jU.toLowerCase() != "zh-cn" && jU.toLowerCase() != "zh-tw") {
      return g;
    } else {
      return k + " 年 " + (j + 1) + " 月 " + h + " 日";
    }
  }
}
function pC(g) {
  if (n4 || g) {
    return oG - p3;
  } else {
    return 0;
  }
}
function pD() {
  return n7 - pC();
}
function pE(g) {
  if (g = g !== undefined && g) {
    return n7 * 2 - (h1() - p3);
  } else {
    return n7 - (h1() - p3);
  }
}
function pF() {
  return pE(!!mP.bonusloopA && !oQ);
}
function pG(g) {
  var h = Math.floor(Math.random() * g.length);
  return g.splice(h, 1)[0];
}
function pH() {
  for (var g = [], h = 0; h < n8; h++) {
    var i = nq[h];
    if (i.getBusy()) {
      g.push(i);
    }
  }
  return g;
}
function pI() {
  for (var g = [], h = pH(), j = 0, k = h.length; j < k; j++) {
    var l = h[j];
    if (!l.getMute()) {
      g.push(l);
    }
  }
  return g;
}
function pJ() {
  for (var g = [], h = 0; h < n8; h++) {
    var i = nq[h];
    if (!i.getBusy()) {
      g.push(i);
    }
  }
  return g;
}
function pK() {
  for (var g = [], h = 0; h < kp; h++) {
    var i = nr[h];
    if (i.used) {
      g.push(i);
    }
  }
  return g;
}
function pL() {
  for (var g = [], h = 0; h < kp; h++) {
    var i = nr[h];
    if (!i.used) {
      g.push(i);
    }
  }
  return g;
}
function pM() {
  for (var g = [], h = pH(), j = 0, k = h.length; j < k; j++) {
    var l = h[j];
    if (l.getHide()) {
      g.push(l);
    }
  }
  return g;
}
function pN() {
  lJ.addClass("show");
  qe();
}
function pO() {
  lJ.removeClass("show");
}
var pP;
var pQ;
var pR = "";
var pS = 44100;
var pT = 1;
var pU = 0;
var pV = 0.015;
function pW() {
  return new Promise(function (g, h) {
    pY();
    pX();
    pp.resume().then(() => {
      g();
    }).catch(i => {
      h(i);
    });
  });
}
function pX() {
  (pp = new AudioContext()).onstatechange = q1;
  pp.hasOwnProperty("sampleRate");
  pp.hasOwnProperty("baseLatency");
  (pP = pp.createGain()).connect(pp.destination);
  pP.gain.value = pU;
}
function pY() {
  var g;
  var h;
  if (pp) {
    g = pp.createBuffer(2, pS / 2, pS);
    (h = pp.createBufferSource()).buffer = g;
    h.connect(pp.destination);
    h.start(0);
    h.disconnect();
    pp.close();
    pp = null;
  }
}
function pZ(g) {
  pP.gain.cancelScheduledValues(pp.currentTime);
  pP.gain.setTargetAtTime(pU, pp.currentTime, pV);
  // TOLOOK
  setTimeout(() => {
    pP.gain.value = pU;
    if (g) {
      g();
    }
  }, pV * 6000);
}
function q0(g) {
  pP.gain.cancelScheduledValues(pp.currentTime);
  pP.gain.setTargetAtTime(pT, pp.currentTime, pV);
  // TOLOOK
  setTimeout(() => {
    pP.gain.value = pT;
    if (g) {
      g();
    }
  }, pV * 6000);
}
function q1() {
  if (pp && pp.state != "running" && n3 && n4 && !n5 && !oP) {
    pj();
    pk();
  }
}
function q2() {
  return new Promise(function (g, h) {
    var i;
    if (pp && pp.currentTime) {
      i = pp.currentTime;
      // TOLOOK
      setTimeout(() => {
        if (i == pp.currentTime) {
          h(new Error("audioCtx.currentTime is stuck"));
        } else {
          g();
        }
      }, 150);
    } else {
      h(new Error("audioCtx or audioCtx.currentTime is null"));
    }
  });
}
var q3 = true;
function q4(g) {
  if (!q3) {
    if (g) {
      g();
    }
    return false;
  }
  q3 = false;
  var i;
  var j = new q9();
  j.setSilence();
  j.prepare(kn.sound[0].sndA);
  j.play();
  j.stop();
  if (nw.length) {
    i = 0;
    nw.forEach(function (k) {
      var l = k.video.currentTime;
      k.video.play().then(function () {
        k.video.pause();
        k.video.currentTime = l;
        if (++i == nw.length && g) {
          g();
        }
      }).catch(function (m) {
        jv({
          error: "force video play"
        });
        throw new Error(m);
      });
    });
  } else if (g) {
    g();
  }
}
function q5() {}
function q6() {}
function q7() {}
function q8() {
  return false;
}
function q9(g) {
  if (typeof pp != "object" || !pp) {
    throw new Error("Aucun AudioContxt n'a été déclaré");
  }
  var j = this;
  var k = null;
  var m = null;
  var p = null;
  var q = 0;
  var u = false;
  var v = false;
  var w = false;
  this.getMute = function () {
    return u;
  };
  this.getDuration = function () {
    if (m != null) {
      return m.duration;
    } else {
      return 0;
    }
  };
  this.getCurrentTime = function () {
    if (k != null && k.context != null) {
      return k.context.currentTime;
    } else {
      return 0;
    }
  };
  this.setSilence = function () {
    w = true;
  };
  this.setVolume = function (x) {
    p.gain.setValueAtTime(x, pp.currentTime);
  };
  this.onComplete = function (x) {
    k.onended = x;
    0;
  };
  this.prepare = function (x, y) {
    m = x;
    p = pp.createGain();
    (k = pp.createBufferSource()).buffer = m;
    x = y == 0 || u || w ? pU : pT;
    j.setVolume(x);
    k.connect(p);
    p.connect(pP);
    pP.connect(pp.destination);
  };
  this.play = function (x, y) {
    v = true;
    q = (q = (q = ha(x, 3) || 0) > j.getDuration() ? ha(j.getDuration(), 2) - 0.01 : q) < 0 ? 0 : q;
    k.start(0, q);
    if (!(y !== true || u || w)) {
      j.fadeIn();
    }
  };
  this.stop = function (x) {
    if (x || k == null || !v || w || u) {
      j.stopSource();
    } else {
      j.fadeOut(true);
    }
  };
  this.stopSource = function () {
    if (k != null && v) {
      k.stop(0);
      k.onended = null;
    }
    q = 0;
    p = k = null;
    v = u = false;
  };
  this.fadeOut = function (x) {
    p.gain.setTargetAtTime(pU, pp.currentTime, pV);
    if (x) {
      k.stop(pp.currentTime + pV * 6);
      k.onended = j.stopSource;
    }
  };
  this.fadeIn = function () {
    p.gain.setTargetAtTime(pT, pp.currentTime, pV);
  };
  this.mute = function () {
    if (k && !w) {
      j.fadeOut();
    }
    u = true;
  };
  this.unmute = function () {
    if (k && !w) {
      j.fadeIn();
    }
    u = false;
  };
}
var qa = [];
function qb() {
  document.body.addEventListener(iF.down, qc);
  document.body.addEventListener(iF.up, qd);
  document.body.addEventListener(iF.cancel, qd);
  document.body.addEventListener(iF.leave, qd);
  document.body.addEventListener(iF.move, qf);
}
function qc(g) {
  var h;
  var i;
  var j;
  if (qg(g)) {
    i = (h = "targetTouches" in g ? g.targetTouches[0] : g).target.parentNode.dataset.pictoNum;
    if (!((j = nr[i]).locked || (nF = h.pageX, nG = h.pageY, j.onDrag) || qh("pictoNum", i) != -1)) {
      g = {
        event: g,
        uniqueId: "identifier" in h ? h.identifier : h.pointerId,
        picto: j,
        pictoNum: i,
        dropForced: false
      };
      if (j.used) {
        j.usedTouchStart();
      } else {
        j.startDrag();
        j.moveDrag(h.pageX, h.pageY);
        oi();
      }
      qa.push(g);
    }
  }
}
function qd(g) {
  var i;
  if (qa.length && (g = qh("uniqueId", (g = "changedTouches" in g ? g.changedTouches[0] : g)["identifier" in g ? "identifier" : "pointerId"])) >= 0) {
    if ((i = qa[g].picto).used) {
      i.usedTouchEnd();
    } else {
      i.stopDrag();
      ol(i, qa[g].dropForced);
    }
    if (qa.length == 1) {
      oj();
    }
    qa.splice(g, 1);
  }
}
function qe() {
  for (; qa.length;) {
    var g = qa[0];
    g.dropForced = true;
    qd(g.event);
  }
}
function qf(g) {
  var h;
  if (qa.length && (h = qh("uniqueId", (g = "targetTouches" in g ? g.targetTouches[0] : g)["identifier" in g ? "identifier" : "pointerId"])) >= 0 && (h = qa[h].picto).onDrag) {
    h.moveDrag(g.pageX, g.pageY);
    ok(h);
    nF = qa[qa.length - 1].picto.pointerAxis.px;
    nG = qa[qa.length - 1].picto.pointerAxis.py;
  }
}
function qg(g) {
  return g.target.classList.contains("hitzone") && g.target.parentNode.classList.contains("picto");
}
function qh(g, h) {
  return qa.findIndex(i => i[g] == h);
}
var qi;
var qj;
var qk;
function ql(g, h) {
  var k;
  var l = this;
  var m = h.find("#picto" + g);
  var p = 0;
  var q = iC ? 1.1 : 1.2;
  this.id = g;
  this.used = false;
  this.locked = false;
  this.onDrag = false;
  this.polo = null;
  this.pointerAxis = {
    px: 0,
    py: 0
  };
  this.startDrag = function () {
    k = m[0].getBoundingClientRect();
    l.onDrag = true;
    m.removeClass("flashme");
    m.addClass("drag");
  };
  this.moveDrag = function (r, u) {
    l.setTranslation(r, u);
  };
  this.stopDrag = function () {
    l.onDrag = false;
    m.removeClass("drag");
  };
  this.replacer = function () {
    l.locked = true;
    m.addClass("replacer").one(ie, l.replacerFini);
  };
  this.absorber = function (r) {
    m.css({
      transform: "translate3d(0px, 0px, 0px)"
    });
    m.removeClass("replacer");
    m.addClass("griser");
    l.used = true;
    l.polo = r;
  };
  this.reactiver = function (r) {
    l.locked = true;
    r = !!hm(r) && r;
    m.removeClass("griser");
    l.polo = null;
    if (!r || nB || nD) {
      l.replacerFini();
    } else {
      m.addClass("flashme").one(ie, function (u) {
        $(u.target).removeClass("flashme");
        l.replacerFini();
      });
    }
  };
  this.replacerFini = function () {
    m.removeClass("replacer");
    m.css({
      transform: "translate3d(0px, 0px, 0px)"
    });
    l.used = false;
    l.locked = false;
    l.pointerAxis = {
      px: 0,
      py: 0
    };
  };
  this.usedTouchStart = function () {
    p = h1();
    pw([l.polo.id]);
  };
  this.usedTouchEnd = function () {
    px(p);
    p = 0;
  };
  this.checkusedTouchStart = function () {
    if (p != 0) {
      l.usedTouchEnd();
    }
  };
  this.hideYourself = function () {
    m.addClass("hideYourself");
  };
  this.stopHiddingYourself = function () {
    m.removeClass("hideYourself");
  };
  this.setTranslation = function (r, u) {
    l.pointerAxis = {
      px: r,
      py: u
    };
    r -= k.x;
    u -= k.y;
    r -= k.width / 2;
    u -= k.width / q;
    m.css({
      transform: "translate3d(" + r + "px, " + u + "px, 0px)"
    });
  };
}
function qm(a0, a1) {
  this.sound = new q9("polo" + a0);
  var a3;
  var a4;
  var a5;
  var a6;
  var a7;
  var a8;
  var a9;
  var aa;
  var ab;
  var ac;
  var ad;
  var ae;
  var af;
  var ag;
  var ah;
  var ai;
  var aj;
  var ak;
  var al;
  var am;
  var an;
  var ap;
  var aq;
  var ar;
  var as = this;
  var at = $("#box-polo").find(".polo[data-polo-id='" + a0 + "']");
  var au = $("#box-loader-polo").find(".zone[data-polo-id='" + a0 + "']");
  var av = au.find(".loader");
  var aw = au.find(".bar");
  var ax = false;
  var ay = a1;
  var az = "";
  var aA = false;
  var aB = kA.spritePolo;
  var aC = aL;
  var aD = 0.5;
  var aE = 0.3;
  var aF = 0;
  var aG = false;
  this.id = a0;
  this.state = "normal";
  var aH = at.find(".ctrl");
  function aI() {
    ay.globalAlpha = 1;
    ay.drawImage(aB, 0, 0, hM, hN, as.drawPoloX, as.drawPoloY, hz, hA);
  }
  function aJ(b7, b8) {
    ay.drawImage(aB, b7, b8, hQ, hR, as.drawPoloX, as.drawPoloY + hF, hB, hC);
  }
  function aK() {
    ay.globalAlpha = 1 - aD;
    ay.drawImage(aB, hM, 0, hM, hN, as.drawPoloX, as.drawPoloY, hz, hA);
  }
  function aL() {
    aI();
    aJ(hS, hT);
    aK();
  }
  function aM() {
    ay.globalAlpha = 1;
    ay.drawImage(a9, 0, 0, hO, hP, as.drawPoloX, as.drawPoloY, hD, hE);
  }
  function aN() {
    aM();
    ay.globalAlpha = 1 - aE;
    ay.drawImage(a9, hO * 2, 0, hO, hP, as.drawPoloX, as.drawPoloY, hD, hE);
  }
  function aO() {
    aM();
    aF = 1;
    ay.globalAlpha = aF;
    ay.drawImage(a9, hO * 2, 0, hO, hP, as.drawPoloX, as.drawPoloY, hD, hE);
  }
  function aP() {
    aM();
    var b7 = af ? 1 - aE : 0;
    aF = aF <= b7 ? b7 : ha(aF - 0.1, 2);
    ay.globalAlpha = aF;
    ay.drawImage(a9, hO * 2, 0, hO, hP, as.drawPoloX, as.drawPoloY, hD, hE);
    if (aF <= b7) {
      as.stopHidingYourselfComplete();
    }
  }
  function aQ() {
    if (aa) {
      aL();
    } else {
      as.anime();
      ay.globalAlpha = 1;
      ay.drawImage(a9, hO, 0, hO, hP, as.drawPoloX, as.drawPoloY, hD, hE);
      ay.drawImage(a9, an, ap + 1, hO, am - 1, as.drawPoloX + ak, as.drawPoloY + al + 1, hD, aj - 1);
    }
  }
  function aR() {
    var b7 = oG - aq;
    var b7 = Math.floor(b7 * aV);
    var b7 = ar - 1 < b7 ? ar - 1 : b7;
    aI();
    aJ(hS, aW[b7] * hR);
    aK();
    if (ar - 1 <= b7) {
      as.mode("normal");
    }
  }
  function aS() {
    var b7;
    var b8;
    if (ae) {
      aQ();
    } else {
      aI();
      b8 = as.getPupPos(hH, hI);
      b7 = as.getPupPos(hJ, hK);
      ay.drawImage(aB, 0, hZ, i0, i0, b8[0], b8[1], hG, hG);
      ay.drawImage(aB, 0, hZ, i0, i0, b7[0], b7[1], hG, hG);
      if ((b8 = (nG - i1.top) * iS) < as.drawPoloY + i3 * 90 * iS) {
        aJ(hU, hY);
      } else if (b8 >= as.drawPoloY + i3 * 90 * iS && b8 < as.drawPoloY + i3 * 130 * iS) {
        aJ(hU, hX);
      } else if (b8 >= as.drawPoloY + i3 * 170 * iS) {
        aJ(hU, hW);
      } else {
        aJ(hU, hV);
      }
    }
  }
  function aT() {
    aS();
    aK();
  }
  function aU() {
    aS();
  }
  this.$btcMute = at.find(".icon-game-bt-mute");
  this.$btcSolo = at.find(".icon-game-bt-solo");
  this.$btcStop = at.find(".icon-game-bt-delete");
  this.pictoHoverId = null;
  this.reinit = function () {
    aY();
    as.draw();
    aG = false;
    as.pictoHoverId = null;
    a3 = a4 = a5 = 0;
    az = a6 = a7 = a8 = a9 = null;
    aa = ab = ac = ad = ae = af = ag = ah = false;
  };
  this.getPicto = function () {
    return a6;
  };
  this.getAssetId = function () {
    return a7;
  };
  this.getMoment = function () {
    return a3;
  };
  this.getLoop = function () {
    return a4;
  };
  this.getEnabled = function () {
    return ab;
  };
  this.getBusy = function () {
    return ac;
  };
  this.getHover = function () {
    return aG;
  };
  this.getDeleting = function () {
    return ae;
  };
  this.getPlaying = function () {
    return ad;
  };
  this.getDiv = function () {
    return at;
  };
  this.getMute = function () {
    return af;
  };
  this.getHide = function () {
    return ah;
  };
  this.getSolo = function () {
    return ag;
  };
  this.setSolo = function (b7) {
    if (ag = b7) {
      as.$btcSolo.addClass("light");
    } else {
      as.$btcSolo.removeClass("light");
    }
  };
  this.setLoop = function (b7) {
    a4 = b7;
  };
  this.setMoment = function (b7) {
    a3 = b7;
  };
  this.setPlaying = function (b7) {
    ad = b7;
  };
  this.habiller = function (b7, b8, b9, ba, bb) {
    as.checkState();
    a7 = (a6 = b7).id;
    a3 = b8;
    a8 = b9.imgData;
    a9 = b9.imgSprite;
    ai = b9.headHeight;
    am = b9.headHeight * iR;
    az = b9.color;
    a5 = a8.length;
    ac = true;
    as.resize();
    aw.css({
      "background-color": az
    });
    if (aA) {
      as.mode("waiting");
    } else {
      aa = true;
      TweenMax.delayedCall(ba, function () {
        as.rebond(bb);
      });
    }
    nu.xmlAction("append", as);
  };
  this.checkState = function () {
    if (!(!ae || aA)) {
      TweenMax.killTweensOf(as);
      as.remonte(0, true, false);
    }
  };
  this.deshabiller = function (b7, b8) {
    if (aa) {
      aa = false;
      TweenMax.killTweensOf(as.rebond);
      TweenMax.killTweensOf(as.rebond2);
    }
    ac = !(ae = true);
    TweenMax.to(as, b8 ? 0 : 0.3, {
      drawPoloY: hw,
      ease: Quint.easeIn,
      onComplete: as.remonte,
      onCompleteParams: [0, true, b8],
      delay: b7,
      overwrite: true
    });
    this.hideLoader();
    nu.xmlAction("remove", as);
  };
  this.baisser = function () {
    as.drawPoloY = hw;
  };
  this.remonte = function (b7, b8, b9) {
    if ((aA = true) === b8) {
      b8 = !nD && !nB && !n0;
      a6.reactiver(b8);
      as.reinit();
      on();
    }
    as.mode("normal");
    b8 = h9(hv, hv + hx);
    TweenMax.to(as, b9 ? 0 : 0.4, {
      drawPoloY: b8,
      ease: Back.easeOut,
      delay: b9 ? 0 : b7,
      overwrite: true,
      onComplete: function () {
        aA = false;
      }
    });
  };
  this.rebond = function (b7) {
    var b8 = as.drawPoloY - hy;
    var b9 = ad ? "anime" : "waiting";
    var ba = b7 ? 0 : 0.1;
    var b9 = as.getMute() ? "mute" : b9;
    as.mode(b9);
    TweenMax.to(as, ba, {
      drawPoloY: b8,
      ease: Quint.easeOut,
      onComplete: as.rebond2,
      onCompleteParams: [b7],
      overwrite: true
    });
    aa = false;
  };
  this.rebond2 = function (b7) {
    var b8 = as.drawPoloY + hy;
    TweenMax.to(as, b7 ? 0 : 0.2, {
      drawPoloY: b8,
      ease: Back.easeOut,
      overwrite: true
    });
  };
  this.showLoader = function () {
    ax = true;
    av.addClass("show");
    aw.css({
      "animation-duration": ha(pE() / 1000, 2) + "s"
    });
    aw.addClass("progress");
  };
  this.hideLoader = function () {
    if (ax) {
      ax = false;
      av.removeClass("show");
      aw.removeClass("progress");
    }
  };
  this.hideYourself = function () {
    if (ad || ac) {
      ah = true;
      aF = af ? 1 - aE : aF;
      as.mode("hide");
    }
  };
  this.stopHidingYourself = function () {
    if (ad || ac) {
      as.mode("unhide");
    }
  };
  this.stopHidingYourselfComplete = function () {
    ah = false;
    if (af) {
      as.mode("mute");
    } else if (ad) {
      as.mode("anime");
    } else {
      as.mode("waiting");
    }
  };
  this.drawPoloX = 0;
  this.drawPoloY = hw;
  this.resize = function () {
    aj = ai * i3 * iS;
    as.drawPoloX = i6 * as.id * iS;
    at[0].style.left = i6 * as.id + i7.polo.overlapW * i3 / 2 + "px";
    at[0].style.width = i4 - i7.polo.overlapW * i3 + "px";
    au[0].style.left = i6 * as.id + i7.polo.overlapW * i3 / 2 + "px";
    au[0].style.width = i4 - i7.polo.overlapW * i3 + "px";
  };
  this.draw = function () {
    aC();
  };
  this.mode = function (b7) {
    if (b7 != as.state) {
      TweenMax.killTweensOf(aZ);
      as.state = b7;
      switch (as.state) {
        case "normal":
          aC = aL;
          aY();
          break;
        case "cligne":
          aC = aR;
          break;
        case "regarde":
          aC = aT;
          break;
        case "hover":
          aC = aU;
          break;
        case "waiting":
          aC = aM;
          break;
        case "anime":
          aC = aQ;
          break;
        case "mute":
          aC = aN;
          break;
        case "hide":
          aC = aO;
          break;
        case "unhide":
          aC = aP;
      }
    }
  };
  this.anime = function () {
    var b7 = oW;
    if (oQ && a5 == oX) {
      b7 += oY;
    }
    an = a8[b7 = (b7 = a5 - 1 <= b7 ? a5 - 1 : b7) < 0 ? 0 : b7][0] * iR;
    ap = a8[b7][1] * iR;
    ak = a8[b7][2] * i3 * iS;
    al = a8[b7][3] * i3 * iS;
  };
  this.getPupPos = function (b7, b8) {
    var b9 = (nF - i1.left) * iS;
    var ba = (nG - i1.top) * iS;
    var b9 = b9 - b7 - as.drawPoloX - hG / 2;
    var ba = ba - b8 - as.drawPoloY - hG / 2;
    var ba = Math.atan2(ba, b9);
    return [hL * Math.cos(ba) + (as.drawPoloX + b7), hL * Math.sin(ba) + (as.drawPoloY + b8)];
  };
  var aV = 0;
  var aW = [];
  var aX = [[0, 1, 2, 2, 1, 0], [0, 3, 4, 5, 6, 7, 8, 0], [0, 3, 4, 4, 3, 0], [0, 1, 2, 2, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1, 2, 2, 2, 2, 0], [0, 1, 2, 2, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 2, 2, 9, 9, 9, 9, 2, 2, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0], [0, 1, 2, 2, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 2, 2, 2, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1, 2, 2, 10, 10, 10, 10, 10, 2, 2, 0]];
  function aY() {
    var b7 = h8(7) + 2;
    TweenMax.delayedCall(b7, aZ);
  }
  function aZ() {
    aq = h1();
    var b7 = h8(aX.length - 1);
    aW = aX[b7];
    ar = aW.length;
    aV = ar / (ar * 36);
    as.mode("cligne");
  }
  var b0 = 0;
  var b1 = 0;
  var b2 = 0;
  var b3 = 0;
  function b4(b7) {
    if (hm(b7)) {
      b7.preventDefault();
    }
    if (ag) {
      if (od() == 1) {
        oe();
      } else {
        as.mute();
      }
      ag = false;
    } else {
      as.switchMute();
    }
    if (!(af || ag)) {
      of();
    }
  }
  function b5(b7) {
    if (hm(b7)) {
      b7.preventDefault();
    }
    o6(as);
  }
  function b6(b7) {
    if (hm(b7)) {
      b7.preventDefault();
    }
    (ag ? (ag = false, ob) : (ag = true, oa))(as);
  }
  this.activerClick = function () {
    if (!ab) {
      ab = true;
      at[0].addEventListener(iF.down, as.touchStart);
      as.activerCtrl();
    }
  };
  this.desactiverClick = function () {
    if (ab) {
      ab = false;
      TweenMax.killTweensOf(as.touchLong);
      at[0].removeEventListener(iF.down, as.touchStart);
      at[0].removeEventListener(iF.move, as.touchMove);
      at[0].removeEventListener(iF.up, as.touchEnd);
      as.desactiverCtrl();
    }
  };
  this.touchStart = function (b7) {
    b7.preventDefault();
    0;
    var b8 = "targetTouches" in b7 ? b7.targetTouches[0] : b7;
    b0 = b1 = b8.pageX;
    b2 = b3 = b8.pageY;
    TweenMax.delayedCall(0.25, as.touchLong, [b7]);
    at[0].removeEventListener(iF.down, as.touchStart);
    at[0].addEventListener(iF.move, as.touchMove);
    at[0].addEventListener(iF.up, as.touchEnd);
  };
  this.touchMove = function (b7) {
    b7.preventDefault();
    var b8 = ("targetTouches" in b7);
    var b7 = b8 ? b7.targetTouches[0] : b7;
    var b9 = b8 ? 60 : 20;
    b1 = b7.pageX;
    b3 = b7.pageY;
    if (b2 + (b8 ? 60 : 20) < b3 && Math.abs(b1 - b0) < b9) {
      TweenMax.killTweensOf(as.touchLong);
      o6(as);
    }
  };
  this.touchLong = function (b7) {
    b7.preventDefault();
    TweenMax.killTweensOf(as.touchLong);
    ag = true;
    o9();
    as.$btcSolo.addClass("light");
  };
  this.touchEnd = function (b7) {
    b7.preventDefault();
    TweenMax.killTweensOf(as.touchLong);
    at[0].removeEventListener(iF.move, as.touchMove);
    at[0].removeEventListener(iF.up, as.touchEnd);
    at[0].addEventListener(iF.down, as.touchStart);
    if (ag) {
      if (od() == 1) {
        oe();
      } else {
        as.mute();
      }
      ag = false;
      as.$btcSolo.removeClass("light");
    } else {
      as.switchMute();
    }
  };
  this.activerCtrl = function () {
    aH.addClass("visible").on(iF.down, hu);
    as.$btcMute.on(iF.down, b4);
    as.$btcSolo.on(iF.down, b6);
    as.$btcStop.on(iF.down, b5);
  };
  this.desactiverCtrl = function () {
    aH.removeClass("visible").off();
    as.$btcMute.off().removeClass("light");
    as.$btcSolo.off().removeClass("light");
    as.$btcStop.off().removeClass("light");
  };
  this.playSound = function () {
    ad = true;
    this.sound.play();
    a4++;
  };
  this.stopSound = function (b7) {
    ad = false;
    this.sound.stop(b7);
  };
  this.mute = function () {
    af = true;
    if (!ah) {
      as.mode("mute");
      as.$btcMute.addClass("light");
    }
    as.sound.mute();
    nu.xmlAction("mute", as);
  };
  this.unmute = function () {
    af = false;
    if (!ah) {
      if (ad) {
        this.mode("anime");
      } else {
        this.mode("waiting");
      }
      as.$btcMute.removeClass("light");
    }
    this.sound.unmute();
    nu.xmlAction("unmute", as);
  };
  this.switchMute = function () {
    if (af) {
      as.unmute();
    } else {
      as.mute();
    }
  };
  this.hitTest = function (b7, b8) {
    var b7 = (b7 - i1.left) * iS;
    var b8 = (b8 - i1.top) * iS;
    var b9 = i5 * iS / 2;
    return b7 > as.drawPoloX + b9 && b7 < as.drawPoloX + hz - b9 && b8 > as.drawPoloY && b8 < i1.height * iS;
  };
  this.hitTestPicto = function (b7) {
    return !ac && !ae && as.hitTest(Math.round(b7.pointerAxis.px), Math.round(b7.pointerAxis.py));
  };
  this.rollover = function () {
    if (!aG) {
      aG = true;
      as.mode("hover");
    }
  };
  this.rollout = function (b7) {
    if (!!hm(b7) && b7) {
      aG = false;
      as.mode("normal");
    } else if (aG) {
      aG = false;
      as.mode("regarde");
    }
  };
  this.resize();
  this.reinit();
}
var qn = null;
var qo = null;
var qp = null;
var qq = 0;
var qr = {};
function qs() {
  le();
  if ($(this).hasClass("active")) {
    qn.$scrollbox.scrollTop(0);
  } else {
    qt($(this).attr("id").replace("tab-", ""));
  }
}
function qt(g) {
  le();
  qn.$scrollbox.find(".spinner-box").removeClass("spin");
  qn.$scrollbox.find(".spinner-box").hide();
  qn.$boxinfo.empty();
  qn.$pop.find(".tabbox .tab").removeClass("active");
  (qi = qn.$pop.find(".tabbox .tab#tab-" + g)).addClass("active");
  qw();
  qn.$pop.find(".pagebox").removeClass("show");
  (qk = qn.$pop.find(".pagebox#box-" + g)).addClass("show");
  switch (g) {
    case "latest":
      r1();
      break;
    case "top50":
      qv("day");
      break;
    case "search":
      ri();
      qv("name");
      break;
    case "mixlist":
      qv("mymix");
      break;
    case "mods":
      rE();
      break;
    case "modbox":
      rO();
  }
}
function qu() {
  le();
  if ($(this).hasClass("active")) {
    qn.$scrollbox.scrollTop(0);
  } else {
    qv($(this).attr("id").replace("bt-", ""));
  }
}
function qv(g) {
  le();
  qn.$pop.find(".tab-filter .bt").removeClass("active");
  (qj = qn.$pop.find(".tab-filter .bt#bt-" + g)).addClass("active");
  if (["day", "week", "month", "year"].includes(g)) {
    qw();
    r6();
  } else if (["name", "title", "dedi"].includes(g)) {
    qw();
    rd();
  } else if (["mymix", "myfav"].includes(g)) {
    qw();
    rk();
  }
}
function qw() {
  if (qn && qn.$boxline) {
    qn.$scrollbox.scrollTop(0);
    qE(qo);
    qy();
    qn.$boxline.empty();
    qn.$boxinfo.empty();
  }
}
function qx() {
  qn.$boxline.find(".line").on(iF.down, qH);
  qn.$boxline.find(".line").on(iF.up, qI);
  qn.$boxline.find(".box-action").on(iF.down, hu);
  qn.$boxline.find(".box-action").on(iF.up, hu);
  qn.bindLines();
}
function qy() {
  qn.$boxline.find(".line").off();
  qn.$boxline.find(".line .box-action").off();
  qn.$boxline.find(".line .box-action .bt").off();
}
function qz(g) {
  g.off();
  g.find(".box-action").off();
  g.find(".box-action .bt").off();
}
function qA() {
  if (qi && qi.length) {
    return qi.attr("id").replace("tab-", "");
  } else {
    return "";
  }
}
function qB() {
  if (qk.find(".tab-filter").length && qj && qj.length) {
    return qj.attr("id").replace("bt-", "");
  } else {
    return "";
  }
}
function qC(g) {
  var g = $(g);
  var i = qo !== null ? qo.index() : -1;
  qD(qo);
  if (i != g.index()) {
    qD(g);
  }
}
function qD(g) {
  if (g !== null) {
    if (g.hasClass("animateOpen")) {
      g.removeClass("animateOpen").addClass("animateClose").one(ie, function () {
        g.removeClass("animateClose");
      });
      qo = null;
      lb("playlist-line-open");
      la("playlist-all", g);
    } else {
      g.removeClass("animateClose").addClass("animateOpen");
      qo = g;
      la("playlist-line-open");
    }
  }
}
function qE(g) {
  if (g !== null) {
    g.removeClass("animateOpen").removeClass("animateClose");
    qo = null;
  }
}
function qF(g) {
  g.addClass("spin");
  g.find("svg use").attr("xlink:href", "#ic-loader-mini");
  qn.$scrollbox.find(".spinner-box").find("svg use").attr("xlink:href", "#ic-loader");
  qn.$scrollbox.find(".spinner-box").addClass("spin");
  qn.$scrollbox.find(".spinner-box").show();
}
function qG(g, h) {
  g.removeClass("spin");
  g.find("svg use").attr("xlink:href", h);
  qn.$scrollbox.find(".spinner-box").removeClass("spin");
  qn.$scrollbox.find(".spinner-box").hide();
}
function qH(g) {
  var h = $(g.currentTarget).parent().parent();
  qq = h.scrollTop();
  qp = $(g.currentTarget);
}
function qI(g) {
  if (qp && $(g.currentTarget).parent().parent().scrollTop() == qq && qp.attr("data-key") == $(g.currentTarget).attr("data-key")) {
    qC(g.currentTarget);
  }
  qp = null;
}
function qJ(g, h, i) {
  var k;
  if (hl(qr[i])) {
    return !h || g;
  } else {
    g = g * 60;
    k = new Date();
    i = qr[i].getTime() - k.getTime();
    k = Math.round(Math.abs(i / 1000));
    if (h === true) {
      return h0((g - k) * 1000);
    } else {
      return g <= k;
    }
  }
}
function qK(g, h, j) {
  for (var k = "", l = [], m = 0, p = g.length; m < p; m++) {
    var q = g[m];
    l.push(q);
    k += h(q, m, j);
  }
  return [k, l];
}
var qL = null;
var qM = null;
var qN = false;
var qO = {
  latest: [],
  search: [],
  top50: {
    day: [],
    week: [],
    month: [],
    year: []
  },
  totalNbMix: 0
};
function qP() {
  lN.$pop = lN.find(".poplist");
  lN.$bck = lN.find(".bac");
  lN.$bck.fadeIn = function () {
    this.addClass("animateFadeIn");
  };
  lN.$bck.fadeOut = function () {
    this.addClass("animateFadeOut").one(ie, function (h) {
      $(h.target).removeClass("animateFadeIn animateFadeOut");
    });
  };
  lN.$scrollbox = lN.$pop.find(".scrollbox");
  lN.$boxinfo = lN.$scrollbox.find(".boxinfo");
  lN.$boxline = lN.$scrollbox.find(".boxline");
  lN.find(".tabbox .tab").on(iF.down, qs);
  lN.find(".pagebox .tab-filter .bt").on(iF.down, qu);
  lN.find("form[name=form-search-mix]").on("submit", rd);
  lN.find(".pagebox#box-search .bt.search").on(iF.down, rd);
  lN.bindLines = function () {
    lN.$boxline.find(".bt.watch").on(iF.down, sd);
    lN.$boxline.find(".bt.share").on(iF.down, qU);
    lN.$boxline.find(".bt.link").on(iF.down, qV);
    lN.$boxline.find(".bt.fav").on(iF.down, qW);
    lN.$boxline.find(".bt.delete").on(iF.down, qX);
    lN.$boxline.find(".bt.download").on("click", qZ);
  };
  lN.close = qS;
  lQ = $("#tab-latest");
  lR = $("#tab-top50");
  lS = $("#tab-search");
  lT = $("#tab-mixlist");
}
function qQ(g, h, i) {
  qn = lN;
  pN();
  qN = i === true;
  lN.addClass("show");
  lN.$bck.fadeIn();
  if (h) {
    qR();
  } else {
    lN.$pop.addClass("open").one(ie, qR);
  }
  if (g == "mixlist" || !iu || li()) {
    delete qr.mymix;
    qt("mixlist");
  } else {
    qt(g == "top50" ? "top50" : "latest");
  }
}
function qR() {
  pO();
  m0.removeSpinner();
  lN.$pop.addClass("opened");
  lN.$bck.on(iF.down, lN.close);
  lN.find(".pagebox#box-search input#input-search").on(iF.down, function (h) {
    h.stopPropagation();
    $(this).parent().find(".input-loader").addClass("spin").show();
  });
  lN.find(".pagebox#box-search input#input-search").on("input", function () {
    $(this).parent().find(".input-loader").removeClass("spin").hide();
  });
  lN.find(".pagebox#box-search input#input-search").on("focus", function () {
    $(this).parent().find(".input-loader").removeClass("spin").hide();
  });
  lN.find(".pagebox#box-search input#input-search").on("blur", function () {
    $(this).parent().find(".input-loader").removeClass("spin").hide();
  });
}
function qS() {
  qn = null;
  kZ = [];
  l8();
  pN();
  lN.$bck.off();
  lN.$bck.fadeOut();
  lN.find(".pagebox#box-search input#input-search").off();
  lN.$pop.removeClass("opened").addClass("close").one(ie, qT);
}
function qT() {
  qE(qo);
  lN.$pop.removeClass("open close");
  lN.removeClass("show");
  $(".poplist .tab", lN).removeClass("active");
  qj = qk = qi = null;
  le();
  pO();
  la("home");
}
function qU(g) {
  g.stopPropagation();
  var g = $(this);
  var h = g.parent().parent().attr("data-key").replace("mix-", "");
  if (hm(qM = ru(h))) {
    kb("global", g);
  } else {
    mt.open(km("pop.notFoundText"), km("pop.notFoundTitle"), [km("bt.ok")], []);
    kT.reset();
  }
}
function qV(g) {
  g.stopPropagation();
  var g = $(this);
  var i = g.parent().parent().attr("data-key").replace("mix-", "");
  if (hm(qM = ru(i))) {
    kb("clipboard", g);
  } else {
    mt.open(km("pop.notFoundText"), km("pop.notFoundTitle"), [km("bt.ok")], []);
    kT.reset();
  }
}
function qW(g) {
  g.stopPropagation();
  var g = $(this).parent().parent();
  var i = g.attr("data-key");
  var j = i.replace("mix-", "");
  var i = i.replace("mix-", "fav-");
  var j = ru(j);
  if (hm(j)) {
    if (rp(j)) {
      g.removeClass("isfavoris");
      mT.deleteMix(i);
      if (qB() == "myfav") {
        qz(g);
        qE(g);
        g.remove();
        la("playlist-all");
      }
    } else {
      g.addClass("isfavoris");
      mT.saveMix(j, true);
      lT.find("svg use").attr("xlink:href", "#ic-rate-mini");
      lT.removeClass("animateFavIcon").addClass("animateFavIcon").one(ie, function () {
        lT.find("svg use").attr("xlink:href", "#ic-mixlist-mini");
        lT.removeClass("animateFavIcon");
      });
    }
  } else {
    jv({
      error: km("pop.notFoundTitle")
    });
  }
}
function qX(g) {
  g.stopPropagation();
  var i = $(this);
  var j = i.parent().parent();
  var k = ru(j.attr("data-key").replace("mix-", ""));
  kT.add(i);
  if (!k.online || iu) {
    mt.open(km("pop.deleteText"), km("pop.deleteTitle"), [km("bt.yes"), km("bt.no")], [function () {
      qY(i, j, k);
      mt.close();
    }, function () {
      pO();
      kT.reset();
      mt.close();
    }]);
  } else {
    mt.open(km("pop.noNetworkText"), km("pop.noNetworkTitle"), [km("bt.ok")], [function () {
      pO();
      kT.reset();
      mt.close();
    }]);
  }
}
function qY(g, h, i) {
  var j = {
    xsVit: "delete_db_failed",
    gLbIB: "gRTze",
    BJveD: "fLTUZ",
    CbfND: "delete_db_error",
    vEqTg: "fav-",
    qdUFC: "pop.deleteBugText"
  };
  if (mT.deleteMix("mix-" + i.id)) {
    mT.deleteMix(j.vEqTg + i.id);
    qz(h);
    qE(h);
    h.remove();
    if ((h = mT.getMixlist().length) <= 5) {
      lN.$scrollbox.scrollTop(0);
    }
    if (h == 0) {
      lN.$boxinfo.html(km("txt.mixlistEmpty"));
    }
    la("playlist-all");
  } else {
    mt.open(km(j.qdUFC), km("pop.notFoundTitle"), [km("bt.ok")], []);
  }
  pO();
  kT.reset();
  if (i.online) {
    $.ajax({
      type: "POST",
      url: im + "ph4/delete-mix-db.php",
      data: {
        uuid: iV(),
        mix: i
      },
      dataType: "json",
      crossdomain: true,
      success: function (k) {
        if (k.state == "success") {
          sF("mix", "delete_db", i.id);
        } else {
          sF("mix", j.xsVit, i.id);
        }
      },
      error: function (k) {
        if (j.gLbIB === j.BJveD) {
          j.addClass("animateFadeOut").one(k, l);
        } else {
          sF("mix", j.CbfND, i.id);
        }
      }
    });
  }
}
function qZ(g) {
  g.stopPropagation();
  var g = $(this);
  var i = g.parent().parent().attr("data-key").replace("mix-", "");
  if (hm(qM = ru(i))) {
    if (j6()) {
      k2();
    } else {
      kb("download", g);
    }
  } else {
    mt.open(km("pop.notFoundText"), km("pop.notFoundTitle"), [km("bt.ok")], [function () {
      kT.reset();
      mt.close();
    }]);
  }
}
var r0 = false;
function r1() {
  if (r0) {
    return false;
  }
  if (!iu) {
    lN.$scrollbox.find(".spinner-box").removeClass("spin").show().find("svg use").attr("xlink:href", "#ic-network-off");
    lN.$boxinfo.html(km("pop.noNetworkText"));
    return false;
  }
  if (!qJ(1, false, "latest")) {
    r4();
    return false;
  }
  r0 = true;
  qF(lQ);
  var g = {
    t: "live",
    v: mP.version
  };
  $.ajax({
    type: "GET",
    url: im + "ph4/get-live-top.php",
    data: g,
    dataType: "json",
    crossdomain: true,
    success: function (h) {
      r2();
      (h.state == "success" ? (qr.latest = new Date(), qO.totalNbMix = h.total, qO.latest = h.mixlist, qO.latest.map(function (i) {
        i.mymix = false;
        i.dateQuery = h.created;
      }), r4) : r3)();
    },
    error: function (h) {
      r3();
    }
  });
}
function r2() {
  r0 = false;
  qG(lQ, "#ic-live-mini");
}
function r3() {
  r2();
  if (lN.isOpen() && lQ.hasClass("active")) {
    mt.open(km("pop.noCoServerText"), km("pop.noCoServerTitle"), [km("bt.ok")]);
  }
}
function r4() {
  var h;
  if (lN.isOpen() && lQ.hasClass("active")) {
    h = qK(qO.latest, rn, "latest");
    lN.$boxline.html(h[0]);
    if (qO.totalNbMix > 0) {
      lN.$boxinfo.html(km("txt.latestMixInfo").replace("%{mix_total}", hb(qO.totalNbMix)).replace("%{version_name}", mP.name));
    } else {
      lN.$boxinfo.html(km("txt.latestMixInfo").split("<br>")[0]);
    }
    qx();
    la("playlist-all");
  }
}
var r5 = false;
function r6() {
  return !r5 && (iu ? qJ(10, false, "top50") ? (r5 = true, qF(lR), void $.ajax({
    type: "GET",
    url: im + "ph4/get-live-top.php",
    data: {
      t: "top",
      v: mP.version
    },
    dataType: "json",
    crossdomain: true,
    success: function (h) {
      if (h.state == "success") {
        r7();
        qO.top50 = {
          day: h.listDay,
          week: h.listWeek,
          month: h.listMonth,
          year: h.listYear
        };
        qO.top50.day.map(i => i.mymix = false);
        qO.top50.week.map(i => i.mymix = false);
        qO.top50.month.map(i => i.mymix = false);
        qO.top50.year.map(i => i.mymix = false);
        r9();
        qG(lR, "#ic-trophy-mini");
      } else {
        r8();
      }
    },
    error: function (h) {
      r8();
    }
  })) : (r9(), false) : (lN.$scrollbox.find(".spinner-box").removeClass("spin").show().find("svg use").attr("xlink:href", "#ic-network-off"), lN.$boxinfo.html(km("pop.noNetworkText")), false));
}
function r7() {
  r5 = false;
  qG(lR, "#ic-trophy-mini");
  qr.top50 = new Date();
}
function r8() {
  r7();
  if (lN.isOpen() && lR.hasClass("active")) {
    lN.$boxinfo.html(km("pop.noCoServerText"));
  }
}
function r9() {
  var h;
  var i;
  if (lN.isOpen() && lR.hasClass("active")) {
    i = [];
    if ((h = qB()) == "day") {
      i = qK(qO.top50.day, rm);
      lN.$boxline.html(i[0]);
      qO.top50.day = i[1];
    } else if (h == "week") {
      i = qK(qO.top50.week, rm);
      lN.$boxline.html(i[0]);
      qO.top50.week = i[1];
    } else if (h == "month") {
      i = qK(qO.top50.month, rm);
      lN.$boxline.html(i[0]);
      qO.top50.month = i[1];
    } else if (h == "year") {
      i = qK(qO.top50.year, rm);
      lN.$boxline.html(i[0]);
      qO.top50.year = i[1];
    }
    lN.$boxinfo.html(km("txt.top50Info"));
    qx();
    la("playlist-all");
  }
}
var ra = false;
var rb = "";
var rc = "";
function rd() {
  le();
  if (ra) {
    return false;
  }
  if (!iu) {
    lN.$scrollbox.find(".spinner-box").removeClass("spin").show().find("svg use").attr("xlink:href", "#ic-network-off");
  }
  var h = lN.$pop.find("form #input-search");
  var j = qB();
  var k = h.val().substr(0, 26);
  var l = (k = he(k)).split(" ").join("");
  var m = gJ.search;
  if (l == "") {
    rc = "";
    rj();
  } else if (!(rc == k.toLowerCase() && rb == j)) {
    if (m.test(l)) {
      jY(h);
    } else if (iu) {
      rc = k.toLowerCase();
      rb = j;
      qF(lS);
      kT.add(lN.$pop.find(".bt.search"));
      rf(k, j);
    } else {
      mt.open(km("pop.noNetworkText"), km("pop.noNetworkTitle"), [km("bt.ok")]);
    }
  }
  la("playlist-all");
}
function re() {
  var h;
  if (lS.hasClass("active")) {
    h = qK(qO.search, rn, "search");
    lN.$boxline.html(h[0]);
    qx();
    la("playlist-all");
  }
}
function rf(g, h) {
  var i = {
    FaqBG: function (k, l) {
      return k === l;
    },
    jiANM: "OYRRQ",
    ZtdMr: "CJxcN",
    aEapm: "txt.result.one",
    LUomE: function (k) {
      return k();
    },
    uCTuF: function (k, l) {
      return k(l);
    },
    akqgz: function (k, l) {
      return k + l;
    },
    ImJmZ: "json"
  };
  var j = {
    v: mP.version
  };
  j.uuid = iV();
  j.str = i.uCTuF(encodeURIComponent, g);
  j.f = encodeURIComponent(h);
  $("#mixlist .poplist #list-search .spinner-box").show();
  ra = true;
  rj();
  $.ajax({
    type: "GET",
    url: i.akqgz(im, "ph4/search-mix.php"),
    data: j,
    dataType: i.ImJmZ,
    crossdomain: true,
    success: function (k) {
      if (i.ZtdMr !== "efqrR") {
        var l;
        if (k.state == "success") {
          rg();
          l = k.mixlist.length <= 1 && hm(km("txt.result.one")) ? km(i.aEapm) : km("txt.result.other");
          lN.$boxinfo.html(l.replace("%{count}", k.mixlist.length));
          if (k.mixlist.length) {
            k.mixlist.forEach(function (m, n) {
              if (i.FaqBG(i.jiANM, "NVlQO")) {
                if (l) {
                  m.top.location.reload();
                } else if (n) {
                  m.location.href = "index.html?skipintro=1";
                } else {
                  p.location.reload();
                }
              } else {
                m.dateQuery = k.now;
              }
            });
            qO.search = k.mixlist;
            re();
          }
        } else {
          rh();
        }
      } else {
        i();
        j = [];
      }
    },
    error: function (k) {
      i.LUomE(rh);
    }
  });
}
function rg() {
  ra = false;
  qG(lS, "#ic-search-mini");
  kT.reset();
}
function rh() {
  rg();
  if (lN.isOpen() && lS.hasClass("active")) {
    mt.open(km("pop.noCoServerText"), km("pop.noCoServerTitle"), [km("bt.ok")]);
  }
}
function ri() {
  rc = rb = "";
  $("#box-search #input-search").val("");
}
function rj() {
  qw();
  qO.search = [];
}
function rk() {
  if (mT.getMixlist().length || mT.getFavlist(true).length) {
    rl();
  } else {
    lN.$boxinfo.html(km("txt.mixlistEmpty"));
  }
}
function rl() {
  var h;
  var i;
  var j;
  var k;
  if (lN.isOpen() && lT.hasClass("active")) {
    j = [];
    if ((h = qB()) == "mymix") {
      if ((k = mT.getMixlist()).length && (j = qK(k, rn, "mymix"), lN.$boxline.html(j[0]), iu ? lN.$boxinfo.html(km("txt.mixlistInfo").replace("%{date_time}", 2)) : (lN.$scrollbox.find(".spinner-box").removeClass("spin").show().find("svg use").attr("xlink:href", "#ic-network-off"), lN.$boxinfo.html(km("txt.mixlistNoCo"))), qJ(2, false, "mymix") && mT.getStatMixOnline(), qN)) {
        qN = false;
        (i = lN.$boxline.find(".line").first()).addClass("bckFlash").one(ie, function () {
          i.removeClass("bckFlash");
        });
      }
    } else if (h == "myfav" && (k = mT.getFavlist(true)).length && (j = qK(k, rn, "myfav"), lN.$boxline.html(j[0]), lN.$boxinfo.empty(), qJ(2, false, "myfav"))) {
      mT.getStatFavOnline();
    }
    qx();
    la("playlist-all");
  }
}
function rm(g, h) {
  return rn(g, h, "top50");
}
function rn(g, h, j) {
  var g = g || {};
  var h = h + 1 || 0;
  var j = j || "";
  var q = j === "top50";
  var w = j === "top50" || j === "latest" || j === "search";
  var x = j === "latest" || j === "search";
  var y = j === "mymix" && !g.online;
  var z = g.private == "1";
  var A = j === "mymix";
  var B = j === "mymix";
  var C = iD;
  var D = (j === "mymix" || j === "search") && rq(g);
  var E = (j === "mymix" || j === "search") && rr(g);
  var j = j === "myfav" || rp(g);
  var F = ro(g);
  var G = hm(g.datedb) ? g.datedb : h5();
  var H = "line";
  var H = "<div data-key='mix-" + g.id + "' class='" + (H + (y ? " isoffline" : "") + (z ? " isprivate" : "") + (j ? " isfavoris" : "") + (F ? " ismymix" : "") + (D ? " istop50" : "") + (E ? " islatest" : "")) + "'>";
  return (H += "<div class='mixbanner box-info" + (q ? " rating" : "") + "'>") + (q ? "<div class='rating'>" + h + "</div>" : "") + "<div class='info'>" + ("<span class='title'>" + g.title + "</span>") + "<div class='dj'>" + (w ? "<div class='box-flag'><div class='fflag fflag-" + g.country.toUpperCase() + "'></div></div>" : "") + ("<span class='name'>" + g.name + "</span>") + "</div></div><div class='data'><div class='stat'><div class='boxstat mymix'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-user-mini'></use></svg></div></div><div class='boxstat private'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-lock-mini'></use></svg></div></div><div class='boxstat myfav'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-rate-mini'></use></svg></div></div><div class='boxstat top50'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-trophy-mini'></use></svg></div></div><div class='boxstat latest'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-live-mini'></use></svg></div></div>" + ("<div class='boxstat offline'><div class='txt'>" + km("txt.offline") + "</div><div class='bck'><svg class='svg-box'><use xlink:href='#ic-nocloud-mini'></use></svg></div></div>") + ("<div class='boxstat liked'><div class='txt'>" + hb(g.nblike) + "</div><div class='bck'><svg class='svg-box'><use xlink:href='#ic-like-mini'></use></svg></div></div>") + ("<div class='boxstat viewed'><div class='txt'>" + hb(g.nbview) + "</div><div class='bck'><svg class='svg-box'><use xlink:href='#ic-view-mini'></use></svg></div></div>") + "</div>" + ("<span class='date' data-date='" + G + "'>" + (x ? h2(G, g.dateQuery) : pB(G)) + "</span>") + "</div></div><div class='box-action'><div class='bt bt-round bt-big watch color-green'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-eye'></use></svg></div><div class='hitzone'></div></div><div class='bt bt-round bt-big share color-blue'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-share'></use></svg></div><div class='hitzone'></div></div>" + (C ? "<div class='bt bt-round bt-big link color'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-link'></use></svg></div><div class='hitzone'></div></div>" : "") + "<div class='bt bt-round bt-big fav'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-rate'></use></svg></div><div class='hitzone'></div></div>" + (B ? "<div class='bt bt-round bt-big download'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-download'></use></svg></div><div class='hitzone'></div></div>" : "") + (A ? "<div class='bt bt-round bt-big delete'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-trash'></use></svg></div><div class='hitzone'></div></div>" : "") + "</div></div>";
}
function ro(g) {
  return rs(g.id, mT.getMixlist());
}
function rp(g) {
  return gO(g.id, "id", mT.getFavlist(true));
}
function rq(g) {
  return !(g.mymix && !g.online || !(rs(g.id, qO.top50.day) || rs(g.id, qO.top50.week) || rs(g.id, qO.top50.month) || rs(g.id, qO.top50.year)));
}
function rr(g) {
  return !(g.mymix && !g.online) && rs(g.id, qO.latest);
}
function rs(g, h, i) {
  i = i || "id";
  for (var j in h) {
    if (g == h[j][i]) {
      return true;
    }
  }
  return false;
}
function rt(g, h, i) {
  i = i || "id";
  for (var j in h) {
    if (g == h[j][i]) {
      return h[j];
    }
  }
}
function ru(g) {
  var j;
  var k = qA();
  var l = qB();
  var m = g.replace("mix-", "");
  switch (k) {
    case "latest":
      j = rt(m, qO.latest, "id");
      break;
    case "top50":
      switch (l) {
        case "day":
          j = rt(m, qO.top50.day, "id");
          break;
        case "week":
          j = rt(m, qO.top50.week, "id");
          break;
        case "month":
          j = rt(m, qO.top50.month, "id");
          break;
        case "year":
          j = rt(m, qO.top50.year, "id");
      }
      break;
    case "mixlist":
      switch (l) {
        case "mymix":
          j = rt(m, mT.getMixlist(), "id");
          break;
        case "myfav":
          j = rt(m, mT.getFavlist(true), "id");
      }
      break;
    case "search":
      j = rt(m, qO.search, "id");
  }
  return j;
}
var rv = [];
var rw = [];
var rx = [];
function ry() {
  lO.$pop = lO.find(".poplist");
  lO.$bck = lO.find(".bac");
  lO.$bck.fadeIn = function () {
    this.addClass("animateFadeIn");
  };
  lO.$bck.fadeOut = function () {
    this.addClass("animateFadeOut").one(ie, function (h) {
      $(h.target).removeClass("animateFadeIn animateFadeOut");
    });
  };
  lO.$bts = lO.$pop.find("form .bts");
  lO.$btImport = lO.$pop.find("form #bt-import");
  lO.$btImport.on(iF.down, rU);
  lO.$pop.find("form #bt-doc").on(iF.down, rV);
  lO.$formSearch = lO.$pop.find("form[name=form-search-mod]").on("submit", rN);
  lO.$inputSearch = lO.$formSearch.find("input[name=input-search-mod]");
  lO.$inputSearch.on(iF.down, function (h) {
    lO.$inputSearch.parent().find(".input-loader").addClass("spin").show();
  });
  lO.$inputSearch.on("input", function (h) {
    $(this).parent().find(".input-loader").removeClass("spin").hide();
    rM($(this));
  });
  lO.$inputSearch.on("focus", function () {
    $(this).parent().find(".input-loader").removeClass("spin").hide();
  });
  lO.$inputSearch.on("blur", function () {
    $(this).parent().find(".input-loader").removeClass("spin").hide();
  });
  lO.$scrollbox = lO.$pop.find(".scrollbox");
  lO.$boxinfo = lO.$scrollbox.find(".boxinfo");
  lO.$boxline = lO.$scrollbox.find(".boxline");
  lO.find(".tabbox .tab").on(iF.down, qs);
  lO.find(".pagebox .tab-filter .bt").on(iF.down, qu);
  lO.bindLines = function () {
    lO.$boxline.find(".bt.playmod").on(iF.down, rK);
    lO.$boxline.find(".bt.sharemod").on("click", rL);
    lO.$boxline.find(".bt.playmodbox").on(iF.down, rR);
    lO.$boxline.find(".bt.deletemodbox").on(iF.down, rS);
  };
  lO.close = rB;
  lP = $("#tab-mods");
}
function rz() {
  qn = lO;
  pN();
  lO.addClass("show");
  lO.$bck.fadeIn();
  lO.$pop.addClass("open").one(ie, rA);
  if (ir && window.electron) {
    qt("modbox");
  } else {
    qt("mods");
  }
  la("playlist-all");
}
function rA() {
  pO();
  m4.removeSpinner();
  lO.$pop.addClass("opened");
  lO.$bck.on(iF.down, lO.close);
}
function rB() {
  qn = null;
  kZ = [];
  l8();
  pN();
  lO.$bck.off();
  lO.$bck.fadeOut();
  lO.$pop.removeClass("opened").addClass("close").one(ie, rC);
  lO.$boxline.off();
}
function rC() {
  qE(qo);
  lO.$pop.removeClass("open close");
  lO.removeClass("show");
  $(".poplist .tab", lO).removeClass("active");
  qj = qk = qi = null;
  le();
  pO();
  la(mz ? "home" : "index-select");
}
var rD = false;
function rE() {
  lO.$inputSearch.val("");
  lO.$bts.removeClass("show");
  lO.$formSearch.removeClass("show");
  if (rD) {
    return false;
  }
  if (!iu) {
    lO.$boxinfo.html(km("pop.noNetworkText"));
    lO.$scrollbox.find(".spinner-box").removeClass("spin").show().find("svg use").attr("xlink:href", "#ic-network-off");
    return false;
  }
  if (rv.length) {
    rH();
    return false;
  }
  rD = true;
  qF(lP);
  const h = new XMLHttpRequest();
  new Date().getTime();
  h.open("GET", io + "incredimods.json", true);
  h.onload = function () {
    if (h.status === 200) {
      rF();
      rv = JSON.parse(h.responseText);
      rH();
    }
  };
  h.onerror = function (i) {
    rG();
  };
  h.send();
}
function rF() {
  rD = false;
  qG(lP, "#ic-mod-list");
}
function rG() {
  rF();
  if (lO.isOpen() && lP.hasClass("active")) {
    mt.open(km("pop.noCoServerText"), km("pop.noCoServerTitle"), [km("bt.ok")]);
  }
}
function rH() {
  if (lO.isOpen() && lP.hasClass("active")) {
    if (rv.length && rv[0].soon) {
      lO.$scrollbox.find(".soon").addClass("show");
      lO.$boxinfo.html(km("txt.modlistInfo1") + "<br>" + km("txt.modlistInfo2"));
      return false;
    }
    var h = qK(rv, rJ, "mods");
    lO.$boxline.html(h[0]);
    lO.$boxinfo.html(km("txt.modlistInfo1") + "<br>" + km("txt.modlistInfo2"));
    if (ic) {
      lO.$boxline.on(iF.down, js);
    } else {
      qx();
    }
    if (rv.length > 1) {
      lO.$formSearch.addClass("show");
      lO.$inputSearch.addClass("show");
    }
    la("playlist-all");
    rI(rv);
  }
}
function rI(g, h) {
  lO.$boxline.find(".line").each(function (j, k) {
    var m;
    var p = g.find(v => v.version.toString() === $(k).attr("data-mod-v"));
    var q = h === "imported" ? p.icon : "" + io + p.folder + "image/icon.jpg";
    var u = $(k).find(".rating");
    if (p.img) {
      u.find(".spinner-box").remove();
      u.find(".bkg-icon").css({
        backgroundImage: "url(" + p.img.src,
        opacity: 1
      });
    } else {
      u.append("<div class='spinner-box spin'><svg class='svg-box col-version'><use xlink:href='#ic-loader'></use></svg></div>");
      (m = new Image()).onload = function () {
        u.find(".spinner-box").remove();
        u.find(".bkg-icon").css("background-image", "url(" + m.src + ")").addClass("fadeIn");
        p.img = m;
      };
      m.src = q;
    }
  });
}
function rJ(g, h, j) {
  var l = location.search == "?v=" + g.version + "&folder=" + g.folder.replace("/", "");
  var m = (l = !(!ir || gZ("v") !== g.version) || l) && j != "modbox" ? "line selected" : "line";
  var p = l ? "<div class='bul'><svg class='svg-box'><use xlink:href='#ic-check'></use></svg></div>" : "";
  var p = ic ? "<div class='bul'><svg class='svg-box'><use xlink:href='#ic-lock'></use></svg></div>" : p;
  return "<div data-mod-v='" + g.version + "' data-mod-folder='" + g.folder.replace("/", "") + "' data-modders='" + g.modders + "' class='" + m + `'>
\t\t\t\t\t\t<div class='mixbanner box-info'>
\t\t\t\t\t\t\t<div class='rating'>
\t\t\t\t\t\t\t\t<div class='bkg-icon'></div>
\t\t\t\t\t\t\t\t` + p + `
\t\t\t\t\t\t\t</div>
\t\t\t\t\t\t\t<div class='info'>
\t\t\t\t\t\t\t\t<span class='title'>` + g.name + "</span>\n\t\t\t\t\t\t\t\t<div class='dj'><span class='name'>" + g.crew + `</span></div>
\t\t\t\t\t\t\t</div>
\t\t\t\t\t\t\t<div class='data'>
\t\t\t\t\t\t\t\t<span class='date' data-date='` + g.date + "'>" + pB(g.date) + `</span>
\t\t\t\t\t\t\t</div>
\t\t\t\t\t\t</div>
\t\t\t\t\t\t<div class='box-action'>
\t\t\t\t\t\t\t` + (j != "mods" || l ? "" : "<div class='bt bt-round bt-big playmod color-green'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-play'></use></svg></div><div class='hitzone'></div></div>") + "\n\t\t\t\t\t\t\t" + (j == "mods" ? "<div class='bt bt-round bt-big sharemod link'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-link'></use></svg></div><div class='hitzone'></div></div>" : "") + "\n\t\t\t\t\t\t\t" + (j != "modbox" || l ? "" : "<div class='bt bt-round bt-big playmodbox color-green'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-play'></use></svg></div><div class='hitzone'></div></div>") + "\n\t\t\t\t\t\t\t" + (j == "modbox" ? "<div class='bt bt-round bt-big deletemodbox color-red'><div class='bck'><svg class='svg-box'><use xlink:href='#ic-trash'></use></svg></div><div class='hitzone'></div></div>" : "") + `
\t\t\t\t\t\t</div>
\t\t\t\t\t</div>`;
}
function rK() {
  var h;
  if (iu) {
    h = $(this).parent().parent();
    pN();
    lL.removeClass("white");
    hr(lL, "fadeIn", "opacity", function () {
      gS("app." + ib + "?v=" + h.attr("data-mod-v") + "&folder=" + h.attr("data-mod-folder"));
    });
  } else {
    mt.open(km("pop.noNetworkText"), km("pop.noNetworkTitle"), [km("bt.ok")]);
  }
}
function rL() {
  var h = $(this).parent().parent().attr("data-mod-folder").replace(/^\d+-(.+)$/, "$1");
  var h = "<div class='formline'><div class='selectarea'>" + (im + "mod/share/" + h).replace("https://www.", "") + "</div></div>";
  mt.open(h, km("bt.info"), [km("bt.ok")], [], false, false, "dialog-clipboard");
  mt.$pop.addClass("fluid");
}
function rM(g) {
  var i = he(g.val().substr(0, 50)).toLowerCase();
  var g = qA();
  var j = g == "mods" ? rv : rw;
  (j = g == "mods" && rv.length && rv[0].soon ? [] : j).forEach(function (k) {
    if ([k.name, k.crew, ...k?.modders].filter(l => l.toLowerCase().startsWith(i)).length) {
      lO.$boxline.find(".line[data-mod-v=" + k.version + "]").show();
    } else {
      lO.$boxline.find(".line[data-mod-v=" + k.version + "]").hide();
    }
  });
  la("playlist-all");
}
function rN() {
  lO.$inputSearch.trigger("blur");
}
function rO() {
  lO.$scrollbox.find(".soon").removeClass("show");
  lO.$inputSearch.val("");
  lO.$bts.addClass("show");
  lO.$formSearch.addClass("show");
  lO.$inputSearch.removeClass("show");
  if (rw.length) {
    rQ();
    return false;
  }
  var h = window.electron && electron.ipc.readUserFile({
    path: "modbox",
    file: "usermods.json"
  });
  if (h.ok) {
    rw = h.data;
    rQ();
  } else if (!h.msg.includes("File not found")) {
    jv({
      error: "load local mods"
    });
  }
}
function rP(g) {
  var h = gZ("v");
  var h = window.electron && electron.ipc.readUserFile({
    path: "modbox",
    file: h + ".json"
  });
  if (h.ok) {
    rx = JSON.parse(h.data);
    if (g) {
      g();
    }
  } else {
    jv({
      error: "load local mod",
      action: "reload"
    });
  }
}
function rQ() {
  var g;
  if (lO.isOpen() && $("#tab-modbox").hasClass("active")) {
    if (rw.length > 1) {
      lO.$inputSearch.addClass("show");
    }
    g = qK(rw, rJ, "modbox");
    lO.$boxline.html(g[0]);
    lO.$boxinfo.html("");
    qx();
    la("playlist-all");
    rI(rw, "imported");
  }
}
function rR() {
  var h = $(this).parent().parent();
  pN();
  lL.removeClass("white");
  hr(lL, "fadeIn", "opacity", function () {
    gS("app." + ib + "?v=" + h.attr("data-mod-v") + "&folder=" + h.attr("data-mod-folder") + "&modbox=1");
  });
}
function rS() {
  var h = $(this);
  var i = h.parent().parent();
  kT.add(h);
  mt.open(km("pop.deleteText"), km("pop.deleteTitle"), [km("bt.yes"), km("bt.no")], [function () {
    rT(i);
    kT.reset();
    mt.close();
  }, function () {
    kT.reset();
    mt.close();
  }]);
}
function rT(g) {
  var i = g.attr("data-mod-v");
  var j = i == gZ("v");
  if (rw.find(l => l.version === i)) {
    var k = rw.map(l => {
      const {
        img: m,
        ...p
      } = l;
      return p;
    }).filter(l => l.version !== i);
    try {
      if ((window.electron && electron.ipc.writeUserFile({
        path: "modbox",
        file: "usermods.json",
        data: k
      })).ok) {
        rw = k;
        qz(g);
        qE(g);
        g.remove();
        if (window.electron) {
          electron.ipc.deleteUserFile({
            path: "modbox",
            file: i + ".json"
          });
        }
        ll(i);
        if (rw.length <= 1) {
          lO.$inputSearch.removeClass("show");
        }
        if (j) {
          hr($("#fade-all"), "fadeIn", "opacity", gT);
        }
        la("playlist-all");
        return false;
      }
    } catch (l) {}
  }
  mt.open(km("pop.deleteBugText"), km("pop.notFoundTitle"), [km("bt.ok")], []);
}
function rU() {
  kT.add(qi);
  lO.$btImport.addClass("disable");
  sx(function () {
    kT.reset();
    lO.$btImport.removeClass("disable");
  });
}
function rV() {
  gV("mod");
}
function rW() {
  nB = true;
  lG.addClass("mode-random");
  pN();
  nS();
  oF(mc);
  oF(me, true);
  oF(mf, true);
  mg.off().on(iF.down, function (g) {
    g.preventDefault();
    gF(rZ);
  });
  mg.bounce();
  mg.$svg.attr("xlink:href", "#ic-random");
  lI.addClass("fadeIn");
  m8.addClass("pointerlock");
  TweenMax.delayedCall(0.4, rY);
}
function rX() {
  lM.$title.html(km("txt.randomTitle"));
  lM.$name.html(km("txt.randomText"));
  lM.addClass("fadeIn");
}
function rY() {
  rX();
  nt.start(n4);
  pO();
  sF("game", "random");
}
function rZ() {
  nB = false;
  lG.removeClass("mode-random");
  nt.stop();
  mg.off();
  mg.bounce();
  nP();
  lI.removeClass("fadeIn");
  mg.$svg.attr("xlink:href", "#ic-burger");
  lM.removeClass("fadeIn");
  TweenMax.delayedCall(0.4, s0);
}
function s0() {
  oE(mc, true);
  if (!oL) {
    oE(me, true);
    oE(mf, true);
  }
  m8.removeClass("pointerlock");
}
function s1(h) {
  var j = this;
  this.start = function () {
    j.loop();
    j.checkIfPoloMuted();
  };
  this.stop = function () {};
  this.checkIfPoloMuted = function () {
    for (var k = pH(), l = 0, m = k.length; l < m; l++) {
      var p = k[l];
      if (p.getMute()) {
        p.unmute();
      }
    }
  };
  this.loop = function () {
    var k = pJ();
    var q = pH();
    var w = pL();
    var x = k.length;
    var y = q.length;
    var z = 0;
    var A = h8(6);
    var B = h8(5);
    var C = h8(2);
    var D = h8(5) < 4 ? 2 : 1;
    var E = false;
    var F = 0;
    var G = "ajouter";
    var G = A < C ? "rien" : G;
    G = A < B || x === 0 ? "enlever" : G;
    G = !n4 || y <= 1 ? "ajouter" : G;
    D = !n4 || y <= 1 ? 1 : D;
    G = h ? "ajouter" : G;
    G = h && x === 0 ? "rien" : G;
    if (oL || oM) {
      G = "bonus";
      if (oS == os.nbLoop) {
        E = true;
        G = "enlever";
      }
    } else {
      for (z = 0; z < ks; z++) {
        var H = nw[z];
        if (H.found) {
          G = "bonus";
          H.launchVideo();
          break;
        }
      }
    }
    if (G == "ajouter") {
      for (var I, F = Math.round((h8(x - 1) + 1) / D), J = [], z = 0; z < F; z++) {
        I = pG(k);
        J.push(I.id);
      }
      J.sort();
      z = 0;
      for (; z < F; z++) {
        om(I = nq[J[z]], pG(w), z * 0.03);
        on();
      }
    } else if (G == "enlever") {
      F = Math.round((h8(y - 2) + 1) / D);
      F = E && y - F > 4 ? y - 4 : F;
      z = 0;
      for (; z < F; z++) {
        if ((I = pG(q)).getLoop() > 2 || E) {
          og(I, 0);
        }
      }
    }
    if (G != "bonus") {
      var y = (q = pH()).length;
      var K = 0;
      for (z = 0; z < y; z++) {
        var L = q[z];
        if (L.getLoop() > 7 && ++K < y) {
          og(L, 0);
        }
      }
    }
  };
}
function s2() {
  if (oL) {
    jF();
  } else {
    pN();
    nC = true;
    lG.addClass("mode-record");
    nE = false;
    nu.init();
    ns.maxLoop = mP.recmaxloop;
    ns.open("record");
    nS();
    mg.off().on(iF.down, function (g) {
      g.preventDefault();
      gF(s5);
    });
    mg.bounce();
    mg.$svg.attr("xlink:href", "#ic-live");
    if (n4) {
      s3();
    } else {
      TweenMax.delayedCall(0.4, s3);
    }
  }
}
function s3() {
  (n4 ? s4 : (nE = true, jD))();
  pO();
}
function s4() {
  nE = false;
  ns.start();
  ns.onLoopsFinished = () => {
    s5();
  };
  ns.onLooping = () => {
    nu.loop();
  };
  nu.start();
  sF("mix", "start_recording");
}
function s5() {
  nC = false;
  lG.removeClass("mode-record");
  ns.stop();
  ns.close();
  nu.stop();
  mg.$svg.attr("xlink:href", "#ic-burger");
  mg.off();
  mg.bounce();
  nP();
  if (ns.cntLoop < ns.minLoop && !nE) {
    TweenMax.delayedCall(0.25, jE);
  }
  if (ns.cntLoop >= ns.minLoop && !nE) {
    pN();
    qe();
    pd();
    jK();
  }
}
var s6;
function s7() {
  var h;
  var i;
  var j;
  var k;
  var l;
  var m = this;
  var p = ha(n7 / 1000, 2);
  this.init = function () {
    i = h = "";
    j = false;
    k = 0;
    l = {};
  };
  this.setData = function (q) {
    l = q;
  };
  this.getData = function () {
    return l;
  };
  this.getXML = function () {
    return h;
  };
  this.start = function () {
    m.init();
    j = true;
    m.xmlOpen();
  };
  this.loop = function () {
    m.xmlCloseAction();
    m.xmlCloseLoop();
    k++;
    m.xmlOpenLoop();
    m.xmlOpenAction();
  };
  this.stop = function () {
    j = false;
    m.xmlClose();
  };
  this.xmlOpen = function () {
    h = "<mix version='" + il.version + "' control='true' looptime='" + mP.looptime + "'>\n";
    m.xmlOpenLoop();
    m.xmlOpenAction();
  };
  this.xmlClose = function () {
    m.xmlCloseAction();
    m.xmlCloseLoop();
    h += "</mix>\n";
  };
  this.xmlOpenLoop = function () {
    i = "\t<loop boucleA='" + !oQ + "' count='" + k + "'>\n";
    i += "\t\t<stage>\n";
    if (oL) {
      i += "\t\t\t<bonus id='" + (oO - 1) + "' playing='true' cntBoucle='" + oS + "' />\n";
    } else {
      if (oM && k > 0) {
        i += "\t\t\t<bonus id='" + (oO - 1) + "' waiting='true'/>\n";
      }
      for (var q = 0; q < n8; q++) {
        var u;
        var v = nq[q];
        if (v.getBusy()) {
          u = "";
          u = v.getPlaying() || v.getMoment() !== 0 || v.getLoop() !== 0 ? "\t\t\t<polo id='" + v.id + "' picto='" + v.getPicto().id + "' mute='" + v.getMute() + "' playing='" + v.getPlaying() + "'/>\n" : "\t\t\t<polo id='" + v.id + "' picto='" + v.getPicto().id + "' mute='" + v.getMute() + "' playing='true'/>\n";
          i += u;
        }
      }
    }
    i += "\t\t</stage>\n";
  };
  this.xmlCloseLoop = function () {
    h += i += "\t</loop>\n";
  };
  this.xmlOpenAction = function () {
    i += "\t\t<action>\n";
    if (k === 0 && oM) {
      nu.xmlAction("bonus", nw[oO - 1], true);
    }
  };
  this.xmlCloseAction = function () {
    i += "\t\t</action>\n";
  };
  this.xmlAction = function (q, u, v) {
    var w;
    var x;
    if (j) {
      v = v !== undefined && v;
      w = ha(pC(true) / 1000, 2);
      x = "";
      if (q == "bonus") {
        x += v ? "\t\t\t<user type='" + q + "' bonus='" + u.getId() + "' when='0.1'/>\n" : "\t\t\t<user type='" + q + "' bonus='" + u.getId() + "' when='" + w + "'/>\n";
      } else {
        w = p - n2 / 1000 < w ? p : w;
        x += "\t\t\t<user type='" + q + "' polo='" + u.id + "' picto='" + u.getPicto().id + "' when='" + w + "'/>\n";
      }
      i += x;
    }
  };
}
function s8() {
  nD = true;
  lG.addClass("mode-replay");
  pN();
  nS();
  mg.off().on(iF.down, function (h) {
    h.preventDefault();
    gF(sa);
  });
  mg.bounce();
  oF(mc, !n0);
  oF(me, !n0);
  oF(mf, !n0);
  mg.$svg.attr("xlink:href", "#ic-close");
  mk.on(iF.down, function (h) {
    h.preventDefault();
    gF(function () {
      kT.add(mk);
      sa(true);
    });
  });
  m8.addClass("pointerlock");
  if (n0) {
    lG.addClass("mode-watch");
    lN.hide();
    lM.addClass("fadeIn");
  } else {
    lM.addClass("fadeIn");
    lM.$title.html(km("txt.replayTitle"));
    lM.$name.html(km("txt.replayText"));
    lM.$dedi.empty();
    mk.find(".txt").html(km("bt.save"));
  }
}
function s9() {
  var g = n0 ? qL.xml != null ? qL.xml : qL.mix : nu.getXML();
  nv = new so(g);
  ns.maxLoop = nv.getTotalLoop();
  ns.bonusList = nv.getBonusList();
  TweenMax.delayedCall(0.4, function () {
    ns.open("play", nv.control);
    ns.onLoopsFinished = () => {
      sa();
    };
    ns.onLooping = () => {
      nv.loop();
    };
    ns.start();
    nv.start();
  });
  TweenMax.delayedCall(0.6, function () {
    la("mode-replay");
    pO();
  });
}
function sa(g) {
  lb("mode-replay");
  l8();
  if (!pq) {
    sn();
    mg.off();
    nD = false;
    ns.stop();
    ns.close();
    nv.stop();
    if (n0) {
      if (mV) {
        pd();
      }
      nn();
    } else {
      pd();
      mg.bounce();
      mg.$svg.attr("xlink:href", "#ic-burger");
      lM.removeClass("fadeIn");
      if (g === true) {
        kT.reset();
        if (ix) {
          jt(true);
        } else {
          jQ();
        }
      } else {
        jK();
      }
      TweenMax.delayedCall(0.4, sb);
    }
    nP();
  }
}
function sb() {
  oE(mc, !n0);
  oE(me, !n0);
  oE(mf, !n0);
  lG.removeClass("mode-replay");
  m8.removeClass("pointerlock");
}
function sc() {
  sb();
  n0 = false;
  lG.removeClass("mode-watch");
  mg.$svg.attr("xlink:href", "#ic-burger");
  lM.removeClass();
  lN.show();
}
function sd(g) {
  if (g.type !== undefined) {
    g.stopPropagation();
  }
  var i;
  var g = g.type === undefined ? g : null;
  var j = hl(g);
  if (hl(g = j ? ru((i = $(this).parent().parent()).attr("data-key").replace("mix-", "")) : g)) {
    mt.open(km("pop.notFoundText"), km("pop.notFoundTitle"), [km("bt.ok")]);
  } else {
    n0 = true;
    qL = g;
    lM.$title.html(g.title);
    lM.$name.html(km("txt.createdBy").split("%{name}").join(g.name));
    lM.$dedi.html(g.dedi == "" ? "" : km("txt.dedicatedTo").split("%{name}").join(g.dedi));
    lM.$date.html(pB(g.datedb));
    lM.$date.attr("data-date", g.datedb);
    lM.find(".mixbanner").attr("class", "mixbanner");
    lM.find(".stat").empty();
    if (j) {
      j = i.find(".stat").html();
      lM.find(".stat").html(j);
      j = lM.find(".dj .box-flag");
      if (g.country) {
        j.find(".flag").removeClass().addClass("fflag fflag-" + g.country.toUpperCase());
      } else {
        j.hide();
      }
      j = "";
      j = (j = (j = (j = (j += i.hasClass("ismymix") ? " ismymix" : "") + (i.hasClass("isfavoris") ? " isfavoris" : "")) + (i.hasClass("istop50") ? " istop50" : "")) + (i.hasClass("islatest") ? " islatest" : "")) + (i.hasClass("isprivate") ? " isprivate" : "");
      lM.find(".mixbanner").addClass(j);
    } else {
      lM.find(".stat").html("\n\t\t\t\t<div class='boxstat liked'><div class='txt'>" + hb(g.nblike) + "</div><div class='bck'><svg class='svg-box'><use xlink:href='#ic-like-mini'></use></svg></div></div>\n\t\t\t\t<div class='boxstat viewed'><div class='txt'>" + hb(g.nbview) + "</div><div class='bck'><svg class='svg-box'><use xlink:href='#ic-view-mini'></use></svg></div></div>\n\t\t\t");
    }
    if (!(qL.mymix || (ml.removeClass("liked already disabled"), ml.off().on(iF.down, se), g.liked && ml.addClass("liked"), mV))) {
      sf("nbview");
    }
    nl();
  }
}
function se(g) {
  g.preventDefault();
  if (ml.hasClass("disabled")) {
    return false;
  }
  if (iu) {
    ml.addClass("disabled");
    kT.add(ml);
    TweenMax.delayedCall(0.5, function () {
      if (qL.liked) {
        ml.removeClass("liked");
        TweenMax.delayedCall(0.5, function () {
          ml.removeClass("disabled");
        });
        sf("nbunlike");
      } else {
        ml.addClass("liked");
        TweenMax.delayedCall(0.5, function () {
          ml.removeClass("disabled");
        });
        sf("nblike");
      }
    });
  } else {
    mt.open(km("pop.noNetworkVotedText"), km("pop.noNetworkTitle"), [km("bt.ok")]);
  }
}
function sf(g) {
  var i = {
    uuid: iD ? device.uuid : "unknown",
    id: qL.id,
    row: g
  };
  if (iu) {
    $.ajax({
      type: "POST",
      url: im + "ph4/save-stat-mix.php",
      data: i,
      dataType: "json",
      crossdomain: true,
      success: function (j) {
        switch (j.info) {
          case "view ok":
            qL.viewed = true;
            break;
          case "like ok":
            qL.liked = true;
            qL.nblike++;
            break;
          case "unlike ok":
            delete qL.liked;
            qL.nblike--;
            qL.nblike = qL.nblike < 0 ? 0 : qL.nblike;
            break;
          case "already liked":
            mt.open(km("pop.alreadyVotedText"), km("pop.alreadyVotedTitle"), [km("bt.ok")]);
            ml.addClass("already liked");
            qL.liked = true;
        }
        if (!(j.row != "nblike" && j.row != "nbunlike" || (kT.reset(), lM.$like = lM.find(".stat .liked"), lM.$like.find(".bck").addClass("popIn").one(ie, function (k) {
          $(k.target).removeClass(_classname);
        }), lM.$like.find(".txt").text(hb(qL.nblike)), mV))) {
          qo.find(".stat .liked .txt").text(hb(qL.nblike));
        }
      },
      error: function (j) {}
    });
  }
}
var sg = 0;
var sh = false;
function si() {
  m8[0].addEventListener(iF.down, sj);
}
function sj(g) {
  g.preventDefault();
  if (!sh) {
    clearTimeout(s6);
    m8[0].removeEventListener(iF.move, sm);
    m8[0].addEventListener(iF.move, sm);
    document.body.removeEventListener(iF.up, sk);
    document.body.addEventListener(iF.up, sk);
    ns.openBig();
    sm(g);
    pr();
  }
}
function sk(g) {
  g.preventDefault();
  clearTimeout(s6);
  m8[0].removeEventListener(iF.move, sm);
  document.body.removeEventListener(iF.up, sk);
  ns.openNormal();
  s6 = // TOLOOK
  setTimeout(sl, 400);
}
function sl() {
  sh = true;
  ps(sg = ns.cntLoop);
  // TOLOOK
  setTimeout(function () {
    sh = false;
  }, 200);
}
function sm(g) {
  g = "targetTouches" in g ? g.targetTouches[0] : g;
  var i = lH[0].offsetLeft;
  var g = g.pageX - i;
  var g = Math.floor(ns.maxLoop * g / (document.body.clientWidth - i * 2));
  g = (g = g < 0 ? 0 : g) > ns.maxLoop - 1 ? ns.maxLoop - 1 : g;
  ns.seek(g);
}
function sn() {
  m8[0].removeEventListener(iF.down, sj);
  m8[0].removeEventListener(iF.move, sm);
  document.body.removeEventListener(iF.up, sk);
  sg = 0;
  clearTimeout(s6);
}
function so(g) {
  var j;
  var k;
  var m;
  var o;
  var p;
  var q;
  var v;
  var w = this;
  function x() {
    var y;
    var z = pH();
    var A = pI();
    if (A.length > 1) {
      for (y in z) {
        z[y].setSolo(false);
      }
    } else if (z.length == 1) {
      z[0].setSolo(false);
    } else if (z.length > 1 && A.length == 1) {
      for (y in z) {
        z[y].setSolo(false);
      }
      A[0].setSolo(true);
    }
  }
  this.control = true;
  this.reloop = false;
  this.waitForReloop = false;
  this.init = function () {
    var y;
    var z;
    k = $.parseXML(g);
    if ((j = $(k)).find("compo").length > 0) {
      m = true;
      y = sp(g);
      k = $.parseXML(y);
      j = $(k);
    }
    k = j.find("mix");
    o = !ic && k.attr("control") === "true";
    p = k.children().length;
    q = ha(n7 / 1000, 2);
    v = 0;
    if (o) {
      z = [];
      j.find("user[type=bonus]").each(function () {
        z.push(parseInt($(this).attr("bonus")));
      });
      if ((z = gK(z)).length <= mP.bonusarray.length) {
        si();
      } else {
        o = false;
      }
    }
    this.control = o;
    this.reloop = false;
    this.waitForReloop = false;
  };
  this.getTotalLoop = function () {
    return p;
  };
  this.start = function () {
    w.loop();
  };
  this.stop = function () {
    TweenMax.killTweensOf(w.appendPolo);
    TweenMax.killTweensOf(w.removePolo);
    TweenMax.killTweensOf(w.mutePolo);
    TweenMax.killTweensOf(w.unmutePolo);
    TweenMax.killTweensOf(w.launchBonus);
    TweenMax.killTweensOf(w.soloPolo);
    this.control = false;
    w.reloop = false;
    w.waitForReloop = false;
  };
  this.loop = function (y) {
    var z;
    var A;
    if (hm(y)) {
      v = y;
      w.reloop = true;
    }
    if (v == p) {
      sa();
    } else {
      y = j.find("loop[count=\"" + v + "\"]");
      if (!(v !== 0 && !w.reloop)) {
        oQ = y.attr("boucleA") == "true";
        A = y.find("stage");
        z = 0;
        $(A).children().each(function (B) {
          var D;
          var E;
          var F;
          var G;
          var H = this.tagName;
          if (H == "polo") {
            D = Number($(this).attr("id"));
            E = Number($(this).attr("picto"));
            G = $(this).attr("mute") == "true";
            B = D == -1 ? nq[B] : nq[D];
            D = nr[E];
            E = w.reloop ? 0 : 0.03;
            F = !!w.reloop;
            w.appendPolo(B, D, z * E, F);
            if ($(this).attr("playing") == "false") {
              B.waitOneLoop = true;
            }
            if (G) {
              w.mutePolo(B);
            }
            z++;
          }
          if (v > 0 && H == "bonus") {
            D = Number($(this).attr("id"));
            E = $(this).attr("playing") === "true";
            F = $(this).attr("waiting") === "true";
            G = Number($(this).attr("cntBoucle"));
            if (F) {
              TweenMax.delayedCall(0.1, w.launchBonus, [D]);
            } else if (E) {
              w.launchBonus(D, G, true);
            }
          }
        });
        if (m && (A = pI()).length == 1 && pH().length > 1) {
          A[0].setSolo(true);
        }
        w.reloop = false;
      }
      A = y.find("action");
      $(A).children().each(function () {
        var B;
        var C;
        var D;
        var E;
        if (this.tagName == "user") {
          B = $(this).attr("type");
          C = ha(Number($(this).attr("when")), 2);
          C = q < C ? q : C;
          if (B == "bonus") {
            D = Number($(this).attr("bonus"));
            D = m ? D - 1 : D;
            C = C === 0 ? 0.1 : C;
            C = oK && C < n2 / 1000 ? C + n2 / 1000 : C;
            TweenMax.delayedCall(C, w.launchBonus, [D]);
          } else {
            D = Number($(this).attr("polo"));
            E = Number($(this).attr("picto"));
            D = D == -1 ? {
              fromFlash: true
            } : nq[D];
            E = nr[E];
            if (B == "append") {
              TweenMax.delayedCall(C, w.appendPolo, [D, E]);
            } else if (B == "remove") {
              TweenMax.delayedCall(C, w.removePolo, [D, E]);
            } else if (B == "mute") {
              TweenMax.delayedCall(C, w.mutePolo, [D, E]);
            } else if (B == "unmute") {
              TweenMax.delayedCall(C, w.unmutePolo, [D, E]);
            }
            if (m && B == "solo") {
              TweenMax.delayedCall(C, w.soloPolo, [E]);
            }
          }
        }
      });
      v++;
    }
  };
  this.getBonusList = function () {
    var y = [];
    $(j).find("bonus[playing='true']").each(function () {
      y.push({
        id: parseInt($(this).attr("id")),
        loopIndex: parseInt($(this).parent().parent().attr("count"))
      });
    });
    return y;
  };
  this.appendPolo = function (y, z, A, B) {
    om(y = y.fromFlash === true ? pJ()[0] : y, z, A, B);
    on();
  };
  this.removePolo = function (y, z) {
    if ((y = y.fromFlash === true ? z.polo : y).getBusy()) {
      o6(y);
    }
  };
  this.mutePolo = function (y, z) {
    if ((y = y.fromFlash === true ? z.polo : y).getBusy() && (o7(y), m)) {
      x();
    }
  };
  this.unmutePolo = function (y, z) {
    if ((y = y.fromFlash === true ? z.polo : y).getBusy() && (o8(y), m)) {
      x();
    }
  };
  this.launchBonus = function (y, z, A) {
    if (hm(nw[y])) {
      if (A) {
        pu(y, z);
      } else {
        nw[y].launchVideo();
      }
    }
  };
  this.soloPolo = function (y) {
    if (m) {
      y = y.polo;
      if (y.getBusy()) {
        if (y.getSolo()) {
          y.setSolo(false);
          oe();
        } else {
          for (var z = pH(), A = 0, B = z.length; A < B; A++) {
            z[A].setSolo(false);
          }
          y.setSolo(true);
          o9();
        }
      }
    }
  };
  if (hm(g)) {
    this.init();
  }
}
function sp(g) {
  var g = $.parseXML(g);
  var g = $(g).find("compo");
  var i = g.attr("boucle") === "true";
  var j = "<mix version=\"flash\">\n";
  g.children().each(function (k) {
    var m = "\t<loop boucleA=\"" + i + "\" count=\"" + k + "\">\n";
    var n = "\t\t<stage>\n";
    var p = "\t\t<action>\n";
    $(this).children().each(function (q) {
      var u;
      var v = $(this);
      var w = v.find("polo");
      var x = v.attr("type");
      var y = w.attr("picto");
      var z = w.attr("vol") === "0";
      var w = w.attr("nbBoucle") > 0;
      var v = v.find("moment").attr("seconde");
      var v = ha(Number(v), 2).toString();
      x = (u = (x = (x = (x = (x = x === "ajouter" ? "append" : x) === "supprimer" ? "remove" : x) !== "mute" || z ? x : "mute") === "mute" && z ? "unmute" : x).indexOf("bonus") > -1 ? x.split("bonus").join("") : "") != "" ? "bonus" : x;
      y = Number(y.split("picto").join(""));
      if (Number(mX) == 2) {
        switch (y) {
          case 0:
            y = 5;
            break;
          case 1:
            y = 6;
            break;
          case 2:
            y = 7;
            break;
          case 3:
            y = 8;
            break;
          case 4:
            y = 9;
            break;
          case 5:
            y = 0;
            break;
          case 6:
            y = 1;
            break;
          case 7:
            y = 2;
            break;
          case 8:
            y = 3;
            break;
          case 9:
            y = 4;
        }
      }
      if (k == 0 && v === "0") {
        n += "\t\t\t<polo id=\"-1\" picto=\"" + y + "\" mute=\"" + z + "\" playing=\"" + w + "\" />\n";
      } else {
        z = "\t\t\t<user type=\"" + x + "\" polo=\"-1\" picto=\"" + y + "\" when=\"" + v + "\" />\n";
        p += z = x === "bonus" ? "\t\t\t<user type=\"" + x + "\" bonus=\"" + u + "\" when=\"" + v + "\" />\n" : z;
      }
    });
    j += m + ((n += "\t\t</stage>\n") + (p += "\t\t</action>\n")) + "\t</loop>\n";
    i = !i;
  });
  return hc(j += "</mix>");
}
function sq() {
  var h = qL.xml || qL.mix;
  var j = $.parseXML(h);
  var k = $(j);
  var m = k.find("mix");
  var p = false;
  if (k.find("compo").length > 0) {
    p = true;
    h = sp(qL.xml);
    qL.xml = h;
    j = $.parseXML(h);
    m = (k = $(j)).find("mix");
  }
  var q = [];
  var v = [];
  var w = [];
  function x(B) {
    var C;
    if (B.attr("type") === "bonus") {
      C = Number(B.attr("bonus"));
      if (!gM(v, C = p ? C - 1 : C)) {
        v.push(C);
      }
    } else {
      C = Number(B.attr("picto"));
      if (!gM(q, C)) {
        q.push(C);
      }
    }
  }
  m.children().each(function (B) {
    if (B === 0) {
      $(this).find("stage").each(function (C) {
        $(this).children().each(function (D) {
          x($(this));
        });
      });
    }
    $(this).find("action").each(function (C) {
      $(this).children().each(function (D) {
        x($(this));
      });
    });
  });
  for (var q = q.sort(function (B, C) {
      return B - C;
    }), v = v.sort(function (B, C) {
      return B - C;
    }), y = mP.animearray[q[0]], z = 0, A = mP.animearray.length; z < A; z++) {
    if (!gM(q, z)) {
      mP.animearray[z] = y;
    }
  }
  z = 0;
  A = v.length;
  for (; z < A; z++) {
    w.push(mP.bonusarray[v[z]]);
  }
}
var sr;
var ss;
var st = false;
var su = null;
function sv() {
  if (hm(su)) {
    su.terminate();
  } else {
    st = true;
  }
}
function sw(j, q) {
  for (var G, H = new AudioContext(), I = (st = false, su = null, $($.parseXML(j.xml)).find("mix")), J = 0, K = q.find("#convert-loader-box"), L = K.find(".progress-bar"), M = q.find("#bt-save-file"), q = q.find(".spinner-box"), N = "mp3", O = 320, Q = 0, R = [], U = [], V = "incredibox-v" + mP.version + "-" + hf(j.title) + "-" + O + "kbps" + (j.online ? "-" + j.id : "") + "." + N, V = iP ? "incredimod-" + hf(mP.name) + "-" + hf(j.title) + "-" + O + "kbps" + (j.online ? "-" + j.id : "") + "." + N : V, W = 0, W = 0; W < kp; W++) {
    R.push([kn.sound[W].sndA, kn.sound[W].sndB]);
  }
  for (W = 0; W < kq; W++) {
    U.push([kn.bonus[W].snd, kn.bonus[W].predrop]);
  }
  var X;
  var Y;
  var Z = [];
  var a0 = 0;
  var a1 = false;
  var a2 = false;
  $(I).children().length;
  $(I).children().each(function (ad) {
    var af = $(this).attr("boucleA") == "true";
    var ag = $(this).find("stage");
    var ah = $(this).find("action");
    var ai = [];
    var aj = af ? 0 : 1;
    var ak = !mP.bonusloopA || af;
    if (a1 && ak) {
      a2 = !(a1 = false);
      Z.push(U[X][0]);
    }
    if (a2 && ++a0 > mP.bonusarray[X].loop) {
      a2 = false;
      Y = X = void (a0 = 0);
    }
    if (!a2) {
      ag.children().each(function (al) {
        var an;
        var ao;
        var ap;
        var aq;
        if (this.tagName == "polo" && (an = Number($(this).attr("picto")), aq = $(this).attr("playing") == "true", ao = $(this).attr("mute") == "true", ap = [], aq)) {
          aq = R[an][aj];
          if (ao) {
            ap.push({
              when: 0,
              type: "mute"
            });
          }
          ah.find("user[picto='" + an + "']").each(function (ar) {
            var as = $(this).attr("type");
            var at = Number($(this).attr("when"));
            if (as != "append") {
              ap.push({
                when: at,
                type: as
              });
            }
          });
          if (ap.length > 0) {
            aq = function (ar, as, at) {
              for (var au = ar.numberOfChannels, av = ar.duration, aw = H.createBuffer(au, H.sampleRate * av, H.sampleRate), ax = 0; ax < au; ax++) {
                for (var ay = aw.getChannelData(ax), az = ar.getChannelData(ax), aA = az.length, aB = 0, aC = as, aD = aC, aE = [], aF = 0; aF < at.length; aF++) {
                  var aG = at[aF].when;
                  var aG = Math.round(aG * aA / av);
                  aE.push([aG, at[aF].type]);
                }
                for (var aH = aE.length > 0, aI = 0; aI < aA; aI++) {
                  if (aH && aI >= aE[aB][0]) {
                    aC = aE[aB][1] == "mute" || aE[aB][1] == "remove";
                    if (aE.length <= ++aB && (aH = false, Math.round(aI * 100 / aA) > 95)) {
                      aC = aD;
                    }
                    aD = aC;
                  }
                  if (aC) {
                    ay[aI] = 0;
                  } else {
                    ay[aI] += az[aI];
                  }
                }
              }
              return aw;
            }(aq, ao, ap);
          }
          ai.push(aq);
        }
      });
      ah.find("user[type='bonus']").each(function (al) {
        a1 = true;
        X = Number($(this).attr("bonus"));
        Y = Number($(this).attr("when"));
      });
      if (a1) {
        ah.find("user[type='remove']").each(function (al) {
          var an = Number($(this).attr("picto"));
          var ao = Number($(this).attr("when"));
          if (Y < ao) {
            if (!!function (ap, aq) {
              for (var ar = 0; ar < aq.length; ar++) {
                if (ap == aq[ar]) {
                  return 1;
                }
              }
              return;
            }(an + 1, mP.bonusarray[X].code)) {
              a1 = false;
              Y = undefined;
            }
          }
        });
        Y = 0;
      }
      if (!(!a1 || mP.bonusloopA && af)) {
        ai.push(U[X][1]);
      }
      Z.push(function (al) {
        for (var am = al.length, an = 0, ao = 0, ap = 0; ap < am; ap++) {
          if (al[ap].numberOfChannels > an) {
            an = al[ap].numberOfChannels;
          }
          if (al[ap].duration > ao) {
            ao = al[ap].duration;
          }
        }
        for (var aq = H.createBuffer(an, H.sampleRate * (ao - Q), H.sampleRate), ar = 0; ar < am; ar++) {
          for (var as = 0; as < al[ar].numberOfChannels; as++) {
            for (var at = aq.getChannelData(as), au = al[ar].getChannelData(as), av = 0; av < au.length; av++) {
              at[av] += au[av];
            }
          }
        }
        return aq;
      }(ai));
    }
  });
  if (!st) {
    for (var a3 = j = function (ad) {
        for (var ae = ad.length, af = [], ag = 0, ah = 0; ah < ae; ah++) {
          af.push(ad[ah].numberOfChannels);
          ag += ad[ah].duration;
        }
        ag = Math.ceil(ag);
        for (var ai = af.reduce(function (ap, aq) {
            return Math.min(ap, aq);
          }), aj = H.createBuffer(ai, H.sampleRate * ag, H.sampleRate), ak = 0; ak < ai; ak++) {
          for (var al = aj.getChannelData(ak), am = 0, an = 0; an < ae; an++) {
            var ao = ad[an].getChannelData(ak);
            al.set(ao, am);
            am += ao.length;
          }
        }
        return aj;
      }(Z), a4 = 0.9, a5 = a3.numberOfChannels, a6 = 0; a6 < a5; a6++) {
      for (var a7 = a3.getChannelData(a6), a8 = 0, a9 = 0, aa = 0, ab = a7.length; aa < ab; aa++) {
        if (a7[aa] > a8) {
          a8 = a7[aa];
        }
        if (a7[aa] < a9) {
          a9 = a7[aa];
        }
        if (a7[aa] > a4) {
          a7[aa] = a4;
          0;
        }
        if (a7[aa] < -a4) {
          a7[aa] = -a4;
          0;
        }
      }
    }
    I = j;
    var ac = 0;
    su = new Worker("js/libs/convert-worker.js");
    var I = {
      sampleR: I.sampleRate,
      numberC: I.numberOfChannels,
      leftData: I.getChannelData(0),
      rightData: I.getChannelData(1),
      lng: I.length,
      kbps: O,
      typeToExport: N
    };
    su.postMessage([I]);
    su.onmessage = function (ad) {
      var ae;
      var ad = ad.data;
      if (ad.type == "msg") {
        ac++;
        ae = Math.floor(ac * (100 - J) / 40);
        L.css({
          width: J + (ae = (ae = ae < 5 ? 5 : ae) > 100 ? 100 : ae) + "%"
        });
      } else {
        su.terminate();
        ae = ad.val;
        G = N == "mp3" ? new Blob(ae, {
          type: "audio/mp3"
        }) : new Blob([new DataView(ae)], {
          type: "audio/wav"
        });
        if (window.cordova && cordova.plugins && cordova.plugins.saveDialog) {
          mv.$icon.trigger(iF.down);
          cordova.plugins.saveDialog.saveFile(G, V).then(af => {}).catch(af => {
            if (af != "The dialog has been cancelled") {
              jv({
                error: "file plugin failed"
              });
            }
          });
        } else {
          G = window.URL.createObjectURL(G);
          K.addClass("hide");
          M.attr("href", G).attr("download", V).addClass("enabled");
          la("popup-convert-mix-ready");
        }
        su = null;
        H.close();
        H = null;
      }
    };
    q.addClass("hide");
    K.addClass("show");
  }
}
function sx() {}
async function sx(g) {
  var j = {};
  var k = [];
  var q = {};
  function w(G, H) {
    if (j[G]) {
      if (j[G].type !== H) {
        k.push("File <b>" + G + "</b> must be " + H);
      } else {
        j[G].keep = true;
      }
    } else {
      k.push("File <b>" + G + "</b> is missing");
    }
  }
  if (window.showDirectoryPicker && window.electron) {
    try {
      let G = 0;
      await async function H(I, J = "") {
        for await (const M of I.values()) {
          var K = J ? J + "/" + M.name : M.name;
          if (M.kind === "file") {
            var L = await M.getFile();
            if ((G += L.size) > 104857600) {
              throw new Error("Files size to high (100MB max)");
            }
            j[K] = {
              name: M.name,
              kind: M.kind,
              type: L.type,
              path: K,
              file: L
            };
          } else if (M.kind === "directory") {
            await H(M, K);
          }
        }
      }(await window.showDirectoryPicker({
        desktop: "desktop"
      }));
      if (!j["app.json"]) {
        throw new Error("app.json file is missing");
      }
      var x = await new Promise((I, J) => {
        const K = new FileReader();
        K.onload = () => I(K.result);
        K.onerror = J;
        K.readAsText(j["app.json"].file);
      });
      try {
        var x = JSON.parse(x);
        var y = ["name", "date", "looptime", "totalframe", "bonusloopA", "bonusendloopA", "colors", "animearray", "credit"].filter(I => !(I in x));
        if (y.length > 0) {
          y.forEach(I => {
            k.push("Missing key <b>" + I + "</b> in app.json");
          });
        }
      } catch (I) {
        throw new Error("app.json wrong format");
      }
      if (k.length) {
        throw new Error(k.map(J => J + "[%]").join(""));
      }
      w("app.json", "application/json");
      if (x.animearray) {
        x.animearray.forEach(J => {
          var K = "anime/" + J.name + ".png";
          var L = "anime/" + J.name + ".json";
          var M = "sound/mp3/" + J.name + "_a.mp3";
          var N = "sound/mp3/" + J.name + "_b.mp3";
          w(K, "image/png");
          w(L, "application/json");
          w(M, "audio/mpeg");
          if (!J.uniqsnd) {
            w(N, "audio/mpeg");
          }
        });
      }
      if (x.bonusarray) {
        x.bonusarray.forEach(J => {
          var K = "bonus/" + J.name + ".mp4";
          var L = "bonus/" + J.name + ".svg";
          var M = "sound/mp3/" + J.sound + ".mp3";
          var N = "sound/mp3/" + J.predrop + ".mp3";
          w(K, "video/mp4");
          w(L, "image/svg+xml");
          w(M, "audio/mpeg");
          if (J.predrop) {
            w(N, "audio/mpeg");
          }
        });
      }
      w("image/crew.jpg", "image/jpeg");
      w("image/icon.jpg", "image/jpeg");
      w("image/game-bck.jpg", "image/jpeg");
      w("image/game-picto.png", "image/png");
      w("image/home-screen.jpg", "image/jpeg");
      w("anime/0_polo.png", "image/png");
      if (x.credit) {
        var z;
        var A = [];
        for (z in x.credit) {
          if (["process", "music", "design", "animation"].includes(z)) {
            A.push(...x.credit[z]);
          }
        }
        x.modders = A;
      }
      if (k.length) {
        throw new Error(k.map(K => K + "[%]").join(""));
      }
      var B;
      var C;
      var D = Object.values(j).filter(K => K.hasOwnProperty("keep")).length;
      var E = 0;
      var F = false;
      for (const K in j) {
        if (!(F || j[K].keep !== true)) {
          B = j[K].file;
          (C = new FileReader()).onload = function (L) {
            q[K] = {
              dataURL: L.target.result
            };
            if (++E == D) {
              var L = [];
              var M = hh();
              var N = window.electron && electron.ipc.readUserFile({
                path: "modbox",
                file: "usermods.json"
              });
              (L = N.ok ? N.data : L).unshift({
                version: M,
                folder: "",
                name: x.name,
                crew: x.credit.crewname,
                modders: x.modders,
                date: x.date,
                icon: q["image/icon.jpg"].dataURL
              });
              var N = window.electron && electron.ipc.writeUserFile({
                path: "modbox",
                file: "usermods.json",
                data: L
              });
              if (!N || !N.ok) {
                throw new Error("write mod.json file");
              }
              writeJSONmod = window.electron && electron.ipc.writeUserFile({
                path: "modbox",
                file: M + ".json",
                data: JSON.stringify(q)
              });
              rw = L;
              rQ();
              if (g) {
                g();
              }
            }
          };
          C.onerror = function (L) {
            F = true;
            throw new Error("Error loading files: " + K);
          };
          C.readAsDataURL(B);
        }
      }
    } catch (L) {
      if (!(L instanceof DOMException && L.message.includes("user aborted"))) {
        jv({
          error: L.message,
          buttons: [{
            txt: "Read the DOC",
            func: function () {
              gV("mod");
            }
          }, {
            txt: km("bt.close"),
            func: mt.close
          }]
        });
      }
      if (g) {
        g();
      }
    }
  } else {
    jv({
      error: "unable to import mod",
      buttons: [{
        txt: "Read the DOC",
        func: function () {
          gV("mod");
        }
      }, {
        txt: km("bt.close"),
        func: mt.close
      }]
    });
    if (g) {
      g();
    }
  }
}
var sy = false;
var sz = false;
function sA() {}
function sB(g, h, i) {
  if (i) {
    i();
  }
}
var sC = false;
var sD = false;
function sE() {}
function sF(g, h, i) {}